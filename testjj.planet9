{"app":{"id":"41B83EF1-1712-EF11-96F5-000D3AB39A68","ver":"24.1.13.041","status":"Active","application":"testjj","title":"ONEASL SUPPLIER","createdOn":"2024-05-14T17:32:35.070Z","createdBy":"daird@neptune-software.com","package":"","description":"","disabled":false,"ui5_theme":"sap_belize","cus_theme":"","ui5_version":"customCDN","ui5_url":"https://openui5.hana.ondemand.com/1.71.56/resources/sap-ui-core.js","enableStylesheet":true,"manifest":"","enableObfuscate":false,"compilerTarget":3,"generateVersionOnActivation":false,"activationHistoryCount":0,"printWidth":null,"tabWidth":null,"enableFileStorage":false,"useV2AppHandler":false,"onlyRunLaunchpad":false,"appType":"A","ui5_language":"EN","enableMultiDevelopment":false,"publicAccess":false,"loadLaunchpadCode":null,"loadApplicationCode":null,"componentInterface":null,"roles":[],"enableManifest":false,"css":"/*CSS for headers of input field*/\n\n.highlightInnerInput .sapMInputBaseInner {\n    background: #feff0075;\n}\n\n/*.highlightInnerInput .sapMInputBaseContentWrapper{*/\n\n/*    border:1.5px solid #297676 !important;*/\n\n/*}*/\n\n.sapUiTableTr.sapUiTableRowSel:not(.sapUiTableGroupHeader)>td:not(.sapUiTableTDDummy) {\n    background-color: #fce8e6;\n}\n\n.sapUiTableTr.sapUiTableRowHvr.sapUiTableRowSel:not(.sapUiTableGroupHeader)>td:not(.sapUiTableTDDummy) {\n    background-color: #fce8e6;\n}\n\n.inputfieldheader {\n    color: #505050;\n    text-shadow: none;\n    font-size: 0.85rem;\n}\n\n/**CSS for input fields*/\n\n.inputfield .sapMInputBaseContentWrapper {\n    background: white;\n    border-radius: 3px;\n    border: 1.5px solid #cccccc;\n}\n\n.inputfield .sapMInputBaseInner {\n    color: black;\n}\n\n.inputvalue {\n    color: black;\n}\n\n/*CSS for Bar Header*/\n\n.sapMIBar.sapMSubHeader-CTX {\n    background: #e8e8e852;\n}\n\n.sapMBar {\n    background: #e8e8e852;\n    box-shadow: none;\n}\n\nhtml.sap-desktop .sapMIBar.sapMFooter-CTX {\n    border-top: none;\n}\n\n/**CSS for back button on header*/\n\n.iconNav {\n    border-radius: 50%;\n    padding: 9px;\n    background-color: #0a8caa;\n    color: white;\n    width: 1rem;\n}\n\n.sapMIBar-CTX .sapMLabel {\n    color: #858585;\n}\n\n/*CSS for panels*/\n\n.sapMPanel {\n    background: white;\n}\n\n.panel .sapMPanelBGSolid.sapMPanelContent {\n    margin-top: 1rem;\n    margin-left: 2rem;\n    margin-right: 2rem;\n    margin-bottom: 1rem;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 0px 0px 20px 0px #8888881c;\n    filter: drop-shadow(0px 1px 14px rgba(0, 0, 0, 0.161));\n}\n\n.panel .sapMPanelContent:not(.sapMPanelBGTransparent) {\n    border-bottom: none;\n}\n\n.panel .sapMPanelContent {\n    padding: 0.8rem;\n}\n\n/*CSS for Tab bar*/\n\n.tabBar .sapMITBContent {\n    padding: 0rem;\n}\n\n.tabBar .sapMITBHead {\n    margin: 0rem 0rem 0rem 0rem;\n}\n\n.tabBar .sapMITBInLine.sapMITBTextOnly>.sapMITBVertical {\n    width: 13rem;\n    height: 3.5rem;\n}\n\n.tabBar .sapMITBTextOnly .sapMITBFilterDefault.sapMITBSelected>.sapMITBText {\n    line-height: 1.6rem;\n    height: 1.6rem;\n    border: 1.5px solid #0a8caa;\n    border-radius: 3px;\n    color: white;\n    font-size: 0.85rem;\n    background: #0a8caa;\n    text-shadow: none;\n    font-weight: bold;\n    text-align: center;\n}\n\n.tabBar .sapMITBInLine .sapMITBFilter>.sapMITBText {\n    line-height: 1.6rem;\n    height: 1.6rem;\n    border: 1.5px solid #e8e8e8;\n    border-radius: 3px;\n    background: #f7f7f7;\n    font-size: 0.85rem;\n    font-weight: bold;\n    color: #0a8caa;\n    text-align: center;\n    text-shadow: none;\n}\n\n.tabBar .sapMITBSelected>.sapMITBContentArrow {\n    border-bottom: none;\n}\n\n.tabBar .sapMITBInLine .sapMITBFilter>.sapMITBText {\n    margin: 0.5rem 0rem 0rem 0rem;\n}\n\n.tabBar .sapMITH {\n    box-shadow: none;\n    background-color: white;\n    border-bottom: none;\n}\n\n.tabBar .sapMITBTextOnly .sapMITBFilter {\n    padding: 0 0.5rem;\n}\n\n.tabBar .sapMBar {\n    border: 2px solid #098baa;\n    ;\n    background: white;\n}\n\n.tabBar .sapMITBContent {\n    border-bottom: none;\n}\n\n/*CSS for forms*/\n\n.simpleForm .sapUiFormCLContainer {\n    padding: 0rem;\n}\n\n.simpleForm .sapUiFormResLayout>div {\n    padding: 0rem;\n}\n\n.formHeader {\n    margin-left: 0.3rem;\n    font-weight: bold;\n    color: black;\n    ;\n    font-size: 0.8rem;\n}\n\n/**CSS for buttons*/\n\n.bluebtn span.sapMBtnInner {\n    height: 1.6rem;\n    border-radius: 3px;\n    font-size: 0.8rem;\n    font-weight: bold;\n    background-color: #0a8caa !important;\n    border-color: #0a8caa !important;\n    color: white !important;\n    text-shadow: none;\n}\n\n.bluebtn .sapMBtnContent {\n    line-height: 1.6rem;\n}\n\n.bluebtn .sapMBtnIcon {\n    line-height: 1.6rem;\n    color: white;\n}\n\n.bluebtn .sapMSB .sapMSBArrow .sapMBtnIcon {\n    font-size: 1rem;\n}\n\n.redbtn span.sapMBtnInner {\n    height: 1.6rem;\n    border-radius: 3px;\n    font-size: 0.8rem;\n    font-weight: bold;\n    background-color: #b51602 !important;\n    border-color: #b51602 !important;\n    color: white !important;\n    text-shadow: none;\n}\n\n.redbtn .sapMBtnContent {\n    line-height: 1.6rem;\n}\n\n.greenbtn span.sapMBtnInner {\n    height: 1.6rem;\n    border-radius: 3px;\n    font-size: 0.8rem;\n    font-weight: bold;\n    background-color: #099d58 !important;\n    border-color: #099d58 !important;\n    color: white !important;\n    text-shadow: none;\n}\n\n.greenbtn .sapMBtnContent {\n    line-height: 1.6rem;\n}\n\n/*css for edit button in actions column and elsewhere in app*/\n\n.editbtn span.sapMBtnInner {\n    border: 1px;\n    background-color: #0a8caa !important;\n    border-color: #0a8caa !important;\n    color: white;\n    text-shadow: none;\n    border-radius: 50%;\n}\n\n.editbtn span.sapMBtnIcon {\n    color: white;\n    font-size: 0.8rem;\n}\n\n/*css for view button used elsewhere in the app*/\n\n.viewbtn span.sapMBtnInner {\n    border: 1px;\n    background-color: #099d58 !important;\n    border-color: #099d58 !important;\n    color: white;\n    text-shadow: none;\n    border-radius: 50%;\n}\n\n.viewbtn span.sapMBtnIcon {\n    color: white;\n    font-size: 0.8rem;\n    margin-top: 0.05rem !important;\n    margin-right: 0.4rem;\n}\n\n/*css for delete button used elsewhere in the app*/\n\n.deletebtn span.sapMBtnInner {\n    border: 1px;\n    background-color: #b51602 !important;\n    border-color: #b51602 !important;\n    color: white;\n    text-shadow: none;\n    border-radius: 50%;\n}\n\n.deletebtn span.sapMBtnIcon {\n    color: white;\n    font-size: 0.8rem;\n}\n\n/**CSS for comboboxes**/\n\n.combobox .sapMInputBaseContentWrapper {\n    border-radius: 3px;\n    border: 1.5px solid #cccccc;\n    background: #ffffff;\n}\n\n/*CSS for Text areas*/\n\n.textbox .sapMInputBaseContentWrapper {\n    background: white;\n    border: 1.5px solid #cccccc;\n    border-radius: 3px;\n}\n\n/**CSS for panel header*/\n\n.panelHeader {\n    font-weight: bold;\n    border-radius: 3px;\n    border: 2px solid #319bb3;\n}\n\n/*CSS for questionnaire panels*/\n\n.questionPanel .sapMPanelExpandableIcon {\n    color: #319bb3;\n}\n\n.questionPanel .sapMITBContent {\n    width: unset;\n    border-bottom: none;\n}\n\n.questionPanel .sapMPanelHdr {\n    padding-left: 1rem !important;\n    height: 2rem;\n    line-height: 2rem;\n    background-color: white;\n    border: 2px solid #319bb3;\n    border-radius: 3px;\n    color: black;\n    font-size: 0.8rem;\n    font-weight: bold;\n}\n\n.questionPanel .sapMPanelWrappingDiv {\n    border-bottom: none;\n}\n\n.questionPanel .sapMPanelBGSolid.sapMPanelContent.sapMPanelExpandablePart {\n    border-right: 2px solid #dedede;\n    border-bottom: 2px solid #dedede;\n    border-left: 2px solid #dedede;\n    border-radius: 3px;\n    margin-left: 2rem;\n    margin-right: 2rem;\n}\n\n/**CSS for approversPanel*/\n\n.approversPanel .sapMPanelBGTranslucent.sapMPanelContent {\n    margin-top: 1rem;\n    margin-left: 2rem;\n    margin-right: 2rem;\n    margin-bottom: 1rem;\n    background-color: white;\n    border-radius: 10px;\n    box-shadow: 0px 0px 20px 0px #8888881c;\n    filter: drop-shadow(0px 1px 14px rgba(0, 0, 0, 0.161));\n}\n\n.sapMPanelContent {\n    padding: 0rem 0rem 0rem 0rem;\n}\n\n.sapMPanelContent:not(.sapMPanelBGTransparent) {\n    border-bottom: none;\n}\n\n.page {\n    background-color: white;\n}\n\n/*CSS for table*/\n\n/*CSS for table*/\n\n.table .sapUiTableCol {\n    border-right: 1px solid #cfcfcf;\n    background-color: #e8e8e8;\n}\n\n.table .sapUiTableColCell>.sapMLabel {\n    font-weight: bold !important;\n}\n\n.table .sapUiTableHSbBg {\n    background: none;\n}\n\n/**CSS for dialogs*/\n\n.dialogBox .sapMDialog>header.sapMDialogTitle .sapMTitle {\n    background: #b51602 !important;\n}\n\n.dialogBox .sapMDialog:not(.sapMDialogWithSubHeader)>header>.sapMIBar,\n.sapMDialog>header:last-of-type .sapMIBar {\n    box-shadow: none;\n}\n\n.dialogBox .sapMDialog>header.sapMDialogTitle .sapMTitle {\n    color: white !important;\n    text-shadow: none;\n}\n\n.dialogBox .sapMBarPH {\n    padding: 0rem;\n    background: #b51602;\n}\n\n.sapUiSizeCompact.sapMDialog>.sapMDialogTitle .sapMHeader-CTX {\n    padding-top: 0rem;\n    padding-bottom: 0rem;\n}\n\n.sapMDialog>header.sapMDialogTitle .sapMTitle {\n    color: white;\n    /*temp*/\n    text-shadow: none;\n}\n\nhtml.sap-desktop .sapContrast.sapMIBar.sapMFooter-CTX {\n    background: white;\n    border-top: none;\n}\n\n.totalRecords {\n    color: #b51602;\n    font-size: 0.9rem;\n    font-weight: bold;\n}\n\n.sapMPanel>.sapMPanelHdr {\n    border-bottom: none;\n}\n\n.subpanels .sapMPanelHdr {\n    font-size: 0.9rem;\n    margin-left: 2rem;\n    margin-right: 2rem;\n    border: 2px solid #098baa;\n    background: white;\n    height: 2rem;\n    line-height: 2rem;\n    border-radius: 3px;\n    font-weight: bold;\n}\n\n.questionPanel .sapMLIB {\n    margin-right: 2rem;\n    margin-left: 2rem !important;\n    border: 1px solid #DEDEDE;\n    padding: 4px;\n}\n\n/*STANDARD CSS**/\n\n/*for scrollbar*/\n\nhtml.sap-desktop ::-webkit-scrollbar {\n    background-color: #ffffff;\n    width: 6px !important;\n}\n\nhtml.sap-desktop ::-webkit-scrollbar-thumb {\n    border-radius: 10px;\n}\n\n.blueicon {\n    margin-right: 0.5rem;\n    padding: 5px;\n    background: #0a8caa;\n    color: white;\n    border-radius: 50%;\n}\n\n.redicon {\n    padding: 5px;\n    background: #b51602;\n    color: white;\n    border-radius: 50%;\n}\n\n.greenicon {\n    margin-right: 0.5rem;\n    padding: 5px;\n    background: #099d58;\n    color: white;\n    border-radius: 50%;\n}\n\n.warning .sapMInputBaseContentWrapper {\n    box-shadow: 0px 0px 0px 0px rgb(255, 204, 0);\n    filter: drop-shadow(0px 0px 3px rgba(255, 204, 0));\n    border: 1.5px solid #FFCC00;\n    border-radius: 3px;\n}\n\n.error .sapMInputBaseContentWrapper {\n    background: white;\n    border-radius: 3px;\n    border: 1.5px solid #ee2000;\n    box-shadow: 0px 0px 0px 0px rgb(238, 32, 0);\n    filter: drop-shadow(0px 0px 3px rgba(238, 32, 0));\n}\n\n.error .sapMInputBaseContentWrapper:hover {\n    background: white;\n    border-radius: 3px;\n    border: 1.5px solid #ee2000 !important;\n    box-shadow: 0px 0px 0px 0px rgb(238, 32, 0);\n    filter: drop-shadow(0px 0px 3px rgba(238, 32, 0));\n}\n\n/*CSS for outlines -- searchDUNS*/\n\nhtml:not([data-sap-ui-browser^=\"ie\"]):not([data-sap-ui-browser^=\"ed\"]) .sapUiIcon:focus {\n    outline: none !important;\n}\n\n/*CSS for border hovering*/\n\n.sapMInputBaseContentWrapper:not(.sapMInputBaseReadonlyWrapper):not(.sapMInputBaseContentWrapperState):not(.sapMInputBaseDisabledWrapper):hover {\n    border-color: #ababab;\n}\n\n/**CSS for removing outltines for input fields*/\n\n.sapMInputBaseInner:focus,\n.sapMInputBaseInner:active {\n    outline: none !important;\n}\n\n.sapMFocus .sapMInputBaseContentWrapper::before {\n    border: none !important;\n}\n\n.align {\n    margin-top: 1.5rem;\n}\n\n/***********************************eSign CSS*************************************************/\n\n/*CSS for Login grid on the page*/\n\n/*CSS for background of the login screen*/\n\n.sapMGlobalBackgroundColorStrong.sapUiUfdShellBG {\n    background-size: cover;\n    background-position: bottom;\n    display: block;\n    background-color: #FFFFFF !important;\n    background-image: url(/media/root/ONEASL/loginimage.jpg);\n}\n\n.sap-desktop .sapMCbHasLabel:focus>.sapMCbHasLabelBg {\n    outline: none !important;\n}\n\n/*CSS for hiding the sub header at the top fo page*/\n\n.bar {\n    background-color: unset !important;\n    box-shadow: none !important;\n}\n\n/*CSS for Login grid on the page*/\n\n.loginGrid {\n    width: 100%;\n    max-width: 450px;\n    min-width: 350px;\n    text-align: center;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -52%);\n}\n\n/*login button css by vighnesh*/\n\n.buttonLoginRed .sapMBtnContent {\n    color: white;\n    font-size: 1rem;\n}\n\n.buttonLoginRed .sapMBtnInner {\n    border-radius: 5px;\n    width: 10rem;\n    font-weight: bold;\n    font-size: 0.8rem;\n    border-color: #e20000;\n    background-color: #e20000;\n    color: white !important;\n    text-shadow: none;\n}\n\n.buttonLoginRed .sapMBtnInner:hover {\n    border-color: #ff0000;\n    background: #e20000;\n}\n\n.buttonLoginGreen .sapMBtnContent {\n    color: white;\n    font-size: 1rem;\n}\n\n.buttonLoginGreen .sapMBtnInner {\n    border-radius: 5px;\n    width: 10rem;\n    font-weight: bold;\n    font-size: 0.8rem;\n    border-color: #099d58;\n    background-color: #099d58;\n    color: white !important;\n    text-shadow: none;\n}\n\n.buttonLoginGreen .sapMBtnInner:hover {\n    border-color: #099d58;\n    background: #099d58;\n}\n\n/*CSS for input fields*/\n\n.inputFieldLogin .sapMInputDivWrapper {\n    background-color: #d0d0d0 !important;\n    border-radius: 7px !important;\n}\n\n.inputFieldLogin .sapMInputBaseInner {\n    border: none;\n    background: #e6e6e6;\n    border-radius: 5px;\n    width: 25rem;\n    background-image: url(/media/root/DiCE/images/loginIcon.png);\n    background-repeat: no-repeat;\n    padding-left: 35px;\n    background-position-x: 4px;\n    background-position-y: 4px;\n}\n\n.inputFieldLogin .sapMInputBaseInner:hover {\n    border: none;\n    background: #cacaca;\n    border-radius: 5px;\n    width: 25rem;\n}\n\n.inputFieldLogin .sapMInputBaseInner::-webkit-input-placeholder {\n    font-size: 0.875rem;\n    font-style: normal !important;\n    color: #747474 !important;\n}\n\n.inputFieldLogin .sapMInputBaseErrorInner {\n    border: 1.5px solid #e20000;\n}\n\n.inputFieldLogin .sapMInputBaseErrorInner:hover {\n    border: 1.5px solid #ff0000;\n}\n\n.eSignLogin .sapMInputBaseInner:hover {\n    border: none;\n    background: #cacaca;\n    border-radius: 5px;\n    background-image: url(/media/root/DiCE/images/passwordIcon.png);\n    background-repeat: no-repeat;\n    background-position-x: 4px;\n    background-position-y: 4px;\n}\n\n.eSignLoginUser .sapMInputBaseInner {\n    border: none;\n    outline: none;\n    background: #e6e6e6;\n    border-radius: 5px;\n    width: 22rem;\n    background-image: url(/media/root/DiCE/images/loginIcon.png);\n    background-repeat: no-repeat;\n    padding-left: 35px;\n    background-position-x: 4px;\n    background-position-y: 4px;\n}\n\n/*.eSignLoginUser.sapMFlexBoxBGTransparent.sapMFlexItem.sapMFlexItemAlignAuto {*/\n\n/*    width: 100% !important;*/\n\n/*}*/\n\n.eSignLogin .sapMInputBaseInner {\n    border: none;\n    outline: none;\n    background: #e6e6e6;\n    border-radius: 5px;\n    border-color: #bfbfbf;\n    width: 22rem;\n    background-image: url(/media/root/DiCE/images/passwordIcon.png);\n    background-repeat: no-repeat;\n    padding-left: 35px;\n    background-size: 25px;\n    background-position-x: 4px;\n    background-position-y: 4px;\n}\n\n.titleColorMain {\n    font-size: 2.5rem;\n    color: #676767 !important;\n    font-weight: bold !important;\n}\n\n/*CSS for subtitle below title*/\n\n.titleColor {\n    font-size: 1.2rem !important;\n    color: #6c6c6c !important;\n}\n\n.alignbtn {\n    margin-top: 1.3rem;\n}\n\n.link {\n    font-size: 0.85rem;\n    font-weight: bold;\n    color: #2197b2;\n    text-decoration: underline;\n}\n\n.link:hover {\n    font-size: 0.85rem;\n    font-weight: bold;\n    color: #2197b2 !important;\n    text-decoration: underline;\n}\n\n/***************************************************************************************************/\n\n/*CSS for block layout for dialog BU*/\n\n.sapUiBlockLayoutSizeL:not(.sapUiBlockLayoutKeepFontSize) .sapUiBlockCellContent {\n    padding: 0.6rem;\n}\n\n.sap-desktop .sapMCb:not(.sapMCbBgDis):not(.sapMCbDisplayOnly).sapMCbHasLabel:focus:before {\n    outline: none;\n}\n\n.sapUiBlockLayoutBackgroundDashboard .sapUiBlockCellContent {\n    box-shadow: none;\n}\n\n.BU {\n    border-radius: 10px;\n    background-color: white;\n    margin: 0.8rem;\n    filter: drop-shadow(0px 1px 14px rgba(0, 0, 0, 0.161));\n}\n\n.BU .sapUiBlockCellContent .sapUiBlockCellTitle {\n    font-size: 1rem;\n    font-weight: bold;\n    color: black\n}\n\n.error .sapMCbBg {\n    border: 1.5px solid #b51602;\n    filter: drop-shadow(0px 1px 14px rgba(0, 0, 0, 0.161));\n    box-shadow: 0px 0px 5px 0px rgb(238, 32, 0);\n}\n\n.checkBoxBU .sapMLabel {\n    font-weight: bold;\n}\n\n/*2020ENHANCEMENTSVIGHNESH*/\n\n.resPop .sapMIBar-CTX .sapMTitle {\n    color: #222222;\n    font-weight: bold;\n    text-shadow: none;\n}\n\n.resPop .sapUiFormResGrid>div {\n    padding: 0.2rem 0.2rem;\n}\n\n.sapMRbG {\n    display: inline-flex;\n}","header":"<script src=\"https://sdk.amazonaws.com/js/aws-sdk-2.1.12.min.js\"></script>","objects":[{"fieldNo":"f6507b4f-f190-4b33-f2a7-adadf46a9d6c","fieldName":"oApp","fieldParent":0,"fieldPos":1,"fieldType":"sap.m.App","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"f703ee42-ad81-4baa-df9a-d91b14765f9c","fieldName":"pageSupplier","fieldParent":"f6507b4f-f190-4b33-f2a7-adadf46a9d6c","fieldPos":2,"fieldType":"sap.m.Page","script":"","customComponent":false,"bindingValue":"asl_SupplierInformation_v2>getSupplierInformationV2","bindingType":"u","bindingSource":"API","bindingParentID":"d9dd7396-94e0-48f7-9552-b1c4d44ca8ef","bindingPathID":"2d425013-c29a-4dbf-d183-a4e25edbf914","request":[],"response":[],"attributes":[{"attribute":"showHeader","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Transparent","script":"","translation":[]}]},{"fieldNo":"40097b6e-eea2-4e23-b419-c429251e80cb","fieldName":"oBarHeader","fieldParent":"f703ee42-ad81-4baa-df9a-d91b14765f9c","fieldPos":3,"fieldType":"sap.m.Bar","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"setSubHeader","script":"","translation":[]}]},{"fieldNo":"68395521-bcef-4898-8735-7fd28559e126","fieldName":"oLeft","fieldParent":"40097b6e-eea2-4e23-b419-c429251e80cb","fieldPos":4,"fieldType":"neptune.BarContent","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"42b1862a-7b85-4284-8e90-46a0c1782fcd","fieldName":"oIconBackBtn","fieldParent":"68395521-bcef-4898-8735-7fd28559e126","fieldPos":5,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"tooltip","grouping":"Properties","value":"Navigate back to dashboard","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"iconNav","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://nav-back","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: system will not ask the save confirmation every time when user does not make any changes\nUPDATED BY: VIGHNESH\nUPDATED ON: OCT 4, 2021\n2021ENHANCEMENTS\n*/\nif (g_action !== 'VIEW') {\n    if (g_action === \"BATCHUPLOAD\") {\n\n        g_goToBatchDashClicked = true;\n\n        //2198 -- to check whether material is validate & closed under material tab -- first level of check\n        if (isMatEdited(g_selectedRole)) {\n            return;\n        }\n\n        //2198 -- added this code to check whether user clicked on UPDATE/SUBMIT to push data to DB -- second level check\n        if (checkMatDataLoss(g_selectedRole)) {\n            return;\n        }\n\n        if (checkGlobalDataLoss(g_selectedRole)) {\n            return;\n        } else {\n            AppCache.Load('oneasl_batch_upload', { //2021ENH\n                startParams: {\n                    selectedFilterKey: g_batchupload_selectedFilter_key\n                }\n            });\n            g_goToBatchDashClicked = false;\n\n        }\n\n\n    } else {\n\n        g_goToDashClicked = true;\n\n        //2198 -- to check whether material is validate & closed under material tab -- first level of check\n        if (isMatEdited(g_selectedRole)) {\n            return;\n        }\n\n        //2198 -- added this code to check whether user clicked on UPDATE/SUBMIT to push data to DB -- second level check\n        if (checkMatDataLoss(g_selectedRole)) {\n            return;\n        }\n\n        if (checkGlobalDataLoss(g_selectedRole)) {\n            return;\n        } else {\n            goBackToDashboard();\n        }\n\n    }\n} else {\n    goBackToDashboard();\n}","translation":[]}]},{"fieldNo":"614c82e6-4bc7-4ffe-8751-32b23de88864","fieldName":"oLabelHomePage","fieldParent":"68395521-bcef-4898-8735-7fd28559e126","fieldPos":6,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"HOME / SUPPLIER RECORD","script":"","translation":[{"language":"DE","value":"Eingabe Transformation Bestellung"},{"language":"FR","value":"entrer commande transformation"}]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"breadcrumbs","script":"","translation":[]}]},{"fieldNo":"8793e3a5-3bc5-450e-e970-4020cd6d7582","fieldName":"oPanelReqInfo","fieldParent":"f703ee42-ad81-4baa-df9a-d91b14765f9c","fieldPos":7,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"d8cd72b4-33d0-4cfa-97a3-61287b39708f","fieldName":"oHBoxReqInfo","fieldParent":"8793e3a5-3bc5-450e-e970-4020cd6d7582","fieldPos":8,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"393b4d6a-57ee-461f-b7c8-48dbed91ac83","fieldName":"vboxReqName","fieldParent":"d8cd72b4-33d0-4cfa-97a3-61287b39708f","fieldPos":9,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"2c6b4379-4d0e-4a37-aaeb-91abeea57369","fieldName":"oLabelReqName","fieldParent":"393b4d6a-57ee-461f-b7c8-48dbed91ac83","fieldPos":10,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Requester Name:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"bf0ca3a0-eea2-484f-f4fa-20a08e648e63","fieldName":"oTextReqName","fieldParent":"393b4d6a-57ee-461f-b7c8-48dbed91ac83","fieldPos":11,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/requesterName}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"8dd991b1-8e30-425d-c628-292969efdb3a","fieldName":"vboxReqEmail","fieldParent":"d8cd72b4-33d0-4cfa-97a3-61287b39708f","fieldPos":12,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"4b380c2b-da2f-406e-cb2c-387bbd2af766","fieldName":"oLabelReqEmail","fieldParent":"8dd991b1-8e30-425d-c628-292969efdb3a","fieldPos":13,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Requester Email:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"642c0fc8-62ec-42e4-a46a-c3dff2e4dbd8","fieldName":"oTextReqEmail","fieldParent":"8dd991b1-8e30-425d-c628-292969efdb3a","fieldPos":14,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/requesterEmail}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"f8e93d79-0f82-43e8-906b-3510b9c90544","fieldName":"vboxReqDate","fieldParent":"d8cd72b4-33d0-4cfa-97a3-61287b39708f","fieldPos":15,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"fc1ac360-638f-4d55-ca06-d5cfa496d4b3","fieldName":"oLabelReqDate","fieldParent":"f8e93d79-0f82-43e8-906b-3510b9c90544","fieldPos":16,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Request Date:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"6a6058c6-617f-4a3c-b1f3-179bfe22964f","fieldName":"oTextReqDate","fieldParent":"f8e93d79-0f82-43e8-906b-3510b9c90544","fieldPos":17,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/requestDate}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"3e89bd43-c8cb-4afd-9bfb-d7d538811e50","fieldName":"vboxReqType","fieldParent":"d8cd72b4-33d0-4cfa-97a3-61287b39708f","fieldPos":18,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"34b1c9c0-da6a-4a31-ddc2-aaf9cb432ba2","fieldName":"oLabelReqType","fieldParent":"3e89bd43-c8cb-4afd-9bfb-d7d538811e50","fieldPos":19,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Type of Request:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"39e2f0d0-6e24-4076-e224-98b4ee277149","fieldName":"oTextReqType","fieldParent":"3e89bd43-c8cb-4afd-9bfb-d7d538811e50","fieldPos":20,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/typeOfRequest}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"99ef65fc-bf81-4ccc-9057-43ddaf5a6474","fieldName":"vboxReqSupID","fieldParent":"d8cd72b4-33d0-4cfa-97a3-61287b39708f","fieldPos":21,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"ec8d2e56-4528-4e63-88d2-4751b5330d94","fieldName":"oLabelReqSupID","fieldParent":"99ef65fc-bf81-4ccc-9057-43ddaf5a6474","fieldPos":22,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Supplier ID Number:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"3382d8e1-f972-4e48-ce3c-6c24ee02e476","fieldName":"oTextReqSupID","fieldParent":"99ef65fc-bf81-4ccc-9057-43ddaf5a6474","fieldPos":23,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/supplierInfoId}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"5d8469bf-c5e5-4810-96d4-4f9560995631","fieldName":"vboxReqSupStaticID","fieldParent":"d8cd72b4-33d0-4cfa-97a3-61287b39708f","fieldPos":24,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"63080330-ef5e-440d-b560-6ab3b18d8f05","fieldName":"labReqSupStaticID","fieldParent":"5d8469bf-c5e5-4810-96d4-4f9560995631","fieldPos":25,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Static Supplier ID:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"9d9fb0d2-38ef-40a4-f255-4ff1d86c8a5d","fieldName":"txtReqSupStaticID","fieldParent":"5d8469bf-c5e5-4810-96d4-4f9560995631","fieldPos":26,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/supplierRecordId}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"6bc4b42f-06f2-4746-83f1-83997d412fb2","fieldName":"vboxReqSupName","fieldParent":"d8cd72b4-33d0-4cfa-97a3-61287b39708f","fieldPos":27,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"863765a1-f892-4e34-e77e-c457ad606dda","fieldName":"oHBoxReqSupName","fieldParent":"6bc4b42f-06f2-4746-83f1-83997d412fb2","fieldPos":28,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]}]},{"fieldNo":"0519310b-a671-4731-c465-d42673c1153f","fieldName":"oLabelReqSupName","fieldParent":"863765a1-f892-4e34-e77e-c457ad606dda","fieldPos":29,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Supplier Name:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"6ddafc04-bdeb-4621-e967-f15b5471c0e2","fieldName":"oIconReqSupName","fieldParent":"863765a1-f892-4e34-e77e-c457ad606dda","fieldPos":30,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"tooltip","grouping":"Properties","value":"Click to view Supplier Details","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/info-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"openSupDetials(this);","script":"openSupDetials(this);","translation":[]}]},{"fieldNo":"45760e2d-7a9d-4de7-9be3-ea521be85ad7","fieldName":"oTextReqSupName","fieldParent":"6bc4b42f-06f2-4746-83f1-83997d412fb2","fieldPos":31,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/supplierName}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"9132fa0f-3291-4073-94dd-2097566083a9","fieldName":"vboxReqTime","fieldParent":"d8cd72b4-33d0-4cfa-97a3-61287b39708f","fieldPos":32,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"6e301f7c-18af-4c44-a165-2fec5f1d9bd4","fieldName":"oLabelReqTime","fieldParent":"9132fa0f-3291-4073-94dd-2097566083a9","fieldPos":33,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Requested Timing to Get Supplier on ASL:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"cfa93494-10db-4b63-b441-d881fd8307e4","fieldName":"oInputReqTime","fieldParent":"9132fa0f-3291-4073-94dd-2097566083a9","fieldPos":34,"fieldType":"sap.m.DatePicker","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"50%","script":"","translation":[]},{"attribute":"valueFormat","grouping":"Properties","value":"MM/dd/YYYY","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/requestedTimeOnASL}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"reqTiming","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MM/dd/YYYY","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: Oct 11, 2021\n2021 ENHANCEMENTS\n*/\nif (this.getValue() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"reqTiming\");\n}\n\n\nlet requestorTiming = this.getDateValue().getTime();\nrequestorTiming += 86399999;\nlet todaysDate = new Date().getTime();\nif (requestorTiming <= todaysDate) {\n    showMessageToast(\"Requester Timing to get Supplier on ASL must be on or after Today's Date\");\n    this.setDateValue(new Date(todaysDate));\n}\n\ng_dataLoss = true;","translation":[]}]},{"fieldNo":"ce99785d-bd0e-431b-e479-7362aca184a8","fieldName":"oIconTabBarSupplierInfo","fieldParent":"f703ee42-ad81-4baa-df9a-d91b14765f9c","fieldPos":35,"fieldType":"sap.m.IconTabBar","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"tabBar","script":"","translation":[]},{"attribute":"expandable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*\nVISIBILITY OF  BUTTONS FOR -\n\nRESET - REQ \nSAVE AS DRAFT - REQ \n\nADD MATERIAL - REQ, ASL \nCANCEL MATERIAL - REQ, ASL, SQA\nSAVE MATERIAL - REQ, ASL ONLY WHEN MATERIAL PANEL IS OPEN\nUPDATE MATERIAL - REQ, ASL, SQA ONLY WHEN MATERIAL PANEL IS OPEN\n\nCANCEL - ALL ROLES,\nRETURN TO REQUESTOR - SQA AND ONLY UNDER MATERIAL TAB\nCONFIRM - ALL ROLES EXCEPT REQ AND ONLY UNDER APPROVERS TAB \n\nSUBMIT - REQ \nUPDATE - ASL, SQA ONLY UNDER MATERIAL TAB\n\n*/\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: oct 28, 2021\nremoved unwanted comments & removed check for material information opened\n*/\n\nif (oIconTabBarSupplierInfo.getSelectedKey() === \"SUPPTAB\") {\n\n    /*\n    2021ENHANCEMENTS -- sprint 3\n    updated by : vighnesh\n    updated on: oct 28, 2021\n    commenting the function since we are not closing the material anymore\n    */\n\n    /*\n    if (isMatRecordEditable(null, true) === false) {\n        oIconTabBarSupplierInfo.setSelectedKey('MATTAB');\n        return;\n    }\n    */\n\n    //2021ENHANCEMENTS -- added this code to check whether material data is changed\n    if (isMatEdited(g_selectedRole)) {\n        oIconTabBarSupplierInfo.setSelectedKey('MATTAB');\n        return;\n    }\n\n    //2198\n    materialTableBtnToggle('CANCEL');\n\n    btnSaveMaterial.setVisible(false);\n    btnUpdMaterial.setVisible(false);\n    btnApproverConfirm.setVisible(false);\n\n\n    /*Hide  Update button if Supplier page status is uneditable*/\n    var getCurrentPageEnableStatus = oInputSupplierName.getEnabled();\n\n    btnUpdate.setVisible(g_selectedRole === 'ASL' && getCurrentPageEnableStatus ? true : false);\n    btnReset.setVisible(g_selectedRole === 'REQ' && getCurrentPageEnableStatus ? true : false);\n    btnSaveAsDraft.setVisible(g_selectedRole === 'REQ' && getCurrentPageEnableStatus ? true : false);\n    btnSubmit.setVisible(g_selectedRole === 'REQ' && getCurrentPageEnableStatus ? true : false);\n\n\n} else if (oIconTabBarSupplierInfo.getSelectedKey() === \"MATTAB\") {\n\n    /*If material panel is open - Buttons VISIBILITY is already determined by materialTableBtnToggle function*/\n    if (oPanelMaterialInformation.getVisible() === false) {\n        btnReset.setVisible(false);\n        btnSaveAsDraft.setVisible(g_selectedRole === 'REQ' && disableSupplierPageCheck_1() ? true : false) //(g_selectedRole === 'REQ' ? true : false);\n        btnApproverConfirm.setVisible(false);\n\n\n        btnSubmit.setVisible(g_selectedRole === 'REQ' ? true : false);\n\n        if (g_selectedRole === 'ASL' || g_selectedRole === 'SQA') {\n            /*Check whether we have any editable Material in table or not*/\n            var f = ModelData.FindFirst(oTableAddMaterial, \"editFlag\", true);\n            btnUpdate.setVisible(f ? true : false);\n        } else {\n            btnUpdate.setVisible(false);\n        }\n\n        /*Cancel and Add button shouldn't be visible together*/\n        //08/10/2020\n        if (g_action === 'VIEW' || btnCloseMaterial.getVisible()) {\n            btnAddMaterial.setVisible(false);\n        } else {\n            btnAddMaterial.setVisible(g_selectedRole === 'REQ' && disableSupplierPageCheck_1() && isAddMaterialBtnVisible() ? true : false);\n\n        }\n    } else {\n        /*Need to hide reset button on ASL and SQA*/\n        btnReset.setVisible(g_selectedRole === 'REQ' ? true : false);\n    }\n} else if (oIconTabBarSupplierInfo.getSelectedKey() === \"APPTAB\") {\n\n    /*\n    2021ENHANCEMENTS -- sprint 3\n    updated by : vighnesh\n    updated on: oct 28, 2021\n    commenting the function since we are not closing the material anymore\n    */\n\n    /*\n    if (isMatRecordEditable(null, true) === false) {\n        oIconTabBarSupplierInfo.setSelectedKey('MATTAB');\n        return;\n    }\n    */\n\n    //2021ENHANCEMENTS -- added this code to check whether material data is changed\n    if (isMatEdited(g_selectedRole)) {\n        oIconTabBarSupplierInfo.setSelectedKey('MATTAB');\n        return;\n    } else if (checkMatDataLoss(g_selectedRole)) {\n        //2198 -- added this code to check whether user clicked on UPDATE/SUBMIT to push data to DB\n        oIconTabBarSupplierInfo.setSelectedKey('MATTAB');\n        return;\n    }\n\n\n    materialTableBtnToggle('CANCEL');\n\n\n    /*remove selections from table and collapse panel*/\n    if (g_update_approver_material_table === false) {\n\n        oIconTabBarApproversList.setVisible(false);\n        boxComments.setVisible(false);\n    }\n    g_update_approver_material_table = false; //CLEAR GLOBAL\n\n\n    btnReset.setVisible(false);\n    btnSaveAsDraft.setVisible(false);\n\n    btnApproverConfirm.setVisible(g_action !== 'VIEW' && oIconTabBarApproversList.getVisible() ? true : false);\n\n    btnSubmit.setVisible(false);\n    btnUpdate.setVisible(false);\n\n    btnUpdMaterial.setVisible(false);\n    btnSaveMaterial.setVisible(false);\n}\n\n/*Hide Approvers tab if any item is in DRAFT state*/\nif (g_action !== 'ADD' && oTableAddMaterial.getModel().getData().length > 0) {\n    var qual = ModelData.FindFirst(oTableAddMaterial, \"qualificationStatus\", \"DRAFT\", \"NE\");\n    oIconTabFilterApprovers.setVisible(qual && qual.matInfoId ? true : false);\n} else {\n    oIconTabFilterApprovers.setVisible(false);\n}\n\n\nbtnReset.setEnabled(true);","translation":[]}]},{"fieldNo":"687a91df-a93e-477a-dad3-5d216be8c1d6","fieldName":"oIconTabFilterSupplierInfo","fieldParent":"ce99785d-bd0e-431b-e479-7362aca184a8","fieldPos":36,"fieldType":"sap.m.IconTabFilter","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Supplier Information","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"SUPPTAB","script":"","translation":[]}]},{"fieldNo":"a9f601bd-b1ff-4f62-a3cc-eab660af6d56","fieldName":"oPanelSupplierInfo","fieldParent":"687a91df-a93e-477a-dad3-5d216be8c1d6","fieldPos":37,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingValue":"API Materail_Service_Questions>asl_questionnaireconfig","bindingType":"u","bindingSource":"API","bindingParentID":"1fb6679f-27a9-49ba-be51-a685dde1a2b6","bindingPathID":"8816db65-feae-4269-f0ca-955138b5d1a3","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"f0f7071d-5296-4e11-91b6-7068ff9dda28","fieldName":"hboxSupInfo","fieldParent":"a9f601bd-b1ff-4f62-a3cc-eab660af6d56","fieldPos":38,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceAround","script":"","translation":[]}]},{"fieldNo":"16a0b300-085f-4794-fc20-05f28ff0bdea","fieldName":"vboxSupName","fieldParent":"f0f7071d-5296-4e11-91b6-7068ff9dda28","fieldPos":39,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"525ab41b-365f-4df1-d5b8-53fcfc387456","fieldName":"oLabelSupplierName","fieldParent":"16a0b300-085f-4794-fc20-05f28ff0bdea","fieldPos":40,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Supplier Name:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e690856d-797e-4368-eb10-056d0b5f530f","fieldName":"oInputSupplierName","fieldParent":"16a0b300-085f-4794-fc20-05f28ff0bdea","fieldPos":41,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{/supplierName}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: remove error highlights\nUPDATED BY: VIGHNESH\nUPDATED OB: oct 10, 2021\n2021ENHANCEMENTS\n*/\nif (this.getValue() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"inputfield\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"oIconTabFilterMaterialnfo.setEnabled(true);\ng_dataLoss = true;","translation":[]}]},{"fieldNo":"08f95649-ba67-428e-ae8e-6c903e30379a","fieldName":"vboxSupDUNS","fieldParent":"f0f7071d-5296-4e11-91b6-7068ff9dda28","fieldPos":42,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBegin","script":"","translation":[]}]},{"fieldNo":"cbda4e0e-edc9-4552-930b-1a6d4fdee455","fieldName":"oHBoxSupplierDUNS","fieldParent":"08f95649-ba67-428e-ae8e-6c903e30379a","fieldPos":43,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"835dafbe-17c9-470f-b67e-b3a922db3c46","fieldName":"oLabelDUNS","fieldParent":"cbda4e0e-edc9-4552-930b-1a6d4fdee455","fieldPos":44,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Supplier DUNS Number:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"458d90bf-3fcf-46aa-a332-1a8fa7c0aa0a","fieldName":"oIconSearchDUNS","fieldParent":"cbda4e0e-edc9-4552-930b-1a6d4fdee455","fieldPos":45,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"tooltip","grouping":"Properties","value":"Populate Supplier Information Using DUNS Search","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/search","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"ajaxGetDunsMatchBookToken(); //2020ENHANCEMENTSVIGHNESH - get token API added here which refreshes the matchbok token\noDialogSearchDunsNum.open();\noLabelDunsNoRecordCount.setVisible(false);\noTableSearchDunsInfo.setVisible(false);\noButtonSearchDunsClearFilter.setVisible(false);\noButtonSelectDunsSearchInfo.setEnabled(false);","translation":[]}]},{"fieldNo":"ded916ac-90cf-4d0c-d612-7bbe6986ce73","fieldName":"oInputDUNS","fieldParent":"08f95649-ba67-428e-ae8e-6c903e30379a","fieldPos":46,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{/dunsNumber}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"802b3650-f676-4cd5-eecb-7190d1d1b3c0","fieldName":"vboxSupReasonForAddMod","fieldParent":"a9f601bd-b1ff-4f62-a3cc-eab660af6d56","fieldPos":47,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]}]},{"fieldNo":"54f8ee78-a0bb-4a05-e370-0582dcf21e3d","fieldName":"hboxSupReasonForAddModi","fieldParent":"802b3650-f676-4cd5-eecb-7190d1d1b3c0","fieldPos":48,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"d035c01e-1eff-436e-b8c5-4897dd8a750c","fieldName":"oLabelReasonforAdd","fieldParent":"54f8ee78-a0bb-4a05-e370-0582dcf21e3d","fieldPos":49,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Reason for Add / Modification (10000 Characters Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"17b95291-d1f8-4fcc-9ff8-110f21f0cb14","fieldName":"labRemSupResAddMod","fieldParent":"54f8ee78-a0bb-4a05-e370-0582dcf21e3d","fieldPos":50,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"317d0288-eb63-4f34-a459-46a642f9b181","fieldName":"txtSupReaAddMod","fieldParent":"802b3650-f676-4cd5-eecb-7190d1d1b3c0","fieldPos":51,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/reasonForAddModi}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"4","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"10000","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\r\nNOTE: this block of code will trigger at live change event to update the remaining character text \r\n& to highlight in yellow the text area with warning if character limit exceeds\r\n& highlight in red if empty\r\ncreated by: VIGHNESH\r\ncreated on: AUGUST 26, 2021\r\n2021ENHANCEMENTS-AGHP-2193\r\n*/\r\nlabRemSupResAddMod.setText();\r\n\r\nlet len = 10000 - this.getValue().length;\r\n\r\n//do not show the remaining character label if len is 10000 or nothing is entered in the field else show the label\r\nlen === 10000 ? labRemSupResAddMod.setText() : labRemSupResAddMod.setText(\"Characters Left : \" + len);\r\n\r\n//what if maximum character limit is reached\r\nif (len === 0) {\r\n    this.setValueState(\"Warning\");\r\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 10000 Characters only\");\r\n    this.removeStyleClass(\"textbox\");\r\n    this.addStyleClass(\"warning\");\r\n} else {\r\n    this.setValueState(\"None\");\r\n    this.removeStyleClass(\"warning\");\r\n    this.addStyleClass(\"textbox\");\r\n    this.setValueStateText();\r\n}\r\n\r\n\r\nif (this.getValue().trim() !== \"\") {\r\n    this.removeStyleClass(\"error\");\r\n    this.addStyleClass(\"textbox\");\r\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"2ad16736-b05e-438f-da4f-58301857e9b0","fieldName":"oPanelSupplierAddress","fieldParent":"687a91df-a93e-477a-dad3-5d216be8c1d6","fieldPos":52,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingValue":"API Materail_Service_Questions>asl_questionnaireconfig","bindingType":"u","bindingSource":"API","bindingParentID":"1fb6679f-27a9-49ba-be51-a685dde1a2b6","bindingPathID":"8816db65-feae-4269-f0ca-955138b5d1a3","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"3cf94e95-aa6a-4b52-a492-72705f8bc129","fieldName":"oTextSupplierAddress","fieldParent":"2ad16736-b05e-438f-da4f-58301857e9b0","fieldPos":53,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"SUPPLIER ADDRESS","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldName":"oSimpleFormSupAdd","fieldParent":"2ad16736-b05e-438f-da4f-58301857e9b0","fieldPos":54,"fieldType":"sap.ui.layout.form.SimpleForm","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"simpleForm","script":"","translation":[]},{"attribute":"layout","grouping":"Properties","value":"ColumnLayout","script":"","translation":[]},{"attribute":"labelSpanM","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"labelSpanL","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"columnsL","grouping":"Properties","value":"3","script":"","translation":[]}]},{"fieldNo":"2b3b5b1e-453d-4bfd-f06c-e62fad36930d","fieldName":"oLabelSupplierStreet","fieldParent":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldPos":55,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Street","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"727b1719-a474-4dfa-f7ad-740840195a3b","fieldName":"oInputSupplierStreet","fieldParent":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldPos":56,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{/supplierAddressStreet}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: remove error highlights\nUPDATED BY: VIGHNESH\nUPDATED OB: oct 10, 2021\n2021ENHANCEMENTS\n*/\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"inputfield\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"cde82576-2b30-4142-ce82-e730275b9236","fieldName":"oLabSupplierCountry","fieldParent":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldPos":57,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Country","script":"","translation":[{"language":"DE","value":"Pickauftrag"},{"language":"FR","value":"commande pick"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"7dc31ddf-7acc-4dc2-f773-8f098a28cfe4","fieldName":"oInputSupplierCountry","fieldParent":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldPos":58,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{/supplierAddressCountry}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: remove error highlights\nUPDATED BY: VIGHNESH\nUPDATED OB: oct 10, 2021\n2021ENHANCEMENTS\n*/\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"inputfield\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"365362f9-739a-48c9-bd2b-c5bb0dcef2fb","fieldName":"oLabelSupplierCity","fieldParent":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldPos":59,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"City","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"a150ba01-4e13-4ef7-a858-2dba421a9887","fieldName":"oInputSupplierCity","fieldParent":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldPos":60,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{/supplierAddressCity}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: remove error highlights\nUPDATED BY: VIGHNESH\nUPDATED OB: oct 10, 2021\n2021ENHANCEMENTS\n*/\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"inputfield\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"ee2118a4-7a01-49bd-9384-38bea1a5ef22","fieldName":"oLabelSupplierPIN","fieldParent":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldPos":61,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Zip / Postal Code","script":"","translation":[{"language":"DE","value":"LE Nummer"},{"language":"FR","value":"HU Numéro "}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"2be3600c-c33f-48f9-8792-37e12a95f749","fieldName":"oInputSupplierPIN","fieldParent":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldPos":62,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{/supplierAddressPIN}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: remove error highlights\nUPDATED BY: VIGHNESH\nUPDATED OB: oct 10, 2021\n2021ENHANCEMENTS\n*/\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"inputfield\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"2e5c6d5b-c1ce-4b2d-c8c7-df200bfe4c63","fieldName":"oLabelSupplieRegion","fieldParent":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldPos":63,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":" Region / State / Province","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"c1b3e9f3-1cbe-4a7c-b3e7-72afa5d12b9a","fieldName":"oInputSupplieRegion","fieldParent":"d478f907-0a79-4ccc-c249-bf86f777702e","fieldPos":64,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"value","grouping":"Properties","value":"{/supplierAddressState}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"bb1b188e-507e-40b2-e0b0-c8757c0845fd","fieldName":"oPanelSupplierLocationTyp","fieldParent":"687a91df-a93e-477a-dad3-5d216be8c1d6","fieldPos":65,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingValue":"API Materail_Service_Questions>asl_questionnaireconfig","bindingType":"u","bindingSource":"API","bindingParentID":"1fb6679f-27a9-49ba-be51-a685dde1a2b6","bindingPathID":"8816db65-feae-4269-f0ca-955138b5d1a3","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"57b50f16-86cf-4b8f-c137-86074fe0b02e","fieldName":"oVBoxLocationTyp","fieldParent":"bb1b188e-507e-40b2-e0b0-c8757c0845fd","fieldPos":66,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"31.5%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"d0ab2917-6a79-451a-fe3e-81a4b844e5ad","fieldName":"oHBox9LocationTyp","fieldParent":"57b50f16-86cf-4b8f-c137-86074fe0b02e","fieldPos":67,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"8b993d70-62b4-418e-ca43-f56c7e16a3b2","fieldName":"oLabelSupplierLocationType","fieldParent":"d0ab2917-6a79-451a-fe3e-81a4b844e5ad","fieldPos":68,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Location Type:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"2402d8d7-fb2c-403f-a802-b9daa5fc0b3d","fieldName":"oIconLocationType","fieldParent":"d0ab2917-6a79-451a-fe3e-81a4b844e5ad","fieldPos":69,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"openHelperPop(\"locationType\",this)\n\n\n\n\n","translation":[]}]},{"fieldNo":"c3d8705f-2b3b-4cef-e7ef-8927e39f3ea8","fieldName":"oComboBoxLocationType","fieldParent":"57b50f16-86cf-4b8f-c137-86074fe0b02e","fieldPos":70,"fieldType":"sap.m.MultiComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"selectedKeys","grouping":"Properties","value":"{/locationType}","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"1943b595-8212-49e1-d30b-0c681dce4a82","fieldName":"oPanelSupplierContactInfo","fieldParent":"687a91df-a93e-477a-dad3-5d216be8c1d6","fieldPos":71,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"f02ab8bc-5c14-4511-8be1-f2c6da6f0cef","fieldName":"oTextSupplierContact","fieldParent":"1943b595-8212-49e1-d30b-0c681dce4a82","fieldPos":72,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"SUPPLIER CONTACT","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldName":"oSimpleFormSupplierContact","fieldParent":"1943b595-8212-49e1-d30b-0c681dce4a82","fieldPos":73,"fieldType":"sap.ui.layout.form.SimpleForm","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBottom","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"simpleForm","script":"","translation":[]},{"attribute":"layout","grouping":"Properties","value":"ColumnLayout","script":"","translation":[]},{"attribute":"labelSpanM","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"labelSpanL","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"columnsL","grouping":"Properties","value":"3","script":"","translation":[]}]},{"fieldNo":"b9dfc2e6-fc7e-4732-fce2-f79de72b59c4","fieldName":"oLabelFirstname","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":74,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"First Name","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"586f981d-9185-4e4c-d740-4bf21aaeef4c","fieldName":"oInputSupplierContactInfofName","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":75,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"ef3e0d2f-8836-4eb4-cd77-b7fce0a3901b","fieldName":"oLabJJSupplierContactInfoemail","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":76,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Title/Position","script":"","translation":[{"language":"DE","value":"LE Nummer"},{"language":"FR","value":"HU Numéro "}]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"3dd64130-65e8-4add-9f24-771b3ac6ba13","fieldName":"oInputSupplierContactInfoWlink","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":77,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"f1c7d2e9-d62e-45a4-c536-5e6e9169a802","fieldName":"oLabelContactInfoWlink","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":78,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Last Name","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"e35a9eb2-3dd7-4e27-af02-e97cb03635b4","fieldName":"oInputSupplierContactInfoLName","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":79,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"eceda8b7-76d5-495a-b2b4-7a1aabad504c","fieldName":"oLabelSupplierContactInfoLName","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":80,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Phone Number","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"320233f2-9dd6-42d2-e2a4-18bff366a54f","fieldName":"oInputSupplierContactInfoPhNum","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":81,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"40","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"a418fd7f-42f5-40d9-ff0b-3c42b48a1c38","fieldName":"oLabSupplierContactInfoPhNum","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":82,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email","script":"","translation":[{"language":"DE","value":"Pickauftrag"},{"language":"FR","value":"commande pick"}]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"7a21e569-6da7-45df-c76b-a7f1ce193923","fieldName":"oInputSupplierContactInfoemail","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":83,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"type","grouping":"Properties","value":"Email","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"cb3072c9-1cd7-4dfb-9f4d-3a48eea87046","fieldName":"oLabSupplierAddCont","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":84,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"116bd46a-6816-4550-bdb6-4ea9340a3eb0","fieldName":"btnSupADDContact","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":85,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"ADD CONTACT","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"supplierContactValidate();","translation":[]}]},{"fieldNo":"e22d56bc-c728-408e-a054-4ad4df7e948e","fieldName":"btnModifyContact","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":86,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"MODIFY CONTACT","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nudpated on : feb 7, 2022\n\nit was observed that when no data/supplier contacts are present in the table then API is called to update the contacts in asl_supplier_contacts table\nnothing gets passed in the headers/payload, table gets updated with no need.\n\nremediation:\nvalidate the table first, if 0 records then no need to call the save/udpate API\n\nnot a defect, just observed.\ncode refactored\n*/\nif (this.getText().toUpperCase() === 'SAVE CONTACT') {\n\n    sap.ui.core.BusyIndicator.show(0);\n\n    let rec = oTableSupplierContactInfo.getModel().getData();\n\n    if (rec && rec.length === 0) {\n        let errText = 'No supplier Contacts available for this supplier to be saved/updated in OneASL system';\n        showMessageToast(errText);\n        sap.ui.core.BusyIndicator.hide();\n        return;\n    }\n\n    supplierEnableFields(false);\n\n    let options = {\n\n        \"data\": rec\n\n    };\n    apiupdateSupplierContact(options);\n\n    btnCancelContact.setVisible(false);\n\n} else {\n    supplierEnableFields(true, 'X');\n    btnSupADDContact.setVisible(true);\n    this.setText('SAVE CONTACT');\n    btnCancelContact.setVisible(true);\n}","translation":[]}]},{"fieldNo":"85c6f196-4849-4c11-fc3e-3d7735df610f","fieldName":"btnCancelContact","fieldParent":"c79fda00-9b25-4319-95a1-8d6815f5dd23","fieldPos":87,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"CANCEL","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"supplierEnableFields(false);","translation":[]}]},{"fieldNo":"10beb5a8-c06e-4176-cdc1-7de0026c82a4","fieldName":"oTableSupplierContactInfo","fieldParent":"1943b595-8212-49e1-d30b-0c681dce4a82","fieldPos":88,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingValue":"asl_SupplierInformation_v2>getSupplierInformationResponse","bindingType":"h","bindingSource":"API","bindingParentID":"d9dd7396-94e0-48f7-9552-b1c4d44ca8ef","bindingPathID":"106c9aa2-5c54-46e6-d21e-dc5bc9cdcc1a","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"5","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"Single","script":"","translation":[]},{"attribute":"selectionBehavior","grouping":"Properties","value":"RowSelector","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"45dd00d8-cc12-4d75-ae85-f2401e37a759","fieldName":"oToolbar","fieldParent":"10beb5a8-c06e-4176-cdc1-7de0026c82a4","fieldPos":89,"fieldType":"sap.m.Toolbar","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"HeaderToolbar","script":"","translation":[]}]},{"fieldNo":"51071f0c-fbae-4cb1-c013-41a239e7be48","fieldName":"oColumnSupContactBtn","fieldParent":"10beb5a8-c06e-4176-cdc1-7de0026c82a4","fieldPos":90,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"a9d8f931-4eb7-4db5-dae7-c2d97a575f3d","fieldName":"oHorLaySupContact","fieldParent":"51071f0c-fbae-4cb1-c013-41a239e7be48","fieldPos":91,"fieldType":"sap.ui.layout.HorizontalLayout","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"d1ffe09f-9c87-4094-8255-8c40d2a55872","fieldName":"oButtonSupContactEdit","fieldParent":"a9d8f931-4eb7-4db5-dae7-c2d97a575f3d","fieldPos":92,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{custom_field_p_editable}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"blueicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/pencil-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"supplierTableEdit(this);\n","translation":[]}]},{"fieldNo":"09d53e56-2885-4a6a-841e-9d34b10c82fc","fieldName":"oButtonSupContactDelete","fieldParent":"a9d8f931-4eb7-4db5-dae7-c2d97a575f3d","fieldPos":93,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/trash-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"supplierTableDel(this);\n","translation":[]}]},{"fieldNo":"6e84349a-2080-4d12-dee0-0a13d01f9663","fieldName":"oColumnSupContactFName","fieldParent":"10beb5a8-c06e-4176-cdc1-7de0026c82a4","fieldPos":94,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"First Name","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"bc421d8b-1ecc-43e1-bfee-50bfaf12be11","fieldName":"oTextSupContactFName","fieldParent":"6e84349a-2080-4d12-dee0-0a13d01f9663","fieldPos":95,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{firstName}","script":"","translation":[]}]},{"fieldNo":"a459ff92-9781-4dff-932b-117d16b3bfd6","fieldName":"oColumnSupContactLName","fieldParent":"10beb5a8-c06e-4176-cdc1-7de0026c82a4","fieldPos":96,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Last Name","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"86a773f1-0e12-4b8d-84ee-fefdb6ab673d","fieldName":"oTextSupContactLName","fieldParent":"a459ff92-9781-4dff-932b-117d16b3bfd6","fieldPos":97,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{lastName}","script":"","translation":[]}]},{"fieldNo":"aeb70f7c-de82-4631-8017-29e1d3f6c187","fieldName":"oColumnSupContactEmail","fieldParent":"10beb5a8-c06e-4176-cdc1-7de0026c82a4","fieldPos":98,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Email","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"d06ec824-8499-4a6e-df86-7eb0f82d0bde","fieldName":"oTextSupContactEmail","fieldParent":"aeb70f7c-de82-4631-8017-29e1d3f6c187","fieldPos":99,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{email}","script":"","translation":[]}]},{"fieldNo":"7fa421fa-86da-4eab-893b-1931eed43f1e","fieldName":"oColumnSupContactWeb","fieldParent":"10beb5a8-c06e-4176-cdc1-7de0026c82a4","fieldPos":100,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Title/Position","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"ec6d7a5e-574c-4614-89f7-ef6f358fb017","fieldName":"oTextSupContactWeb","fieldParent":"7fa421fa-86da-4eab-893b-1931eed43f1e","fieldPos":101,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{websiteLink}","script":"","translation":[]}]},{"fieldNo":"8db2770e-c223-4bc0-f8c7-ea620b0ef4e9","fieldName":"oColumnSupContactPhone","fieldParent":"10beb5a8-c06e-4176-cdc1-7de0026c82a4","fieldPos":102,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Phone","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"6d20b6e7-caf7-46b9-8d1d-0d3c18a77b02","fieldName":"oTextSupContactPhone","fieldParent":"8db2770e-c223-4bc0-f8c7-ea620b0ef4e9","fieldPos":103,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{phone}","script":"","translation":[]}]},{"fieldNo":"2db089a2-175e-4db1-a3b9-5b2c8695b287","fieldName":"oPanelSelectionRationale","fieldParent":"687a91df-a93e-477a-dad3-5d216be8c1d6","fieldPos":104,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingValue":"asl_SupplierInformation_v2>getSupplierInformationV2","bindingType":"u","bindingSource":"API","bindingParentID":"d9dd7396-94e0-48f7-9552-b1c4d44ca8ef","bindingPathID":"2d425013-c29a-4dbf-d183-a4e25edbf914","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"f90e9c6e-218a-40af-b36c-e72ddca4f276","fieldName":"oHBoxSelectionRation","fieldParent":"2db089a2-175e-4db1-a3b9-5b2c8695b287","fieldPos":105,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]}]},{"fieldNo":"be48638f-15d6-48dd-d208-e94b4b156e11","fieldName":"oVBoxSelectionRation","fieldParent":"f90e9c6e-218a-40af-b36c-e72ddca4f276","fieldPos":106,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"df5b3685-a6ec-4fb1-daac-025d74e95b0c","fieldName":"oHBoxSelectionRationale","fieldParent":"be48638f-15d6-48dd-d208-e94b4b156e11","fieldPos":107,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"62e27f60-76bf-4c97-8693-4484205ea9ce","fieldName":"oLabelSelectionRationLabel","fieldParent":"df5b3685-a6ec-4fb1-daac-025d74e95b0c","fieldPos":108,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Selection Rationale (1000 Characters Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"cb57d44f-036f-4763-af3a-bd637820cd7b","fieldName":"oIconSelectRation","fieldParent":"df5b3685-a6ec-4fb1-daac-025d74e95b0c","fieldPos":109,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"openHelperPop(\"supplierSelectionRationale\",this);","script":"openHelperPop(\"supplierSelectionRationale\",this);","translation":[]}]},{"fieldNo":"a0ed9850-d71b-4cfd-8750-e826504070df","fieldName":"labRemCountSelRationale","fieldParent":"df5b3685-a6ec-4fb1-daac-025d74e95b0c","fieldPos":110,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"eb3fddc0-591a-4997-c247-a6d24bda03cb","fieldName":"txtSelRationale","fieldParent":"be48638f-15d6-48dd-d208-e94b4b156e11","fieldPos":111,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/selectionRationale}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"4","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"1000","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_field_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\ncreated by: VIGHNESH\ncreated on: AUGUST 26, 2021\n*/\n\nlabRemCountSelRationale.setText();\n\nlet len = 1000 - this.getValue().length;\n\n//do not show the remaining character label if len is 1000 (nothing is entered) else show the label\nlen === 1000 ? labRemCountSelRationale.setText() : labRemCountSelRationale.setText(\"Characters Left : \" + len);\n\n//what if maximum character limit is reached\nif (len === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 1000 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"8a6cacbc-7e0e-4d93-9abf-ce5512cf4c7c","fieldName":"hboxSupAttachment","fieldParent":"2db089a2-175e-4db1-a3b9-5b2c8695b287","fieldPos":112,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"b97506d8-817b-4eee-a099-72ea277178ba","fieldName":"oFileUploaderSelectRationale","fieldParent":"8a6cacbc-7e0e-4d93-9abf-ce5512cf4c7c","fieldPos":113,"fieldType":"sap.ui.unified.FileUploader","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]},{"attribute":"placeholder","grouping":"Properties","value":"Upload Files","script":"","translation":[]},{"attribute":"fileType","grouping":"Properties","value":"[\"pdf\",\"xls\",\"xlsx\",\"csv\",\"docx\",\"doc\",\"dot\",\"txt\",\"wbk\",\"docm\",\"dotx\",\"docb\",\"xlt\",\"xlm\",\"xlsm\",\"xltm\",\"xltx\",\"xlsb\",\"xla\",\"xlam\",\"xll\",\"xlw\",\"ppt\",\"pptx\",\"pot\",\"pps\",\"pptm\",\"potx\",\"potm\",\"ppsx\",\"ppam\",\"ppsm\",\"sldx\",\"sldm\",\"one\",\"pub\",\"xps\",\"msg\"]","script":"","translation":[]}]},{"fieldNo":"2bd8d051-e736-490b-9125-e8f9732e44c6","fieldName":"oButtonSelectionRationaleData","fieldParent":"8a6cacbc-7e0e-4d93-9abf-ce5512cf4c7c","fieldPos":114,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"ATTACH FILE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2022 ENHANCEMENTS\nupdated by : vighnesh\nupdated on : april 18, 2022\nAGHP-2556 implementation\n*/\nsap.ui.core.BusyIndicator.show(0);\n\nlet fieldId;\nsap.n ? fieldId = sap.n.currentView.byId('oFileUploaderSelectRationale') : fieldId = this.getParent().mAggregations.fields[0].sId;\n\n\n//to check whether at least 1 file is selected for attachment\nlet isSelected = is_fileSelected(fieldId);\n\nif (isSelected && isSelected.errFlag) {\n    //error - no files are selected\n\n    showMessageToast(isSelected.noFileErrMsg);\n    sap.ui.core.BusyIndicator.hide();\n\n} else {\n\n    //files are selected\n    /*\n    function to check if the to be attached file obeys all the technical criterias.\n    level is SRATIONALE\n    fieldId is the id of the field\n    */\n    checkFile('SRATIONALE', fieldId);\n\n}","translation":[]}]},{"fieldNo":"fad14897-edb6-472c-a36f-1245ed9e11d6","fieldName":"oTableAttachmentSupplier","fieldParent":"2db089a2-175e-4db1-a3b9-5b2c8695b287","fieldPos":115,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"5","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"2199e4c8-d148-4522-b067-d718739281f6","fieldName":"oColumnDelAttach","fieldParent":"fad14897-edb6-472c-a36f-1245ed9e11d6","fieldPos":116,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"a50c7bd5-4223-4189-8232-795c2bc75787","fieldName":"oButtonAttachment","fieldParent":"2199e4c8-d148-4522-b067-d718739281f6","fieldPos":117,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/trash-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2022ENHANCEMENTS\nupdated by : vighnesh\nupdated on : april 18, 2022\n\nAGHP-2556\n*/\nsap.ui.core.BusyIndicator.show(0);\nlet file_uuid = oEvent.oSource.getBindingContext().getObject().file_id; //unique p9 id of the file\n\n/*\nto check whether the file id has been passed or not\n*/\ncheck_for_file_deletion(file_uuid, 'SRATIONALE', this);","translation":[]}]},{"fieldNo":"25f596e5-5a8a-4bec-eb9d-97f47f18f4aa","fieldName":"oColumn","fieldParent":"fad14897-edb6-472c-a36f-1245ed9e11d6","fieldPos":118,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"File Name","script":"","translation":[]}]},{"fieldNo":"646b8cab-3e04-47b5-9aed-7400ff6d70b9","fieldName":"oLinkSelRatFileName","fieldParent":"25f596e5-5a8a-4bec-eb9d-97f47f18f4aa","fieldPos":119,"fieldType":"sap.m.Link","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{file_fileName}","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCMENTS\nupdated by : vighnesh\nupdated on : april 19, 2022\n\nAGHP-2556\n\ncommon function to download supplier/material level file attachments\n*/\ndownloadFileAttachments(oEvent);","translation":[]}]},{"fieldNo":"dbe23355-d87e-4e78-df7e-cec9396797ab","fieldName":"oIconTabFilterMaterialnfo","fieldParent":"ce99785d-bd0e-431b-e479-7362aca184a8","fieldPos":120,"fieldType":"sap.m.IconTabFilter","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Material / Service Information","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"MATTAB","script":"","translation":[]}]},{"fieldNo":"a6088c9a-7293-4be1-c723-1460b285208b","fieldName":"oPanelMaterial","fieldParent":"dbe23355-d87e-4e78-df7e-cec9396797ab","fieldPos":121,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingType":"u","request":[],"response":[],"attributes":[{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"7fd7dd14-ffaf-45d4-989a-a5ba54dc887b","fieldName":"oHBoxNumbMaterials","fieldParent":"a6088c9a-7293-4be1-c723-1460b285208b","fieldPos":122,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBeginEnd","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"ac6f68a2-6fbc-4bf8-8506-be424baa3766","fieldName":"oVBoxNumberMaterial","fieldParent":"7fd7dd14-ffaf-45d4-989a-a5ba54dc887b","fieldPos":123,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"df40ee8f-861b-458f-aa1d-6303e162f094","fieldName":"oBarMaterialHeader","fieldParent":"ac6f68a2-6fbc-4bf8-8506-be424baa3766","fieldPos":124,"fieldType":"sap.m.Bar","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panelHeader","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setSubHeader","script":"","translation":[]}]},{"fieldNo":"d8013cd3-a24a-4586-9e68-0c2800958b2e","fieldName":"Left1","fieldParent":"df40ee8f-861b-458f-aa1d-6303e162f094","fieldPos":125,"fieldType":"neptune.BarContent","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"f4960f9d-2d05-4194-a2e6-33805fa7204e","fieldName":"oTextNumberOfMaterial","fieldParent":"d8013cd3-a24a-4586-9e68-0c2800958b2e","fieldPos":126,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"a871801f-2aea-4c3c-e364-fcd74ec1154f","fieldName":"Right1","fieldParent":"df40ee8f-861b-458f-aa1d-6303e162f094","fieldPos":127,"fieldType":"neptune.BarContent","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"c8703321-1856-40f1-d071-18d94d6a310d","fieldName":"btnAddMaterial","fieldParent":"a871801f-2aea-4c3c-e364-fcd74ec1154f","fieldPos":128,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"ADD NEW MATERIAL","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"materialTableBtnToggle('ADD');","translation":[]}]},{"fieldNo":"6efddc2d-a9b8-46f5-9196-47ddb154821b","fieldName":"btnCloseMaterial","fieldParent":"a871801f-2aea-4c3c-e364-fcd74ec1154f","fieldPos":129,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"CLOSE MATERIAL","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"\n/*2198 req*/\nif (isMatEdited(g_selectedRole)) {\n    return;\n}\n\nvar pData = oPanelMaterialInformation.getModel().getData()\n\n\nif (g_mat_copybutton_pressed === true && pData.custom_mat_enabled === true && oPanelMaterialInformation.getVisible() === true) {\n    showMessageToast(\"Please Save or Delete the below Copied Material record\");\n    return;\n}\n\nmaterialTableBtnToggle('CANCEL');","translation":[]}]},{"fieldNo":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldName":"oTableAddMaterial","fieldParent":"ac6f68a2-6fbc-4bf8-8506-be424baa3766","fieldPos":130,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingValue":"asl_SupplierInformation_v2>getSupplierInformationResponse","bindingType":"h","bindingSource":"API","bindingParentID":"d9dd7396-94e0-48f7-9552-b1c4d44ca8ef","bindingPathID":"106c9aa2-5c54-46e6-d21e-dc5bc9cdcc1a","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"5","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"Single","script":"","translation":[]},{"attribute":"selectionBehavior","grouping":"Properties","value":"RowSelector","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"8","script":"","translation":[]},{"attribute":"enableSelectAll","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"1b8a1fb0-b1ba-446a-b6a4-06e6b0128543","fieldName":"oColumnMaterials","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":131,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"145px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Left","script":"","translation":[]}]},{"fieldNo":"2e23b562-0024-42f7-a565-b8ff763e27e1","fieldName":"oHorLayMaterials","fieldParent":"1b8a1fb0-b1ba-446a-b6a4-06e6b0128543","fieldPos":132,"fieldType":"sap.ui.layout.HorizontalLayout","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"63052eba-aa9e-43d4-af97-1523a7e11186","fieldName":"oBtnMaterialView","fieldParent":"2e23b562-0024-42f7-a565-b8ff763e27e1","fieldPos":133,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"greenicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-regular/eye","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS - sprint 3\nupdated by: vighnesh\nupdated on: oct 27, 2021\nimplemented AGHP-2198 (close material pop up not displayed when materials are switched)\n*/\nif (isMatEdited(g_selectedRole)) {\n    return;\n}\n\n\nmaterialTableEdit_View(this, false, 'VIEW');","translation":[]}]},{"fieldNo":"8cfd28c0-4ac2-487b-99a6-8317abc2d964","fieldName":"oBtnMaterialCopy","fieldParent":"2e23b562-0024-42f7-a565-b8ff763e27e1","fieldPos":134,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{copyFlag}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"blueicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/copy","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS - sprint 3\nupdated by: vighnesh\nupdated on: oct 27, 2021\nimplemented AGHP-2198 (close material pop up not displayed when materials are switched)\n*/\n\n//2198\nif (isMatEdited(g_selectedRole)) {\n    return;\n}\n\n\nvar s = oEvent.getSource().getBindingContext().getObject();\n\nvar item = oEvent.getSource().getBindingContext();\n\n/*\nudpated by vighnesh on APRIL 12, 2022\nINC : INC000025322024\n\nwas observed that for modification at the material level due to some rendering issues, the code to make the date picker fields read only did not trigger.\n\nremediation: calling a function where we have requested Timing date picker fields ready only\n*/\nreadOnlyFields();\n\n\naddModifyCopyRecord(item.getObject(), item.getPath().slice(1), 'COPY');","translation":[]}]},{"fieldNo":"ecd319e1-be3c-4cdd-d0ec-c39c8c596990","fieldName":"oBtnMaterialLock","fieldParent":"2e23b562-0024-42f7-a565-b8ff763e27e1","fieldPos":135,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{=(${lockedBy} !== undefined) && (${lockedBy} !== '') && (${custom_field_t_editable})}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/lock","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"materialTableGetLock(this);\n//highlightSelectedRow(this);","translation":[]}]},{"fieldNo":"5ea6773a-0b9f-4369-fd86-79e961f4a27b","fieldName":"oBtnMaterialEdit","fieldParent":"2e23b562-0024-42f7-a565-b8ff763e27e1","fieldPos":136,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{editFlag}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"blueicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/pencil-alt","script":"","translation":[]},{"attribute":"backgroundColor","grouping":"Properties","value":"{editFlagColor}","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS - sprint 3\nupdated by: vighnesh\nupdated on: oct 27, 2021\nremoved unwanted comments & implemented AGHP-2198 (close material pop up not displayed when materials are switched)\n*/\n\n/*\n2021ENHANCEMENTS - sprint 3\nnow since we have remove the close material functionality, when the user makes changes changes to the material record &\ngoes to any other material, system must show the confirmation pop up to save/update the material\n*/\n\nif (isMatEdited(g_selectedRole)) {\n    return;\n}\n\n\nvar s = oEvent.getSource().getBindingContext();\nvar selData = s.getObject();\n\n\n/*\nudpated by vighnesh on APRIL 12, 2022\nINC : INC000025322024\n\nwas observed that for modification at the material level due to some rendering issues, the code to make the date picker fields read only did not trigger.\n\nremediation: calling a function where we have requested Timing date picker fields ready only\n*/\nreadOnlyFields();\n\n\n\nif (g_selectedRole === 'REQ' &&\n    (selData.qualificationStatus.toUpperCase() !== \"DRAFT\" &&\n        selData.qualificationStatus.toUpperCase() !== \"IN QUALIFICATION\")) {\n\n\n    addModifyCopyRecord(selData, s.getPath().slice(1), 'MODIFY');\n    return;\n} else {\n    //06/14 In order to meet new requirement Passing the entire binding object here rather than material to avoid disrupting the flow\n    g_selected_material_ev = this;\n    if (g_action !== 'BATCHUPLOAD' && g_selectedRole !== 'REQ') {\n\n        var options = {\n            data: {\n                userId: g_users.userId,\n                userRole: g_selectedRole,\n                matInfoId: selData.matInfoId,\n                supplierInfoId: selData.supplierInfoId\n            }\n        };\n\n        apiPostLockingRoleWiseEdit(options);\n    } else {\n        materialTableEdit_View(this, true, 'EDIT');\n    }\n\n}","translation":[]}]},{"fieldNo":"99acb30f-de23-4180-de9e-dd2d947a8169","fieldName":"oBtnMaterialDelete","fieldParent":"2e23b562-0024-42f7-a565-b8ff763e27e1","fieldPos":137,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{deleteFlag}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/trash-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021 ENHANCEMENTS sprint 3\nchecking if the material is edited on delete since user is deleting the records\nscenario : user edited a record & wants to delete other record, one can do that.\nscenario : user copied/modified a record & wants to delete the same\n*/\n\n//2198\nif (isMatEdited(g_selectedRole)) {\n    return;\n}\n\nmaterialTableDel(this);\n","translation":[]}]},{"fieldNo":"d70e685c-1e66-443f-dda9-a100ce08cf0c","fieldName":"colMatId","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":138,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"160px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Material ID","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"0cdcda82-f721-4b64-ad44-d38a9ab25935","fieldName":"oText","fieldParent":"d70e685c-1e66-443f-dda9-a100ce08cf0c","fieldPos":139,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{matInfoId}","script":"","translation":[]}]},{"fieldNo":"b0c63b9f-de9c-4c88-a703-4db07d7b01ef","fieldName":"oColumnJnJSeg","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":140,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"130px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"J&J Segment","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"379902ea-7ea4-414c-9e03-a23cc2063f5d","fieldName":"oTextJnJSeg","fieldParent":"b0c63b9f-de9c-4c88-a703-4db07d7b01ef","fieldPos":141,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjSegment}","script":"","translation":[]}]},{"fieldNo":"c3ccd7a4-97cc-4d09-a039-d67239735879","fieldName":"oColumnJnJOrg","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":142,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"J&J Quality Organization","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"8308822c-e71c-4807-e78c-00a1f3fba053","fieldName":"oTextJnJOrg","fieldParent":"c3ccd7a4-97cc-4d09-a039-d67239735879","fieldPos":143,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjOrg}","script":"","translation":[]}]},{"fieldNo":"9451b312-97c4-4b30-988e-be012be74607","fieldName":"oColumnJnJSite","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":144,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"J&J Site","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"1b81239e-9b2b-4533-d258-6be4543743e4","fieldName":"oTextJnJSite","fieldParent":"9451b312-97c4-4b30-988e-be012be74607","fieldPos":145,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjSite}","script":"","translation":[]}]},{"fieldNo":"99113762-f9b4-4ff5-9d2b-7a429e1bb686","fieldName":"oColumnJnJOpComp","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":146,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"J&J Operating Company","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"c2581882-f270-4ded-ca47-56212c3d9a70","fieldName":"oTextJnJOpComp","fieldParent":"99113762-f9b4-4ff5-9d2b-7a429e1bb686","fieldPos":147,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjOpComp}","script":"","translation":[]}]},{"fieldNo":"f12f4297-56fd-482c-9cb2-d7f3808a9a69","fieldName":"oColumnJnJRegion","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":148,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"J&J Region","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"ea7c3388-41ab-48e2-b9ad-41335f8410ad","fieldName":"oTextJnJRegion","fieldParent":"f12f4297-56fd-482c-9cb2-d7f3808a9a69","fieldPos":149,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjRegion}","script":"","translation":[]}]},{"fieldNo":"28782061-3518-4ef2-ecac-e0af355c807d","fieldName":"oColumnQualSt","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":150,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"240px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Qualification Status","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"b335bf0a-ac7e-4cb6-ce1e-2dfce7ca9284","fieldName":"oTextQualSt","fieldParent":"28782061-3518-4ef2-ecac-e0af355c807d","fieldPos":151,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{qualificationStatus}{secondApprover}","script":"","translation":[]}]},{"fieldNo":"67dd13d0-629a-4ed1-80ba-bc7405da9dd0","fieldName":"oColumnCLLevel","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":152,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"160px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Criticality Level","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"c121c814-61e1-4535-bc21-260b011964b5","fieldName":"oTextCLLevel","fieldParent":"67dd13d0-629a-4ed1-80ba-bc7405da9dd0","fieldPos":153,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{criticalityLevel}","script":"","translation":[]}]},{"fieldNo":"038c573b-22f0-4d74-ef82-f12b83a00883","fieldName":"oColumnSupType","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":154,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"250px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Supplier Type","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"ca7b15da-1543-4e69-b6a5-3a6ddede2caa","fieldName":"oTextSupType","fieldParent":"038c573b-22f0-4d74-ef82-f12b83a00883","fieldPos":155,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{supplierType}","script":"","translation":[]}]},{"fieldNo":"ad2ec8c5-99bc-48b4-ab48-f424d9da598c","fieldName":"oColumnRisk","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":156,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"220px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Risk Categorization","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"ddffb152-1ab4-4dfd-9f65-e16aa35d0b85","fieldName":"oTextRisk","fieldParent":"ad2ec8c5-99bc-48b4-ab48-f424d9da598c","fieldPos":157,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{riskCatgGroup}","script":"","translation":[]}]},{"fieldNo":"2b73c2d5-6a27-4f9d-8418-0880352808af","fieldName":"oColumnCruSupSt","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":158,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"220px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Crucial Supplier Status","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"8b7f9c6c-efcb-401d-af97-076c57a642b9","fieldName":"oTextCruSupSt","fieldParent":"2b73c2d5-6a27-4f9d-8418-0880352808af","fieldPos":159,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{crucialSupplierStatus}","script":"","translation":[]}]},{"fieldNo":"1c0b6713-a1f6-463a-adc1-afc5199ed612","fieldName":"oColumnCriSubSt","fieldParent":"e53bdba7-7055-44dd-cd1c-6b8aa4d42b7c","fieldPos":160,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"220px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Critical Subcontractor Status","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"27958072-fb92-4900-f1c9-695f0a17f30b","fieldName":"oTextCriSubSt","fieldParent":"1c0b6713-a1f6-463a-adc1-afc5199ed612","fieldPos":161,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{criticalSubContStatus}","script":"","translation":[]}]},{"fieldNo":"32494e4b-6176-447e-aab7-f4380d9206f4","fieldName":"oPanelMatReqInfo","fieldParent":"dbe23355-d87e-4e78-df7e-cec9396797ab","fieldPos":162,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"1ab6bc6e-114e-4ce4-d64c-9d5ddd833d7c","fieldName":"oHBoxMatReqInfo","fieldParent":"32494e4b-6176-447e-aab7-f4380d9206f4","fieldPos":163,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"cc41f7ed-1ab3-4aef-af87-063356e15e55","fieldName":"vboxMatReqName","fieldParent":"1ab6bc6e-114e-4ce4-d64c-9d5ddd833d7c","fieldPos":164,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"72768344-bb90-45e6-cf4c-49211cf2e567","fieldName":"oLabelMatReqName","fieldParent":"cc41f7ed-1ab3-4aef-af87-063356e15e55","fieldPos":165,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Requester Name:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"94643002-2a05-4c10-ccf8-426c8ed8d1ed","fieldName":"oTextMatReqName","fieldParent":"cc41f7ed-1ab3-4aef-af87-063356e15e55","fieldPos":166,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/materialRequesterName}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"310f4562-2e3f-4080-e648-375599832ea8","fieldName":"vboxMatReqEmail","fieldParent":"1ab6bc6e-114e-4ce4-d64c-9d5ddd833d7c","fieldPos":167,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"aeb560f8-9edf-4395-8fe9-1ef77ea62236","fieldName":"oLabelMatReqEmail","fieldParent":"310f4562-2e3f-4080-e648-375599832ea8","fieldPos":168,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Requester Email:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"59bbb8aa-7a50-4318-bc24-933d0fde7371","fieldName":"oTextMatReqEmail","fieldParent":"310f4562-2e3f-4080-e648-375599832ea8","fieldPos":169,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/materialRequesterEmail}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"038905bc-5c29-4533-b007-f87cc8c12ceb","fieldName":"vboxMatReqDate","fieldParent":"1ab6bc6e-114e-4ce4-d64c-9d5ddd833d7c","fieldPos":170,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"e2ac4b3d-6118-46a5-8bfc-c54f0a272684","fieldName":"oLabelMatReqDate","fieldParent":"038905bc-5c29-4533-b007-f87cc8c12ceb","fieldPos":171,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Request Date:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"2933f18e-f47c-4b23-9f4a-5cfdd1ac54bd","fieldName":"oTextMatReqDate","fieldParent":"038905bc-5c29-4533-b007-f87cc8c12ceb","fieldPos":172,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/materialRequestDate}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"3715b3fc-7bf7-4db1-c395-ce82322220d8","fieldName":"vboxMatReqType","fieldParent":"1ab6bc6e-114e-4ce4-d64c-9d5ddd833d7c","fieldPos":173,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"aab1a431-b603-4e51-89e4-ead068984df9","fieldName":"oLabelMatReqType","fieldParent":"3715b3fc-7bf7-4db1-c395-ce82322220d8","fieldPos":174,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Type of Request:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"1f34ecdb-4ca9-4955-c0b5-0bb7ee97deed","fieldName":"oTextMatReqType","fieldParent":"3715b3fc-7bf7-4db1-c395-ce82322220d8","fieldPos":175,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/materialTypeOfRequest}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"de16b886-bfd4-433f-a6e7-4537ce16025e","fieldName":"vboxMatStaticID","fieldParent":"1ab6bc6e-114e-4ce4-d64c-9d5ddd833d7c","fieldPos":176,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"134f3c8b-5ec7-40ab-847f-6e3f68a15cd4","fieldName":"labMatStaticID","fieldParent":"de16b886-bfd4-433f-a6e7-4537ce16025e","fieldPos":177,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Static Material/Services ID:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"be480d25-b90e-4102-fb60-0b43dfdc9ef6","fieldName":"txtMatStaticID","fieldParent":"de16b886-bfd4-433f-a6e7-4537ce16025e","fieldPos":178,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/materialRecordId}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"96d508e6-8a53-498a-bd06-d1e85be0dd9c","fieldName":"vboxMatReqTime","fieldParent":"1ab6bc6e-114e-4ce4-d64c-9d5ddd833d7c","fieldPos":179,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"6ab46158-bf41-4240-ce6e-68397109b108","fieldName":"oLabelMatReqTime","fieldParent":"96d508e6-8a53-498a-bd06-d1e85be0dd9c","fieldPos":180,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Requested Timing to Get Material on ASL:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"e169e643-f784-48cc-ca36-b0b4f89e6e13","fieldName":"oInputMatReqTime","fieldParent":"96d508e6-8a53-498a-bd06-d1e85be0dd9c","fieldPos":181,"fieldType":"sap.m.DatePicker","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"50%","script":"","translation":[]},{"attribute":"valueFormat","grouping":"Properties","value":"MM/dd/YYYY","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/materialRequestedTimeOnASL}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"reqTiming","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MM/dd/YYYY","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: Oct 11, 2021\n2021 ENHANCEMENTS\n*/\nif (this.getValue() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"reqTiming\");\n}\n\n\nlet requestorTiming = this.getDateValue().getTime();\nrequestorTiming += 86399999;\nlet todaysDate = new Date().getTime();\nif (requestorTiming <= todaysDate) {\n    showMessageToast(\"Requester Timing to get Material on ASL must be on or after Today's Date\");\n    this.setDateValue(new Date(todaysDate));\n}\n\ng_matDataLoss = true;\ng_isMatEdited = true;","translation":[]}]},{"fieldNo":"7dd8d08d-42ce-4184-8ed1-c482820f2937","fieldName":"oPanelMaterialInformation","fieldParent":"dbe23355-d87e-4e78-df7e-cec9396797ab","fieldPos":182,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"da94f3cc-54f5-4ad1-d3fe-ea0039a5f208","fieldName":"oVBoxMaterialInfo","fieldParent":"7dd8d08d-42ce-4184-8ed1-c482820f2937","fieldPos":183,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]}]},{"fieldNo":"6c8af96f-0637-4f53-e056-544707a4ac4f","fieldName":"oTextMatInfo","fieldParent":"da94f3cc-54f5-4ad1-d3fe-ea0039a5f208","fieldPos":184,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"MATERIAL INFORMATION","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"647635ed-b7b7-43f6-f0b8-25dc7148e6be","fieldName":"oHBoxSegRiskCL","fieldParent":"da94f3cc-54f5-4ad1-d3fe-ea0039a5f208","fieldPos":185,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"b309a11b-be6b-458f-c768-b91c88eaeb87","fieldName":"oVBoxSupplierType","fieldParent":"647635ed-b7b7-43f6-f0b8-25dc7148e6be","fieldPos":186,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"ee636f27-9084-468d-fa7d-0bca8fc8d254","fieldName":"oHBox9SupplierType","fieldParent":"b309a11b-be6b-458f-c768-b91c88eaeb87","fieldPos":187,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]}]},{"fieldNo":"ebcd39f5-f872-4f54-b633-2be0ceb25c3c","fieldName":"oLabelSupplierType","fieldParent":"ee636f27-9084-468d-fa7d-0bca8fc8d254","fieldPos":188,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Supplier Type:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"36069eb7-ac34-4332-b9cb-f093791af81a","fieldName":"oComboBoxSupplierType","fieldParent":"b309a11b-be6b-458f-c768-b91c88eaeb87","fieldPos":189,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/supplierType}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: Oct 11, 2021\n2021 ENHANCEMENTS\n*/\nif (this.getSelectedKey() !== \"\") {\n    oComboBoxRiskCatgGroup.setBlocked(false);\n    oComboBoxRiskCatgGroup.setPlaceholder();\n    fillcomboboxRiskCatgGroup(this.getSelectedKey());\n}\n\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\ng_isMatEdited = true;\ng_matDataLoss = true;","translation":[]}]},{"fieldNo":"45b12fa9-aa83-4f15-cab7-96fba4f17855","fieldName":"oVBoxRiskCatgGroup","fieldParent":"647635ed-b7b7-43f6-f0b8-25dc7148e6be","fieldPos":190,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBegin","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"eda9e631-71f9-474c-b976-8abd5a268100","fieldName":"oHBoxRiskCatgGroup","fieldParent":"45b12fa9-aa83-4f15-cab7-96fba4f17855","fieldPos":191,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]}]},{"fieldNo":"b28cb989-bb69-4382-f063-845ac864db35","fieldName":"oLabelRiskCatgGroup","fieldParent":"eda9e631-71f9-474c-b976-8abd5a268100","fieldPos":192,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Risk Categorization Group:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"86de9e41-da0e-4779-ef87-f2352070088e","fieldName":"oComboBoxRiskCatgGroup","fieldParent":"45b12fa9-aa83-4f15-cab7-96fba4f17855","fieldPos":193,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: Oct 11, 2021\n2021 ENHANCEMENTS\n*/\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\ng_isMatEdited = true;\ng_matDataLoss = true;","translation":[]}]},{"fieldNo":"35fbc071-f15b-43f6-eb3b-63e2f867a3be","fieldName":"oVBoxCriticalityLevel","fieldParent":"647635ed-b7b7-43f6-f0b8-25dc7148e6be","fieldPos":194,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBeginEnd","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"1e1ccab1-c368-408e-c8fc-5d295f6080b2","fieldName":"oHBoxCriticalityLevel","fieldParent":"35fbc071-f15b-43f6-eb3b-63e2f867a3be","fieldPos":195,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]}]},{"fieldNo":"857c01eb-89bd-4376-e38e-4dc9b61ec4ce","fieldName":"oLabelCriticalityLevel","fieldParent":"1e1ccab1-c368-408e-c8fc-5d295f6080b2","fieldPos":196,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Criticality Level:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"2158f855-957c-4858-fd8e-a62ba8c3f8bb","fieldName":"oIconCriticalityLevel","fieldParent":"1e1ccab1-c368-408e-c8fc-5d295f6080b2","fieldPos":197,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"openHelperPop(\"criticalityLevel\",this);\n","translation":[]}]},{"fieldNo":"6461fca1-672f-4537-9c74-540e56f89a7a","fieldName":"oComboBoxCriticalityLevel","fieldParent":"35fbc071-f15b-43f6-eb3b-63e2f867a3be","fieldPos":198,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"bindingType":"h","request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: Oct 11, 2021\n2021 ENHANCEMENTS\n*/\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\n\ng_isMatEdited = true;\ng_matDataLoss = true;","translation":[]}]},{"fieldNo":"5da7e311-decb-436a-d70d-8bff77ce88c4","fieldName":"oVBoxOEM","fieldParent":"647635ed-b7b7-43f6-f0b8-25dc7148e6be","fieldPos":199,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]}]},{"fieldNo":"b2c7ac14-eb6a-46a4-8a10-0899f3b3aef6","fieldName":"oHBoxOEM","fieldParent":"5da7e311-decb-436a-d70d-8bff77ce88c4","fieldPos":200,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"07447a7b-f38d-4ea2-8f19-413a0c5d1d31","fieldName":"oLabelOEM","fieldParent":"b2c7ac14-eb6a-46a4-8a10-0899f3b3aef6","fieldPos":201,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"OEM Supplier:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c2ddb684-f06c-4b48-d730-1c80717f3034","fieldName":"oIconOEM","fieldParent":"b2c7ac14-eb6a-46a4-8a10-0899f3b3aef6","fieldPos":202,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"openHelperPop(\"oemSupplier\",this);","script":"openHelperPop(\"oemSupplier\",this);","translation":[]}]},{"fieldNo":"b043e99e-21f2-4fb3-f6ac-a96d61300b82","fieldName":"oComboBoxOEM","fieldParent":"5da7e311-decb-436a-d70d-8bff77ce88c4","fieldPos":203,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: Oct 11, 2021\n2021 ENHANCEMENTS\n*/\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\n\ng_isMatEdited = true;\ng_matDataLoss = true;","translation":[]}]},{"fieldNo":"2c32f4f6-ac02-4e2c-c9ca-e35d290c39f0","fieldName":"oListItem4","fieldParent":"b043e99e-21f2-4fb3-f6ac-a96d61300b82","fieldPos":204,"fieldType":"sap.ui.core.ListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Yes","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"Yes","script":"","translation":[]}]},{"fieldNo":"96b99562-feeb-40aa-9827-c17a5b3638ab","fieldName":"oListItem5","fieldParent":"b043e99e-21f2-4fb3-f6ac-a96d61300b82","fieldPos":205,"fieldType":"sap.ui.core.ListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"No","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"No","script":"","translation":[]}]},{"fieldNo":"85fa9931-f504-400d-a9ad-55e2a9b31f5e","fieldName":"hboxMatAddMod","fieldParent":"da94f3cc-54f5-4ad1-d3fe-ea0039a5f208","fieldPos":206,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"eddd16f5-4d82-4d0e-8ab8-3e9dc63ee871","fieldName":"vboxMatReasonForAddMod","fieldParent":"85fa9931-f504-400d-a9ad-55e2a9b31f5e","fieldPos":207,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"dd988ffa-2535-48f1-d965-d237b59cfe0f","fieldName":"hboxMatReasonForAddMod","fieldParent":"eddd16f5-4d82-4d0e-8ab8-3e9dc63ee871","fieldPos":208,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]}]},{"fieldNo":"01c6f0a3-f13b-4de9-d962-54ff5c58a807","fieldName":"oLabelReason","fieldParent":"dd988ffa-2535-48f1-d965-d237b59cfe0f","fieldPos":209,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Reason For Add / Modification (10000 Characters Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"ce24b8f7-ede5-492e-901c-9d09e3750474","fieldName":"labRemMatResAddMod","fieldParent":"dd988ffa-2535-48f1-d965-d237b59cfe0f","fieldPos":210,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"dbe4af1d-cadd-439e-ed93-22bcf70a686e","fieldName":"txtMatReaAddMod","fieldParent":"eddd16f5-4d82-4d0e-8ab8-3e9dc63ee871","fieldPos":211,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/reasonForAddModi}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"4","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"10000","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\r\nNOTE: this block of code will trigger at live change event to update the remaining character text \r\n& to highlight in yellow the text area with warning if character limit exceeds\r\n& highlight in red if empty\r\ncreated by: VIGHNESH\r\ncreated on: AUGUST 26, 2021\r\n2021ENHANCEMENTS-AGHP-2193\r\n*/\r\nlabRemMatResAddMod.setText();\r\n\r\nlet len = 10000 - this.getValue().length;\r\n\r\n//do not show the remaining character label if len is 10000 or nothing is entered in the field else show the label\r\nlen === 10000 ? labRemMatResAddMod.setText() : labRemMatResAddMod.setText(\"Characters Left : \" + len);\r\n\r\n//what if maximum character limit is reached\r\nif (len === 0) {\r\n    this.setValueState(\"Warning\");\r\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 10000 Characters only\");\r\n    this.removeStyleClass(\"textbox\");\r\n    this.addStyleClass(\"warning\");\r\n} else {\r\n    this.setValueState(\"None\");\r\n    this.removeStyleClass(\"warning\");\r\n    this.addStyleClass(\"textbox\");\r\n    this.setValueStateText();\r\n}\r\n\r\n\r\nif (this.getValue().trim() !== \"\") {\r\n    this.removeStyleClass(\"error\");\r\n    this.addStyleClass(\"textbox\");\r\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\r\nUPDATED BY: VIGHNESH\r\nUPDATED ON: Oct 11, 2021\r\n2021 ENHANCEMENTS\r\n*/\r\ng_isMatEdited = true;\r\ng_matDataLoss = true;","translation":[]}]},{"fieldNo":"b3fb7dd4-162e-48d8-a171-0f2bddb1e055","fieldName":"hboxCLRationale","fieldParent":"da94f3cc-54f5-4ad1-d3fe-ea0039a5f208","fieldPos":212,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"73da623e-bdc1-4197-d25c-d4173f406f01","fieldName":"vboxCLRationale","fieldParent":"b3fb7dd4-162e-48d8-a171-0f2bddb1e055","fieldPos":213,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"7c239666-3016-4314-c834-fda997695ab9","fieldName":"hboxLabCLRat","fieldParent":"73da623e-bdc1-4197-d25c-d4173f406f01","fieldPos":214,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"4f938b7c-8d41-4db2-f7cd-bd243a2d18ca","fieldName":"oLabelCL","fieldParent":"7c239666-3016-4314-c834-fda997695ab9","fieldPos":215,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CL Rationale (10000 Characters Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"910dc051-0b93-4306-ae56-947ba75737fd","fieldName":"oIconCLRationale","fieldParent":"7c239666-3016-4314-c834-fda997695ab9","fieldPos":216,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"openHelperPop(\"clRationale\",this);\n\n\n","translation":[]}]},{"fieldNo":"ac52eb06-9443-4b9d-ea8a-95966fa1b18a","fieldName":"labRemCountCLRat","fieldParent":"7c239666-3016-4314-c834-fda997695ab9","fieldPos":217,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"d91ae91f-0bb5-4bcb-e061-4a3899cf3640","fieldName":"txtCLRationale","fieldParent":"73da623e-bdc1-4197-d25c-d4173f406f01","fieldPos":218,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/clRationale}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"4","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"10000","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\ncreated by: VIGHNESH\ncreated on: AUGUST 26, 2021\n*/\nlabRemCountCLRat.setText();\n\nlet len = 10000 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 or nothing is entered in the field else show the label\nlen === 10000 ? labRemCountCLRat.setText() : labRemCountCLRat.setText(\"Characters Left : \" + len);\n\n//what if maximum character limit is reached\nif (len === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 10000 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n\n\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"textbox\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_isMatEdited = true;\r\ng_matDataLoss = true;","translation":[]}]},{"fieldNo":"d023fa00-a57b-41ce-a083-c7d4e967add4","fieldName":"oHBoxDescription","fieldParent":"da94f3cc-54f5-4ad1-d3fe-ea0039a5f208","fieldPos":219,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"ada4b4cf-00b8-44d6-f230-9fcf9ed7e4c0","fieldName":"oVBoxDescription","fieldParent":"d023fa00-a57b-41ce-a083-c7d4e967add4","fieldPos":220,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTopBottom","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3ec39abb-3f72-474f-aa4b-449c81ad3588","fieldName":"oHBoxProdDesc","fieldParent":"ada4b4cf-00b8-44d6-f230-9fcf9ed7e4c0","fieldPos":221,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"ac07730d-05f5-431e-d64d-f9a092a755fd","fieldName":"oLabelProductPartDescription","fieldParent":"3ec39abb-3f72-474f-aa4b-449c81ad3588","fieldPos":222,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Product/Part Description (500 Characters Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"242de543-e4c3-472f-b393-b0a010c03a01","fieldName":"oIconProductDescription","fieldParent":"3ec39abb-3f72-474f-aa4b-449c81ad3588","fieldPos":223,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"openHelperPop(\"productPartDescription\",this);\n\n\n","translation":[]}]},{"fieldNo":"1d2a38ea-0e27-4809-b055-95b7c253de7a","fieldName":"labRemCountPrdDesc","fieldParent":"3ec39abb-3f72-474f-aa4b-449c81ad3588","fieldPos":224,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"124ea227-a560-4cae-cff7-c95e66cadc69","fieldName":"txtPrdPartDesc","fieldParent":"ada4b4cf-00b8-44d6-f230-9fcf9ed7e4c0","fieldPos":225,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/productPartDesc}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"4","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\ncreated by: VIGHNESH\ncreated on: AUGUST 26, 2021\n*/\nlabRemCountPrdDesc.setText();\n\nlet len = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 or nothing is entered in the field else show the label\nlen === 500 ? labRemCountPrdDesc.setText() : labRemCountPrdDesc.setText(\"Characters Left : \" + len);\n\n//what if maximum character limit is reached\nif (len === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n}\nelse {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"textbox\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_isMatEdited = true;\r\ng_matDataLoss = true;","translation":[]}]},{"fieldNo":"bce3af90-03fc-4017-81f8-b6c7bf6566b9","fieldName":"oPanelSupplierQuestionsPannel","fieldParent":"dbe23355-d87e-4e78-df7e-cec9396797ab","fieldPos":226,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingValue":"asl_questionnaireconfig_api>asl_questionnaireconfig","bindingType":"u","bindingSource":"API","bindingParentID":"81ab9a28-2640-4df6-9a18-6899fc8f90ff","bindingPathID":"af968672-7c0d-462c-f02c-481c643d3110","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"expanded","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"cf72311f-36b8-4be6-afad-03edac1bc89a","fieldName":"oHBoxQuestPanel","fieldParent":"bce3af90-03fc-4017-81f8-b6c7bf6566b9","fieldPos":227,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBeginEnd","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"4692dd66-1505-4aeb-8a48-4032b4915b31","fieldName":"oVBoxoHBoxQuestPanel","fieldParent":"cf72311f-36b8-4be6-afad-03edac1bc89a","fieldPos":228,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"440f6443-9b5f-4d79-d402-6ecc213e8298","fieldName":"oBarQuestPanelHeader","fieldParent":"4692dd66-1505-4aeb-8a48-4032b4915b31","fieldPos":229,"fieldType":"sap.m.Bar","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panelHeader","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setSubHeader","script":"","translation":[]}]},{"fieldNo":"26f73ae0-288e-44f3-bd7f-8e160557e50d","fieldName":"Left2","fieldParent":"440f6443-9b5f-4d79-d402-6ecc213e8298","fieldPos":230,"fieldType":"neptune.BarContent","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"50e4ee20-6edb-4901-c80c-ac62be227f5b","fieldName":"oTextQuestPanel","fieldParent":"26f73ae0-288e-44f3-bd7f-8e160557e50d","fieldPos":231,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CRUCIAL / CRITICAL QUESTIONNAIRE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"9db09308-b953-40fd-abb5-32f679ca0b68","fieldName":"Right2","fieldParent":"440f6443-9b5f-4d79-d402-6ecc213e8298","fieldPos":232,"fieldType":"neptune.BarContent","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"1bdd340f-1200-49d2-e3b2-579f6605a53d","fieldName":"oPanelNA","fieldParent":"bce3af90-03fc-4017-81f8-b6c7bf6566b9","fieldPos":233,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"subpanels","script":"","translation":[]},{"attribute":"expanded","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"ad0b79c9-d459-47a0-e846-374940ba42da","fieldName":"oListQuestionNA","fieldParent":"1bdd340f-1200-49d2-e3b2-579f6605a53d","fieldPos":234,"fieldType":"sap.m.List","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"questionPanel","script":"","translation":[]}]},{"fieldNo":"befa9168-d61a-4f65-d1d4-6ff989f51ac0","fieldName":"oCustomListItem","fieldParent":"ad0b79c9-d459-47a0-e846-374940ba42da","fieldPos":235,"fieldType":"sap.m.CustomListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"type","grouping":"Properties","value":"Active","script":"","translation":[]},{"attribute":"highlight","grouping":"Properties","value":"{changedAnswer}","script":"","translation":[]}]},{"fieldNo":"8e4254b5-84b1-46d6-eeba-a2c47b195b07","fieldName":"oHBoxNA","fieldParent":"befa9168-d61a-4f65-d1d4-6ff989f51ac0","fieldPos":236,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"973714eb-8784-49c0-dfc0-a1e5d099e87e","fieldName":"oVBoxNA","fieldParent":"8e4254b5-84b1-46d6-eeba-a2c47b195b07","fieldPos":237,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"6c2d5c23-7de1-4490-97c5-7f0234a51b53","fieldName":"oText2NA","fieldParent":"973714eb-8784-49c0-dfc0-a1e5d099e87e","fieldPos":238,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{description}","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c072d550-9b9c-4174-f81b-6b98e49065e6","fieldName":"oVBoxNA1","fieldParent":"8e4254b5-84b1-46d6-eeba-a2c47b195b07","fieldPos":239,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"8eccc603-7abc-4007-db6e-f8105edc8fe1","fieldName":"rgNA","fieldParent":"c072d550-9b9c-4174-f81b-6b98e49065e6","fieldPos":240,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"selectedIndex","grouping":"Properties","value":"{value}","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{custom_field_q_editable}","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"selectionOnQuestion(oEvent);\nif (rgNA.getSelectedIndex() === 1) {\n    oComboBoxCrucialSupplierStatus.removeStyleClass(\"error\");\n    oComboBoxCrucialSupplierStatus.addStyleClass(\"combobox\");\n    oComboBoxCriticalSubContStatus.removeStyleClass(\"error\");\n    oComboBoxCriticalSubContStatus.addStyleClass(\"combobox\");\n}\ng_isMatEdited = true;","translation":[]}]},{"fieldNo":"5010717f-ba8b-4582-d664-e363e254889d","fieldName":"oRadioButtonNAY","fieldParent":"8eccc603-7abc-4007-db6e-f8105edc8fe1","fieldPos":241,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Yes","script":"","translation":[]}]},{"fieldNo":"ea0c134a-47af-402f-d33a-f66b5b4dd640","fieldName":"oRadioButtonNAN","fieldParent":"8eccc603-7abc-4007-db6e-f8105edc8fe1","fieldPos":242,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"No","script":"","translation":[]}]},{"fieldNo":"2d577b0b-ca44-41c5-f293-46826a031388","fieldName":"oPanelScope","fieldParent":"bce3af90-03fc-4017-81f8-b6c7bf6566b9","fieldPos":243,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"subpanels","script":"","translation":[]},{"attribute":"headerText","grouping":"Properties","value":"SCOPE","script":"","translation":[]},{"attribute":"expanded","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"e846b31b-05fc-4b08-a34a-6a7a00a42ee6","fieldName":"oListQuestionsScope","fieldParent":"2d577b0b-ca44-41c5-f293-46826a031388","fieldPos":244,"fieldType":"sap.m.List","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"questionPanel","script":"","translation":[]}]},{"fieldNo":"fd53b49a-b299-4935-ce6b-d33ff96eb1d9","fieldName":"oCustomListItemSC","fieldParent":"e846b31b-05fc-4b08-a34a-6a7a00a42ee6","fieldPos":245,"fieldType":"sap.m.CustomListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"type","grouping":"Properties","value":"Active","script":"","translation":[]},{"attribute":"highlight","grouping":"Properties","value":"{changedAnswer}","script":"","translation":[]}]},{"fieldNo":"78a6bf10-e8e5-49d7-9b5d-b33383749555","fieldName":"oHBoxSC","fieldParent":"fd53b49a-b299-4935-ce6b-d33ff96eb1d9","fieldPos":246,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"dc283f2f-3d10-4e6d-a4d6-3b72037d9ba4","fieldName":"oVBoxSC","fieldParent":"78a6bf10-e8e5-49d7-9b5d-b33383749555","fieldPos":247,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"db90c6e7-b1f4-43b3-f9b2-1f33d0a26e1c","fieldName":"oText2SC","fieldParent":"dc283f2f-3d10-4e6d-a4d6-3b72037d9ba4","fieldPos":248,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{description}","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"5852b4cc-0fc2-441d-a82e-ae8733b212f6","fieldName":"oVBoxSC1","fieldParent":"78a6bf10-e8e5-49d7-9b5d-b33383749555","fieldPos":249,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"18c4f48b-ecb4-4d84-83f0-4d39ee7b67d7","fieldName":"rgSC","fieldParent":"5852b4cc-0fc2-441d-a82e-ae8733b212f6","fieldPos":250,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"selectedIndex","grouping":"Properties","value":"{value}","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{custom_field_q_editable}","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"selectionOnQuestion(oEvent);\ncheckTablesVisibility();\ng_isMatEdited = true;","translation":[]}]},{"fieldNo":"18678550-438a-4541-b539-838017f2fe55","fieldName":"oRadioButtonSCY","fieldParent":"18c4f48b-ecb4-4d84-83f0-4d39ee7b67d7","fieldPos":251,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Yes","script":"","translation":[]}]},{"fieldNo":"b9b5e67f-1c9f-433b-f85a-e73d8060f042","fieldName":"oRadioButtonSCN","fieldParent":"18c4f48b-ecb4-4d84-83f0-4d39ee7b67d7","fieldPos":252,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"No","script":"","translation":[]}]},{"fieldNo":"f57323ab-0eaa-47d2-d6a8-44570a4747cf","fieldName":"oPanelTable","fieldParent":"bce3af90-03fc-4017-81f8-b6c7bf6566b9","fieldPos":253,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"subpanels","script":"","translation":[]},{"attribute":"headerText","grouping":"Properties","value":"TABLE 1: CRUCIAL SUPPLIER","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"0f103234-8085-4875-a031-74763226b002","fieldName":"oListQuestionsTable","fieldParent":"f57323ab-0eaa-47d2-d6a8-44570a4747cf","fieldPos":254,"fieldType":"sap.m.List","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"questionPanel","script":"","translation":[]}]},{"fieldNo":"5132de1f-005b-4ccc-946d-ffc8644b00ee","fieldName":"oCustomListItemSS","fieldParent":"0f103234-8085-4875-a031-74763226b002","fieldPos":255,"fieldType":"sap.m.CustomListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"type","grouping":"Properties","value":"Active","script":"","translation":[]},{"attribute":"highlight","grouping":"Properties","value":"{changedAnswer}","script":"","translation":[]}]},{"fieldNo":"d986033f-b2ba-4879-e41f-c83758f576c9","fieldName":"oHBoxSS","fieldParent":"5132de1f-005b-4ccc-946d-ffc8644b00ee","fieldPos":256,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"202ac0e7-50b5-467b-8c16-16717d9ccf87","fieldName":"oVBoxSS","fieldParent":"d986033f-b2ba-4879-e41f-c83758f576c9","fieldPos":257,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"8e23e004-2bf6-496e-ba72-99a86f8784b0","fieldName":"oText2SS","fieldParent":"202ac0e7-50b5-467b-8c16-16717d9ccf87","fieldPos":258,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{description}","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"917e270a-0323-42fe-cd31-f4d2b790575c","fieldName":"oVBoxSS1","fieldParent":"d986033f-b2ba-4879-e41f-c83758f576c9","fieldPos":259,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"4db919d9-ee26-4aa2-b414-d9bd1f891955","fieldName":"rgSS","fieldParent":"917e270a-0323-42fe-cd31-f4d2b790575c","fieldPos":260,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"selectedIndex","grouping":"Properties","value":"{value}","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{custom_field_q_editable}","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"selectionOnQuestion(oEvent);\nsetTable1BasedStatus();\ng_isMatEdited = true;","translation":[]}]},{"fieldNo":"8eebf809-2382-47e8-bbfa-09b1591a907f","fieldName":"oRadioButtonSSY","fieldParent":"4db919d9-ee26-4aa2-b414-d9bd1f891955","fieldPos":261,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Yes","script":"","translation":[]}]},{"fieldNo":"71863a82-35dd-45e3-8180-e4777be7358f","fieldName":"oRadioButtonSSN","fieldParent":"4db919d9-ee26-4aa2-b414-d9bd1f891955","fieldPos":262,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"No","script":"","translation":[]}]},{"fieldNo":"514bcd02-8c45-454e-dae2-cf16d7f1aae1","fieldName":"oPanelTable1","fieldParent":"bce3af90-03fc-4017-81f8-b6c7bf6566b9","fieldPos":263,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"subpanels","script":"","translation":[]},{"attribute":"headerText","grouping":"Properties","value":"TABLE 2: CRITICAL SUB CONTRACTOR","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"98163102-91f0-480e-fa3a-9abb099d05dd","fieldName":"oListQuestionsTable1","fieldParent":"514bcd02-8c45-454e-dae2-cf16d7f1aae1","fieldPos":264,"fieldType":"sap.m.List","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"questionPanel","script":"","translation":[]}]},{"fieldNo":"7f021740-1f08-4734-9b91-ce15b773cec4","fieldName":"oCustomListItemSCS","fieldParent":"98163102-91f0-480e-fa3a-9abb099d05dd","fieldPos":265,"fieldType":"sap.m.CustomListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"type","grouping":"Properties","value":"Active","script":"","translation":[]},{"attribute":"highlight","grouping":"Properties","value":"{changedAnswer}","script":"","translation":[]}]},{"fieldNo":"ac6e4b06-ff1e-4da1-f0e3-51f5a6b895b8","fieldName":"oHBoxSCS","fieldParent":"7f021740-1f08-4734-9b91-ce15b773cec4","fieldPos":266,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"46f2263c-e05c-4dcb-db4d-7dd1d93094fc","fieldName":"oText2SCS","fieldParent":"ac6e4b06-ff1e-4da1-f0e3-51f5a6b895b8","fieldPos":267,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{description}","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"wrapping","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"807f35d9-5ca7-4ac6-fbaa-025279544700","fieldName":"oVBoxSC2S","fieldParent":"ac6e4b06-ff1e-4da1-f0e3-51f5a6b895b8","fieldPos":268,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"2f479c10-5c7e-48f1-9bbd-65fc4b999f94","fieldName":"rgSCS","fieldParent":"807f35d9-5ca7-4ac6-fbaa-025279544700","fieldPos":269,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"selectedIndex","grouping":"Properties","value":"{value}","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{custom_field_q_editable}","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"selectionOnQuestion(oEvent);\nsetTable2BasedStatus();\ng_isMatEdited = true;","translation":[]}]},{"fieldNo":"05a0bdfe-8eca-4be8-c23e-447378311f36","fieldName":"oRadioButtonSCYS","fieldParent":"2f479c10-5c7e-48f1-9bbd-65fc4b999f94","fieldPos":270,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Yes","script":"","translation":[]}]},{"fieldNo":"ed88aba6-06fa-4396-d949-e1bfa04bc9f9","fieldName":"oRadioButtonSCNS","fieldParent":"2f479c10-5c7e-48f1-9bbd-65fc4b999f94","fieldPos":271,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"No","script":"","translation":[]}]},{"fieldNo":"0129cdee-8c27-46ff-caa2-3e904187286d","fieldName":"oPanelSubcontractor","fieldParent":"dbe23355-d87e-4e78-df7e-cec9396797ab","fieldPos":272,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"36298ed1-782b-4ed0-fc01-f0a4759c1948","fieldName":"oTextSubContractor","fieldParent":"0129cdee-8c27-46ff-caa2-3e904187286d","fieldPos":273,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CRITICAL / CRUCIAL INFORMATION","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"0c529f1a-a95b-4206-e6cb-93044eedac57","fieldName":"oHBox2","fieldParent":"0129cdee-8c27-46ff-caa2-3e904187286d","fieldPos":274,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"Start","script":"","translation":[]}]},{"fieldNo":"006a9f1e-7db3-4fd0-9536-815a3c96e4ab","fieldName":"oVBoxCrucialSupStatus","fieldParent":"0c529f1a-a95b-4206-e6cb-93044eedac57","fieldPos":275,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]}]},{"fieldNo":"b623c8da-f6bc-48ac-8cde-75411754b3e8","fieldName":"oHBoxCrucialSupStatus","fieldParent":"006a9f1e-7db3-4fd0-9536-815a3c96e4ab","fieldPos":276,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"bb8513d9-0c39-41be-809d-fe9f364cd54d","fieldName":"oLabelMaterialSupplierStatus","fieldParent":"b623c8da-f6bc-48ac-8cde-75411754b3e8","fieldPos":277,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Crucial Supplier Status:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9926d031-ebce-41a5-dd7d-c2bc3b18f1f5","fieldName":"oIconCrucialSupStatus","fieldParent":"b623c8da-f6bc-48ac-8cde-75411754b3e8","fieldPos":278,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"openHelperPop(\"crucialSupplierStatus\",this);","script":"openHelperPop(\"crucialSupplierStatus\",this);","translation":[]}]},{"fieldNo":"7dbd80f5-7b64-4271-c61b-f32fea7da884","fieldName":"oComboBoxCrucialSupplierStatus","fieldParent":"006a9f1e-7db3-4fd0-9536-815a3c96e4ab","fieldPos":279,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: Oct 11, 2021\n2021 ENHANCEMENTS\n*/\ng_cri_cru_flag = true;\ntoggleOverrideComment(); //function to toggle the visibility of the override comment\n\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\ng_dataLoss = true;\ng_isMatEdited = true;","translation":[]}]},{"fieldNo":"ffd89a9b-fcf4-44b3-abab-451464ec4c37","fieldName":"oVBoxSubCont","fieldParent":"0c529f1a-a95b-4206-e6cb-93044eedac57","fieldPos":280,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"4043c57c-7dd2-49f0-e3ca-f8f8d44ca082","fieldName":"oHBoxSubCont","fieldParent":"ffd89a9b-fcf4-44b3-abab-451464ec4c37","fieldPos":281,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"fcdeeea9-6507-4498-c41f-b63d46375764","fieldName":"oLabelMaterialSubcontractor","fieldParent":"4043c57c-7dd2-49f0-e3ca-f8f8d44ca082","fieldPos":282,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Critical Subcontractor Status:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"b433c9fc-47d8-46ae-bd9e-2ec124add5e3","fieldName":"oIconSubCont","fieldParent":"4043c57c-7dd2-49f0-e3ca-f8f8d44ca082","fieldPos":283,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"openHelperPop(\"criticalSubcontractorStatus\",this);","script":"openHelperPop(\"criticalSubcontractorStatus\",this);","translation":[]}]},{"fieldNo":"8d737b90-8821-4dc1-ed29-e503011f8c73","fieldName":"oComboBoxCriticalSubContStatus","fieldParent":"ffd89a9b-fcf4-44b3-abab-451464ec4c37","fieldPos":284,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: Oct 11, 2021\n2021 ENHANCEMENTS\n*/\ng_cri_cru_flag = true;\ntoggleOverrideComment(); //function to toggle the visibility of the override comment\n\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\ng_dataLoss = true;\ng_isMatEdited = true;","translation":[]}]},{"fieldNo":"d79917f2-32bd-4bc8-902f-0166872752de","fieldName":"oHBoxOverride","fieldParent":"0129cdee-8c27-46ff-caa2-3e904187286d","fieldPos":285,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]}]},{"fieldNo":"1e9107c7-7c1e-407b-adb9-7eb23d85faab","fieldName":"vboxOverride","fieldParent":"d79917f2-32bd-4bc8-902f-0166872752de","fieldPos":286,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"347dbf99-0791-4126-ee5c-d353e24fe9e4","fieldName":"hboxOverInner","fieldParent":"1e9107c7-7c1e-407b-adb9-7eb23d85faab","fieldPos":287,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"c3b05dd7-dd90-46ff-a46e-acdbe2e8d4a4","fieldName":"oLabelOverride","fieldParent":"347dbf99-0791-4126-ee5c-d353e24fe9e4","fieldPos":288,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Crucial / Critical Status Over-ride Comment (500 Character Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3003cc3f-eaf7-482a-bfab-375091fbffa6","fieldName":"oIconOverride","fieldParent":"347dbf99-0791-4126-ee5c-d353e24fe9e4","fieldPos":289,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"openHelperPop(\"overrideComment\",this);","script":"openHelperPop(\"overrideComment\",this);","translation":[]}]},{"fieldNo":"ab0262b2-e520-42db-a0e7-2500609fb91c","fieldName":"labRemCountOverride","fieldParent":"347dbf99-0791-4126-ee5c-d353e24fe9e4","fieldPos":290,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"7cfff1aa-1f6d-4371-e364-e481abb00876","fieldName":"txtOverrideCom","fieldParent":"1e9107c7-7c1e-407b-adb9-7eb23d85faab","fieldPos":291,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/overrideComment}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"10","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text (only when override comment is visible)\n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\ncreated by: VIGHNESH\ncreated on: AUGUST 26, 2021\n*/\nif (oHBoxOverride.getVisible()) {\n\n    labRemCountOverride.setText();\n\n    let len = 500 - this.getValue().length;\n\n    //do not show the remaining character label if len is 500 or nothing is entered in the field else show the label\n    len === 500 ? labRemCountOverride.setText() : labRemCountOverride.setText(\"Characters Left : \" + len);\n\n    //what if maximum character limit is reached\n    if (len === 0) {\n        this.setValueState(\"Warning\");\n        this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n        this.removeStyleClass(\"textbox\");\n        this.addStyleClass(\"warning\");\n    } else {\n        this.setValueState(\"None\");\n        this.removeStyleClass(\"warning\");\n        this.addStyleClass(\"textbox\");\n        this.setValueStateText();\n    }\n\n    if (this.getValue().trim() !== \"\") {\n        this.removeStyleClass(\"error\");\n        this.addStyleClass(\"textbox\");\n    }\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_isMatEdited = true;","translation":[]}]},{"fieldNo":"31a13ec7-20da-4091-d9b0-ba9a8bb2821f","fieldName":"oPanelJnJInfo","fieldParent":"dbe23355-d87e-4e78-df7e-cec9396797ab","fieldPos":292,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"4e8fcb20-58d9-401a-ec6c-34c8a7b5485d","fieldName":"popPurchaseSys","fieldParent":"31a13ec7-20da-4091-d9b0-ba9a8bb2821f","fieldPos":293,"fieldType":"sap.m.ResponsivePopover","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"showHeader","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"placement","grouping":"Properties","value":"Top","script":"","translation":[]},{"attribute":"contentWidth","grouping":"Properties","value":"800px","script":"","translation":[]}]},{"fieldNo":"e47b210c-4d3c-41e2-aa91-b2ce441980f3","fieldName":"oTablePOPPurch","fieldParent":"4e8fcb20-58d9-401a-ec6c-34c8a7b5485d","fieldPos":294,"fieldType":"sap.m.Table","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"showSeparators","grouping":"Properties","value":"Inner","script":"","translation":[]},{"attribute":"fixedLayout","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"a8717069-7ac2-494c-876f-0016842f8bb5","fieldName":"oColumnid","fieldParent":"e47b210c-4d3c-41e2-aa91-b2ce441980f3","fieldPos":295,"fieldType":"sap.m.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"652e0760-0c7a-4b76-ce1d-aa23c3a257ca","fieldName":"oText4","fieldParent":"a8717069-7ac2-494c-876f-0016842f8bb5","fieldPos":296,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Purchasing System ID","script":"","translation":[]}]},{"fieldNo":"523f1a6c-78c2-46b6-88f4-38b5eb32de87","fieldName":"oColumn3NN","fieldParent":"e47b210c-4d3c-41e2-aa91-b2ce441980f3","fieldPos":297,"fieldType":"sap.m.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"6bec22c1-83f6-48e4-c026-71dd5f699066","fieldName":"oText5","fieldParent":"523f1a6c-78c2-46b6-88f4-38b5eb32de87","fieldPos":298,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Purchasing System Name","script":"","translation":[]}]},{"fieldNo":"afff9853-d459-466b-8b2d-885d5a5c5172","fieldName":"oColumn2LA","fieldParent":"e47b210c-4d3c-41e2-aa91-b2ce441980f3","fieldPos":299,"fieldType":"sap.m.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"dc4f42dc-a1d1-4897-e10f-8d16ec5dfc31","fieldName":"oText6","fieldParent":"afff9853-d459-466b-8b2d-885d5a5c5172","fieldPos":300,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Location Address","script":"","translation":[]}]},{"fieldNo":"2b2e4100-d550-45b1-c821-d382924b20c9","fieldName":"oColumnListItemN","fieldParent":"e47b210c-4d3c-41e2-aa91-b2ce441980f3","fieldPos":301,"fieldType":"sap.m.ColumnListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"bf039c46-b87f-41e4-e01b-e01e9bae9c6b","fieldName":"oText3","fieldParent":"2b2e4100-d550-45b1-c821-d382924b20c9","fieldPos":302,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{purchasingSysId}","script":"","translation":[]}]},{"fieldNo":"64a38aff-d9f6-41ef-dffb-190c2f310936","fieldName":"oText2","fieldParent":"2b2e4100-d550-45b1-c821-d382924b20c9","fieldPos":303,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{purchasingSysName}","script":"","translation":[]}]},{"fieldNo":"249cd21e-b322-4ff0-b621-2e3f604efcf1","fieldName":"oText1","fieldParent":"2b2e4100-d550-45b1-c821-d382924b20c9","fieldPos":304,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{locationAddress}","script":"","translation":[]}]},{"fieldNo":"a1929c37-91c7-410f-8db5-1bdb03165838","fieldName":"oTextJnJInfo","fieldParent":"31a13ec7-20da-4091-d9b0-ba9a8bb2821f","fieldPos":305,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"J&J INFORMATION","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBottom","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"ccb18199-7340-4480-d88f-7a4dce139c38","fieldName":"oHBoxJnJInfo","fieldParent":"31a13ec7-20da-4091-d9b0-ba9a8bb2821f","fieldPos":306,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"fd91b275-001b-4d35-ea46-6754c715c9c1","fieldName":"oVBoxJnJSegment","fieldParent":"ccb18199-7340-4480-d88f-7a4dce139c38","fieldPos":307,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"91d85803-7122-475c-fb8c-3d3bb9f0e06d","fieldName":"oLabelMaterialSegment","fieldParent":"fd91b275-001b-4d35-ea46-6754c715c9c1","fieldPos":308,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"J&J Segment:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"23cc9a3e-8f14-45c0-dd4c-8d833894cf88","fieldName":"oComboBoxSegment","fieldParent":"fd91b275-001b-4d35-ea46-6754c715c9c1","fieldPos":309,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/jnjSegment}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: Oct 11, 2021\n2021 ENHANCEMENTS\n*/\ng_isMatEdited = true;\n\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\nlet qtyOrgCombo = this.getSelectedKey();\n\nif (qtyOrgCombo !== \"\") {\n    oComboBoxQualOrg.setBlocked(false);\n    oComboBoxQualOrg.setPlaceholder();\n} else {\n    oComboBoxQualOrg.setBlocked(true);\n    oComboBoxQualOrg.setPlaceholder('Select J&J Segment first');\n}\n\n\n\nlet arr = [];\nlet configModel = adminConfigHolder.getModel().getData();\noComboBoxQualOrg.removeAllItems();\noComboBoxQualOrg.setSelectedKey();\nfor (i = 0; i < configModel.length; i++) {\n    if ((configModel[i].dataElement) === qtyOrgCombo) {\n        arr.push(configModel[i].values);\n    }\n}\n\n\n\nsetComboBox(oComboBoxQualOrg, arr);","translation":[]}]},{"fieldNo":"24d79389-c75c-4e4f-8f5f-cc104c30ed5b","fieldName":"oVBoxJnJQualOrg","fieldParent":"ccb18199-7340-4480-d88f-7a4dce139c38","fieldPos":310,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"02d05d21-3a54-48a8-9093-d6f465eb2e53","fieldName":"oLabelMaterialQulity","fieldParent":"24d79389-c75c-4e4f-8f5f-cc104c30ed5b","fieldPos":311,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"J&J Quality Organization:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"6dea780e-267d-4dec-ba9b-0e566f3e1d7e","fieldName":"oComboBoxQualOrg","fieldParent":"24d79389-c75c-4e4f-8f5f-cc104c30ed5b","fieldPos":312,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/jnjOrg}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"placeholder","grouping":"Properties","value":"Select J&J Segment first","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: oct 11, 2021\n2021ENHANCEMENTS\n*/\ng_isMatEdited = true;\n\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"02bea1f9-7b86-4e62-869f-574cd054f339","fieldName":"oVBoxJnJOpComp","fieldParent":"ccb18199-7340-4480-d88f-7a4dce139c38","fieldPos":313,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"af2cfb23-e840-4459-99cf-d3b9b97aa758","fieldName":"oLabelMaterialOpp","fieldParent":"02bea1f9-7b86-4e62-869f-574cd054f339","fieldPos":314,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"J&J Operating Company:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"26c32e75-b513-4873-f82b-d3c587928fce","fieldName":"oComboBoxOpComp","fieldParent":"02bea1f9-7b86-4e62-869f-574cd054f339","fieldPos":315,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/jnjOpComp}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\r\nUPDATED BY: VIGHNESH\r\nUPDATED ON: oct 11, 2021\r\n2021ENHANCEMENTS\r\n*/\r\ng_isMatEdited = true;\r\n\r\nif (this.getSelectedKey() !== \"\") {\r\n    this.removeStyleClass(\"error\");\r\n    this.addStyleClass(\"combobox\");\r\n}\r\n\r\n\r\nlet qtyOpCombo = this.getSelectedKey();\r\n\r\nif (qtyOpCombo !== \"\") {\r\n    oComboBoxjnjSite.setBlocked(false);\r\n    oComboBoxjnjSite.setPlaceholder();\r\n} else {\r\n    oComboBoxjnjSite.setBlocked(true);\r\n    oComboBoxjnjSite.setPlaceholder('Select J&J Segment first');\r\n}\r\n\r\nlet arr = [];\r\nlet configModel = adminConfigHolder.getModel().getData();\r\noComboBoxjnjSite.removeAllItems();\r\noComboBoxjnjSite.setSelectedKey();\r\nfor (i = 0; i < configModel.length; i++) {\r\n    if ((configModel[i].dataElement) === qtyOpCombo) {\r\n        arr.push(configModel[i].values);\r\n    }\r\n}\r\n\r\n\r\nsetComboBox(oComboBoxjnjSite, arr);","translation":[]}]},{"fieldNo":"f61ee9ca-d981-488f-bf88-2ea058bebd23","fieldName":"oVBoxJnJSite","fieldParent":"ccb18199-7340-4480-d88f-7a4dce139c38","fieldPos":316,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"2d63c714-0002-4a87-d6f9-c3adb65795c5","fieldName":"oLabelMaterialSite","fieldParent":"f61ee9ca-d981-488f-bf88-2ea058bebd23","fieldPos":317,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"J&J Site:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"24442194-f5c7-429a-aa3f-1ac1902aa376","fieldName":"oComboBoxjnjSite","fieldParent":"f61ee9ca-d981-488f-bf88-2ea058bebd23","fieldPos":318,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/jnjSite}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"placeholder","grouping":"Properties","value":"Select J&J Operating Company first","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\nUPDATED BY: VIGHNESH\nUPDATED ON: oct 11, 2021\n2021ENHANCEMENTS\n*/\ng_dataLoss = true;\ng_isMatEdited = true;\n\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"28635193-d31e-4b24-f4c6-1b1ffbc252a8","fieldName":"oVBoxMaterialjnjRegion","fieldParent":"ccb18199-7340-4480-d88f-7a4dce139c38","fieldPos":319,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"d1e534b1-748b-4079-fef8-1aa75252f251","fieldName":"oLabelMaterialRegion","fieldParent":"28635193-d31e-4b24-f4c6-1b1ffbc252a8","fieldPos":320,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"J&J Region:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"94afca69-ce82-4a5f-8bcb-808510974478","fieldName":"oComboBoxjnjRegion","fieldParent":"28635193-d31e-4b24-f4c6-1b1ffbc252a8","fieldPos":321,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/jnjRegion}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"g_isMatEdited = true;","script":"g_isMatEdited = true;","translation":[]}]},{"fieldNo":"00643430-3508-4fb3-e04c-ee262c11435a","fieldName":"oSimpleFormSupplierInfo","fieldParent":"31a13ec7-20da-4091-d9b0-ba9a8bb2821f","fieldPos":322,"fieldType":"sap.ui.layout.form.SimpleForm","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"simpleForm","script":"","translation":[]},{"attribute":"layout","grouping":"Properties","value":"ColumnLayout","script":"","translation":[]},{"attribute":"labelSpanM","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"labelSpanL","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"columnsL","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"columnsXL","grouping":"Properties","value":"3","script":"","translation":[]}]},{"fieldNo":"b5e1c103-d2e4-43fc-cf33-f914f8cefd18","fieldName":"oLabelQualContact","fieldParent":"00643430-3508-4fb3-e04c-ee262c11435a","fieldPos":323,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"J&J Quality Contact","script":"","translation":[{"language":"DE","value":"LE Nummer"},{"language":"FR","value":"HU Numéro "}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"27557855-5d1e-4d4d-990f-cbd43f2661e0","fieldName":"oMultiInputQualContact","fieldParent":"00643430-3508-4fb3-e04c-ee262c11435a","fieldPos":324,"fieldType":"sap.m.MultiInput","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"showValueHelp","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"showSuggestion","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"startSuggestion","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"showTableSuggestionValueHelp","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"maxTokens","grouping":"Properties","value":"10","script":"","translation":[]},{"attribute":"suggest","grouping":"Events","value":"Anonymous Function","script":"getEmailValues(this);","translation":[]},{"attribute":"suggestionItemSelected","grouping":"Events","value":"Anonymous Function","script":"setEmailValues(oEvent);","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]}]},{"fieldNo":"5df6b834-62f3-4d32-bcf6-7acb00c9586d","fieldName":"oLabelProContactM","fieldParent":"00643430-3508-4fb3-e04c-ee262c11435a","fieldPos":325,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"J&J Primary Supplier Liaison","script":"","translation":[{"language":"DE","value":"Pickauftrag"},{"language":"FR","value":"commande pick"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"7e5416e8-51b2-4068-d0a6-18db6d3c2b70","fieldName":"oMultiInputProContactM","fieldParent":"00643430-3508-4fb3-e04c-ee262c11435a","fieldPos":326,"fieldType":"sap.m.MultiInput","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"showValueHelp","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"showSuggestion","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"startSuggestion","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"showTableSuggestionValueHelp","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"maxTokens","grouping":"Properties","value":"10","script":"","translation":[]},{"attribute":"suggest","grouping":"Events","value":"Anonymous Function","script":"getEmailValues(this);","translation":[]},{"attribute":"suggestionItemSelected","grouping":"Events","value":"setEmailValues(oEvent);","script":"setEmailValues(oEvent);","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]}]},{"fieldNo":"eb65c78c-7d4b-4123-a303-5ad2067e07c6","fieldName":"oLabelSrcContactM","fieldParent":"00643430-3508-4fb3-e04c-ee262c11435a","fieldPos":327,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"J&J Sourcing Contact","script":"","translation":[{"language":"DE","value":"Transform Bestellung #"},{"language":"FR","value":"# commande de transformation"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"5d68ce9e-79d3-42cd-a087-7d6504ac676c","fieldName":"oMultiInputSrcContact","fieldParent":"00643430-3508-4fb3-e04c-ee262c11435a","fieldPos":328,"fieldType":"sap.m.MultiInput","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"showValueHelp","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"showSuggestion","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"startSuggestion","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"showTableSuggestionValueHelp","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"maxTokens","grouping":"Properties","value":"10","script":"","translation":[]},{"attribute":"suggest","grouping":"Events","value":"Anonymous Function","script":"getEmailValues(this);","translation":[]},{"attribute":"suggestionItemSelected","grouping":"Events","value":"setEmailValues(oEvent);","script":"setEmailValues(oEvent);","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]}]},{"fieldNo":"71b7727a-1167-4e8d-e64d-254c1247dfd3","fieldName":"oHBoxModEmail","fieldParent":"31a13ec7-20da-4091-d9b0-ba9a8bb2821f","fieldPos":329,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"b5a056fc-e1eb-4a70-bb8a-5b22c189bbc1","fieldName":"btnModify","fieldParent":"71b7727a-1167-4e8d-e64d-254c1247dfd3","fieldPos":330,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"MODIFY","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"var flag = false;\n\nif (this.getText() === 'SAVE') {\n    flag = false;\n    this.setText('MODIFY');\n\n\n    var data = oPanelMaterialInformation.getModel().getData();\n    data.jnjQualityContact = getStringFromTokenQC();\n    data.jnjSupplierLiason = getStringFromTokenSL();\n    data.jnjSourcingContact = getStringFromTokenSC();\n\n    var options = {\n        data: {\n            \"data\": data\n        }\n    };\n    sap.ui.core.BusyIndicator.show(0);\n    apiupdateMaterialContact(options);\n    btnCancelMdf.setVisible(false);\n    //API \n} else {\n    flag = true;\n    this.setText('SAVE');\n    btnCancelMdf.setVisible(true);\n}\n\noMultiInputQualContact.setEditable(flag);\noMultiInputProContactM.setEditable(flag);\noMultiInputSrcContact.setEditable(flag);","translation":[]}]},{"fieldNo":"eaa3e9f0-625e-4534-a480-13124fcb75d5","fieldName":"btnCancelMdf","fieldParent":"71b7727a-1167-4e8d-e64d-254c1247dfd3","fieldPos":331,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CANCEL","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oMultiInputQualContact.setEditable(false);\noMultiInputProContactM.setEditable(false);\noMultiInputSrcContact.setEditable(false);\nbtnModify.setText('MODIFY');\n btnCancelMdf.setVisible(false);\n//Revert back original values\nvar data = oPanelMaterialInformation.getModel().getData();\ndata = ModelData.FindFirst(oTableAddMaterial,\"matInfoId\",data.matInfoId);\ncreateTokensFromString(oMultiInputQualContact, data.jnjQualityContact);\ncreateTokensFromString(oMultiInputProContactM, data.jnjSupplierLiason);\ncreateTokensFromString(oMultiInputSrcContact, data.jnjSourcingContact);","translation":[]}]},{"fieldNo":"17db1ef1-5914-4191-b3dd-9203e69200dc","fieldName":"oPanelSupplierPurchaseSys","fieldParent":"31a13ec7-20da-4091-d9b0-ba9a8bb2821f","fieldPos":332,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"68229f84-7dce-4a3f-8b1b-1a1ceb0f1a5c","fieldName":"oTextSupBusLink","fieldParent":"17db1ef1-5914-4191-b3dd-9203e69200dc","fieldPos":333,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"SUPPLIER BUSINESS LINKAGE","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"56794182-36c8-4ec1-d5b8-e5e8e3a36c2e","fieldName":"oHBoxPurchaseInfo","fieldParent":"17db1ef1-5914-4191-b3dd-9203e69200dc","fieldPos":334,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"51eeb157-650d-4758-9858-122bd90c52ec","fieldName":"oVBoxPurchaseSys","fieldParent":"56794182-36c8-4ec1-d5b8-e5e8e3a36c2e","fieldPos":335,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"c4afffd6-9696-4bc6-b235-9cfc80bad26d","fieldName":"oHBoxPurchaseSysIDNum","fieldParent":"51eeb157-650d-4758-9858-122bd90c52ec","fieldPos":336,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"cbc163e5-b08c-4705-c6c0-6d6f044ff57f","fieldName":"oLabelSupplierPurchaseSysIDNum","fieldParent":"c4afffd6-9696-4bc6-b235-9cfc80bad26d","fieldPos":337,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Purchasing System ID:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"79970f53-3a94-425c-8f64-2bb10c4cd85a","fieldName":"oIconPurchaseSysIDNum","fieldParent":"c4afffd6-9696-4bc6-b235-9cfc80bad26d","fieldPos":338,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"openHelperPop(\"purchasingSystemIdNumber\",this)","script":"openHelperPop(\"purchasingSystemIdNumber\",this)","translation":[]}]},{"fieldNo":"2154afed-3b5d-4c9b-de24-6f1f223023ce","fieldName":"labRemCountPurSysID","fieldParent":"c4afffd6-9696-4bc6-b235-9cfc80bad26d","fieldPos":339,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"d3f463df-4486-4b96-d7d5-9d56743c63ae","fieldName":"txtPurchaseSysID","fieldParent":"51eeb157-650d-4758-9858-122bd90c52ec","fieldPos":340,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"100","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\ncreated by: VIGHNESH\ncreated on: AUGUST 26, 2021\n*/\nlabRemCountPurSysID.setText();\n\nlet len = 100 - this.getValue().length;\n\n//do not show the remaining character label if len is 100 or nothing is entered in the field else show the label\nlen === 100 ? labRemCountPurSysID.setText() : labRemCountPurSysID.setText(\"Characters Left : \" + len);\n\n//what if maximum character limit is reached\nif (len === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 100 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n}\nelse {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"textbox\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"g_isMatEdited = true;","script":"g_isMatEdited = true;","translation":[]}]},{"fieldNo":"2c858d89-0edc-43de-9f75-dfac14a11099","fieldName":"oHBox9PurchaseSysName","fieldParent":"51eeb157-650d-4758-9858-122bd90c52ec","fieldPos":341,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"align","script":"","translation":[]}]},{"fieldNo":"ecdd62bd-f2b6-4167-daac-461f1467968c","fieldName":"oLabelSupplierPurchaseSysName","fieldParent":"2c858d89-0edc-43de-9f75-dfac14a11099","fieldPos":342,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Purchasing System:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"40efb03d-eaf3-4c6f-8c79-c38b8a8c463f","fieldName":"oIconPurchaseSysName","fieldParent":"2c858d89-0edc-43de-9f75-dfac14a11099","fieldPos":343,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"openHelperPop(\"purchasingSystemName\",this);","script":"openHelperPop(\"purchasingSystemName\",this);","translation":[]}]},{"fieldNo":"28e60cfc-edd5-42eb-8ecc-c4bc8ad061b3","fieldName":"labRemCountPurSysName","fieldParent":"2c858d89-0edc-43de-9f75-dfac14a11099","fieldPos":344,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"97a60b1c-712b-4e62-e74b-9d238a172199","fieldName":"txtPurSysName","fieldParent":"51eeb157-650d-4758-9858-122bd90c52ec","fieldPos":345,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"100","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\ncreated by: VIGHNESH\ncreated on: AUGUST 26, 2021\n*/\nlabRemCountPurSysName.setText();\n\nlet len = 100 - this.getValue().length;\n\n//do not show the remaining character label if len is 100 or nothing is entered in the field else show the label\nlen === 100 ? labRemCountPurSysName.setText() : labRemCountPurSysName.setText(\"Characters Left : \" + len);\n\n//what if maximum character limit is reached\nif (len === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 100 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n}\nelse {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"textbox\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"g_isMatEdited = true;","script":"g_isMatEdited = true;","translation":[]}]},{"fieldNo":"0bdef2ac-908b-48a8-81d4-c75617a57f64","fieldName":"oVBoxLocationAddress","fieldParent":"56794182-36c8-4ec1-d5b8-e5e8e3a36c2e","fieldPos":346,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBegin","script":"","translation":[]}]},{"fieldNo":"a1c335c8-99d4-4705-dfcd-00310933152d","fieldName":"oHBoxLocationAddressInner","fieldParent":"0bdef2ac-908b-48a8-81d4-c75617a57f64","fieldPos":347,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"24abd3bf-5633-4cbe-fa4a-ca1f4847ea28","fieldName":"oLabelLocationAddress","fieldParent":"a1c335c8-99d4-4705-dfcd-00310933152d","fieldPos":348,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Location Address:","script":"","translation":[]}]},{"fieldNo":"9bca4b4a-1b07-4081-bf50-a8893e7149bb","fieldName":"oIconLocAddress","fieldParent":"a1c335c8-99d4-4705-dfcd-00310933152d","fieldPos":349,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/question-circle","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"openHelperPop(\"locationAddress\",this);\n\n\n\n\n\n\n","translation":[]}]},{"fieldNo":"fd436584-bfbd-4441-d0ec-252008bcca22","fieldName":"labRemCountLocAdd","fieldParent":"a1c335c8-99d4-4705-dfcd-00310933152d","fieldPos":350,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"5da2698b-2064-4046-95bc-c870f5b5a72a","fieldName":"txtLocationAddress","fieldParent":"0bdef2ac-908b-48a8-81d4-c75617a57f64","fieldPos":351,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"7","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"7","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\ncreated by: VIGHNESH\ncreated on: AUGUST 26, 2021\n*/\nlabRemCountLocAdd.setText();\n\nlet len = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 or nothing is entered in the field else show the label\nlen === 500 ? labRemCountLocAdd.setText() : labRemCountLocAdd.setText(\"Characters Left : \" + len);\n\n//what if maximum character limit is reached\nif (len === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n}\nelse {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n\n\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"textbox\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"g_isMatEdited = true;","script":"g_isMatEdited = true;","translation":[]}]},{"fieldNo":"77a87ba4-3634-41fc-a2cd-b411ff36152c","fieldName":"oHBoxBtnBusLink","fieldParent":"17db1ef1-5914-4191-b3dd-9203e69200dc","fieldPos":352,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{/custom_mat_enabled}","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"736e5e8c-1c6f-4f2a-82ff-dfd4b207df7c","fieldName":"oBtnRemoveSupBusLink","fieldParent":"77a87ba4-3634-41fc-a2cd-b411ff36152c","fieldPos":353,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"RESET BUSINESS LINKAGE","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"let errorStatus = false;\nlet err = \"\";\nlet errorMsg = [];\n\nlet purchaseId = txtPurchaseSysID.getValue();\nlet purchaseName = txtPurSysName.getValue();\nlet locationAddress = txtLocationAddress.getValue();\n\nif(purchaseId === \"\" && purchaseName === \"\" && locationAddress === \"\"){\n    errorStatus = true;\n    errorMsg.push(\"\\n Purchasing System ID\");\n    errorMsg.push(\"\\n Purchasing System\");\n    errorMsg.push(\"\\n Location Address\");\n}\n\nif(errorMsg.length > 0){\n    err += \"Please First enter either of the following fields: \\n\" +errorMsg.toString() +\"\\n\" +\"\\n\" +\"to reset the Supplier Business Linkage\";\n    showMessageToast(err);\n} else{\n    clearBusLinkCharacterLimit();\n    purchaseClearInput();\n}","translation":[]}]},{"fieldNo":"98ef711f-385d-4f2a-fb10-4df37ed8f8e4","fieldName":"oBtnADDSupBusLink","fieldParent":"77a87ba4-3634-41fc-a2cd-b411ff36152c","fieldPos":354,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"ADD BUSINESS LINKAGE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"clearBusLinkCharacterLimit();\n\nlet err = \"\";\nlet errorMsg = [];\n\nlet purchaseId = txtPurchaseSysID.getValue().trim();\nlet purchaseName = txtPurSysName.getValue().trim();\nlet locationAddress = txtLocationAddress.getValue().trim();\n\nif (purchaseId === \"\" && purchaseName === \"\" && locationAddress === \"\") {\n\n    errorMsg.push(\"\\n Purchasing System ID\");\n    errorMsg.push(\"\\n Purchasing System\");\n    errorMsg.push(\"\\n Location Address\");\n}\n\nif (errorMsg.length > 0) {\n    if (oBtnADDSupBusLink.getText() === \"ADD BUSINESS LINKAGE\") {\n        err += \"Please enter either of the following fields: \\n\" + errorMsg.toString() + \"\\n\" + \"\\n\" + \"to add Supplier Business Linkage\";\n        showMessageToast(err);\n    } else {\n        err += \"Please enter either of the following fields: \\n\" + errorMsg.toString() + \"\\n\" + \"\\n\" + \"to update Supplier Business Linkage\";\n        showMessageToast(err);\n    }\n\n} else {\n    purchaseTableAdd();\n}\n","translation":[]}]},{"fieldNo":"2f36956d-78a8-4428-ec22-4b6c6f4b871e","fieldName":"oTablePurchaseSys","fieldParent":"17db1ef1-5914-4191-b3dd-9203e69200dc","fieldPos":355,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingType":"h","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"Single","script":"","translation":[]},{"attribute":"selectionBehavior","grouping":"Properties","value":"RowOnly","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"da6d4596-01cd-4eaf-b51d-cd65731855f4","fieldName":"oColumnPurchaseSysBtn","fieldParent":"2f36956d-78a8-4428-ec22-4b6c6f4b871e","fieldPos":356,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"874264e7-d60f-4b9b-f63c-baa533e1761a","fieldName":"oHorLayPurSys","fieldParent":"da6d4596-01cd-4eaf-b51d-cd65731855f4","fieldPos":357,"fieldType":"sap.ui.layout.HorizontalLayout","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"f6502d7a-13a5-4656-d206-a8ce900a4143","fieldName":"oButtonPurchaseSysEdit","fieldParent":"874264e7-d60f-4b9b-f63c-baa533e1761a","fieldPos":358,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{custom_field_p_editable}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"blueicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/pencil-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"purchaseTableEdit(this);\n","translation":[]}]},{"fieldNo":"2460d8de-e04e-4c60-a80d-c768b7bc1b73","fieldName":"oButtonPurchaseSysDelete","fieldParent":"874264e7-d60f-4b9b-f63c-baa533e1761a","fieldPos":359,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{custom_field_p_editable}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/trash-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"purchaseTableDel(this)","translation":[]}]},{"fieldNo":"2e83ec84-42ab-4138-b610-515925896cc3","fieldName":"oColumnPurchaseSysId","fieldParent":"2f36956d-78a8-4428-ec22-4b6c6f4b871e","fieldPos":360,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Purchasing System ID","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"ea8b53e1-034c-461e-e4db-6c366bd40a25","fieldName":"oTextPurchaseSysId","fieldParent":"2e83ec84-42ab-4138-b610-515925896cc3","fieldPos":361,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{purchasingSysId}","script":"","translation":[]}]},{"fieldNo":"bebfee02-4e44-46ac-dc18-1c0cf6e8f09a","fieldName":"oColumnPurchaseSysName","fieldParent":"2f36956d-78a8-4428-ec22-4b6c6f4b871e","fieldPos":362,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Purchasing System Name","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"1dd3111f-3ef9-49e6-b5e7-ed24c0bce7a1","fieldName":"oTextPurchaseSysName","fieldParent":"bebfee02-4e44-46ac-dc18-1c0cf6e8f09a","fieldPos":363,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{purchasingSysName}","script":"","translation":[]}]},{"fieldNo":"a3ed3d90-c83d-4f41-88cd-33591b58d971","fieldName":"oColumnLOCATION","fieldParent":"2f36956d-78a8-4428-ec22-4b6c6f4b871e","fieldPos":364,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Location Address","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"8a4885ac-ffcc-40ab-de60-2b12a53366e1","fieldName":"oTextPurchaseLocation","fieldParent":"a3ed3d90-c83d-4f41-88cd-33591b58d971","fieldPos":365,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{locationAddress}","script":"","translation":[]}]},{"fieldNo":"898760f5-7d06-4e44-b537-e01979062c1b","fieldName":"oHBoxAddJNJInfo","fieldParent":"31a13ec7-20da-4091-d9b0-ba9a8bb2821f","fieldPos":366,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"51f71be6-44e6-47c3-85fe-48747aa1d2d1","fieldName":"btnResetMaterialJJ","fieldParent":"898760f5-7d06-4e44-b537-e01979062c1b","fieldPos":367,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"RESET J&J INFORMATION","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"//VIGHNESHJUN4\nif (oComboBoxSegment.aCustomStyleClasses.includes(\"error\") ||\n    oComboBoxQualOrg.aCustomStyleClasses.includes(\"error\") ||\n    oComboBoxOpComp.aCustomStyleClasses.includes(\"error\") ||\n    oComboBoxjnjSite.aCustomStyleClasses.includes(\"error\")) {\n    clearJnJHighlightedfields();\n} else {\n    if (oComboBoxSegment.getSelectedKey() === \"\" && oComboBoxQualOrg.getSelectedKey() === \"\" && oComboBoxOpComp.getSelectedKey() === \"\" && oComboBoxjnjSite.getSelectedKey() === \"\" && oComboBoxjnjRegion.getSelectedKey() === \"\" &&\n        oMultiInputQualContact.getTokens().length === 0 && oMultiInputProContactM.getTokens().length === 0 && oMultiInputSrcContact.getTokens().length === 0) {\n        showMessageToast(\"Please first enter the following mandatory fields: \" + \"\\n\" + \"\\n\" + \"* J&J Segment\" + \"\\n\" + \"* J&J Quality Organization\" + \"\\n\" + \"* J&J Operating Company\" + \"\\n\" + \"* J&J Site\" + \"\\n\" + \"\\n\" +\n            \"Please first enter either of the following fields\" + \"\\n\" + \"\\n\" + \"J&J Region\" + \"\\n\" + \"J&J Quality Contact\" + \"\\n\" + \"J&J Primary Supplier Liaison\" + \"\\n\" + \"J&J Sourcing Contact\");\n    } else {\n        resetJnjContact();\n    }\n}","translation":[]}]},{"fieldNo":"c51a85d0-e7d9-4146-ad23-4c1b8e534d1a","fieldName":"oButtonAddJnjInfo","fieldParent":"898760f5-7d06-4e44-b537-e01979062c1b","fieldPos":368,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"ADD J&J INFORMATION","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"addUpdateJnjInfoContact();   ","translation":[]}]},{"fieldNo":"25d2e67a-1352-4bb5-c43b-d87f00164760","fieldName":"oBarJNJContact","fieldParent":"31a13ec7-20da-4091-d9b0-ba9a8bb2821f","fieldPos":369,"fieldType":"sap.m.Bar","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setSubHeader","script":"","translation":[]}]},{"fieldNo":"ee4a7b6e-baf1-48bf-ee41-92fed7ac08b3","fieldName":"Left3","fieldParent":"25d2e67a-1352-4bb5-c43b-d87f00164760","fieldPos":370,"fieldType":"neptune.BarContent","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"4964a754-3d9a-4e2a-8ae1-eac2ce0c6452","fieldName":"oTextMaterialjnjNumb","fieldParent":"ee4a7b6e-baf1-48bf-ee41-92fed7ac08b3","fieldPos":371,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"f8ea5ab3-6314-4e9b-dd5d-ef7a7af0dcaf","fieldName":"oTableJnJInfoData","fieldParent":"31a13ec7-20da-4091-d9b0-ba9a8bb2821f","fieldPos":372,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"Single","script":"","translation":[]},{"attribute":"selectionBehavior","grouping":"Properties","value":"RowOnly","script":"","translation":[]}]},{"fieldNo":"36d595bd-3b92-46a1-e2d4-83b08124dffc","fieldName":"oColumnjnjAactions","fieldParent":"f8ea5ab3-6314-4e9b-dd5d-ef7a7af0dcaf","fieldPos":373,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"130px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"c7b3efd4-a9aa-447f-dedc-bcddeb906f0a","fieldName":"oHorLayInfo","fieldParent":"36d595bd-3b92-46a1-e2d4-83b08124dffc","fieldPos":374,"fieldType":"sap.ui.layout.HorizontalLayout","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"ed3b8594-41de-48cf-cf73-b2b4a183d5e7","fieldName":"oBtnInfoEdit","fieldParent":"c7b3efd4-a9aa-447f-dedc-bcddeb906f0a","fieldPos":375,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{custom_field_t_editable}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"blueicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/pencil-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"jnjContactTableEdit(this);","script":"jnjContactTableEdit(this);","translation":[]}]},{"fieldNo":"0f359cd4-39c0-4d18-b794-9d6cca4fabed","fieldName":"oBtnInfoDelete","fieldParent":"c7b3efd4-a9aa-447f-dedc-bcddeb906f0a","fieldPos":376,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{custom_field_t_editable}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/trash-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"jnjContactTableDel(this);","script":"jnjContactTableDel(this);","translation":[]}]},{"fieldNo":"d9ea3723-c8d4-4309-c3bd-145589deed50","fieldName":"oColumn1Seg","fieldParent":"f8ea5ab3-6314-4e9b-dd5d-ef7a7af0dcaf","fieldPos":377,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"J&J Segment","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"effeab32-b65c-4085-da4d-b5db32e05c7d","fieldName":"oTextSeg","fieldParent":"d9ea3723-c8d4-4309-c3bd-145589deed50","fieldPos":378,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjSegment}","script":"","translation":[]}]},{"fieldNo":"ab772e4f-9a5b-4a56-9418-2893bbd729e2","fieldName":"oColumn2Org","fieldParent":"f8ea5ab3-6314-4e9b-dd5d-ef7a7af0dcaf","fieldPos":379,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"J&J Quality Organization ","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"a9b146b5-dc36-45ca-adb3-9187d74c60d2","fieldName":"oText2Org","fieldParent":"ab772e4f-9a5b-4a56-9418-2893bbd729e2","fieldPos":380,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjOrg}","script":"","translation":[]}]},{"fieldNo":"aa003b8b-1738-48bf-c9f8-5e8f4f68e709","fieldName":"oColumn3Comp","fieldParent":"f8ea5ab3-6314-4e9b-dd5d-ef7a7af0dcaf","fieldPos":381,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"J&J Operating Company","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"e0e36a0e-4288-4e33-be8d-568ecfe956dc","fieldName":"oText3Comp","fieldParent":"aa003b8b-1738-48bf-c9f8-5e8f4f68e709","fieldPos":382,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjOpComp}","script":"","translation":[]}]},{"fieldNo":"3e2c1f4f-6377-4193-e178-a1ac4156dd9b","fieldName":"oColumn4Site","fieldParent":"f8ea5ab3-6314-4e9b-dd5d-ef7a7af0dcaf","fieldPos":383,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"J&J Site","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"be974381-1174-4001-87f3-5999e725fb61","fieldName":"oText4site","fieldParent":"3e2c1f4f-6377-4193-e178-a1ac4156dd9b","fieldPos":384,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjSite}","script":"","translation":[]}]},{"fieldNo":"0a2f15c7-169b-4c4d-b79f-af732d21085e","fieldName":"oColumn4Region","fieldParent":"f8ea5ab3-6314-4e9b-dd5d-ef7a7af0dcaf","fieldPos":385,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"J&J Region","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"0f7492a3-bc26-41ce-e147-07ffcef2c2f5","fieldName":"oText4Region","fieldParent":"0a2f15c7-169b-4c4d-b79f-af732d21085e","fieldPos":386,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjRegion}","script":"","translation":[]}]},{"fieldNo":"ed69d4d1-01a1-41cf-d5bf-59d23c5df585","fieldName":"oColumnCount","fieldParent":"f8ea5ab3-6314-4e9b-dd5d-ef7a7af0dcaf","fieldPos":387,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Supplier Business Linkage","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"4db0bfe4-4d51-4f12-8a46-4c5be60c62e1","fieldName":"oButtonPS","fieldParent":"ed69d4d1-01a1-41cf-d5bf-59d23c5df585","fieldPos":388,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"type","grouping":"Properties","value":"Transparent","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{countPurchasingSys}","script":"","translation":[]},{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/align-justify","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"var data = this.getBindingContext().getObject();\ndata = data.purchasingSys;\n\nif(data.length === 0)\n{return;}\n    oTablePOPPurch.getModel().setData(JSON.parse(JSON.stringify(data)));\n    oTablePOPPurch.getModel().refresh();\n    popPurchaseSys.openBy(this);\n","translation":[]}]},{"fieldNo":"d25a12cd-87c2-447c-b85b-6840f8627267","fieldName":"panelMatUpload","fieldParent":"dbe23355-d87e-4e78-df7e-cec9396797ab","fieldPos":389,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"b863719b-6ef4-4a9c-a884-9be58e7f3ef5","fieldName":"txtMatUpload","fieldParent":"d25a12cd-87c2-447c-b85b-6840f8627267","fieldPos":390,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"FILE ATTACHMENTS","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBottom","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"cace5a5d-97b3-43b7-9b48-37dbeaee2b8a","fieldName":"hboxMatUpload","fieldParent":"d25a12cd-87c2-447c-b85b-6840f8627267","fieldPos":391,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"a1fd58b7-80a3-41f6-9148-741a4510ec02","fieldName":"fileUploadMat","fieldParent":"cace5a5d-97b3-43b7-9b48-37dbeaee2b8a","fieldPos":392,"fieldType":"sap.ui.unified.FileUploader","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"placeholder","grouping":"Properties","value":"Upload Files","script":"","translation":[]},{"attribute":"fileType","grouping":"Properties","value":"[\"pdf\",\"xls\",\"xlsx\",\"csv\",\"docx\",\"doc\",\"dot\",\"txt\",\"wbk\",\"docm\",\"dotx\",\"docb\",\"xlt\",\"xlm\",\"xlsm\",\"xltm\",\"xltx\",\"xlsb\",\"xla\",\"xlam\",\"xll\",\"xlw\",\"ppt\",\"pptx\",\"pot\",\"pps\",\"pptm\",\"potx\",\"potm\",\"ppsx\",\"ppam\",\"ppsm\",\"sldx\",\"sldm\",\"one\",\"pub\",\"xps\",\"msg\"]","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_file_enabled}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\r\n2021ENHANCMENTS\r\nupdated by: vighnesh\r\nupdated on : march 9, 2022\r\n\r\nif file is selected from local machine\r\n*/\r\n","translation":[]}]},{"fieldNo":"2f1ce713-ca51-4624-b123-49d191252193","fieldName":"btnAttachMatFiles","fieldParent":"cace5a5d-97b3-43b7-9b48-37dbeaee2b8a","fieldPos":393,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"ATTACH FILE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_file_enabled}","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.show(0);\r\n\r\nlet fieldId;\r\nsap.n ? fieldId = sap.n.currentView.byId('fileUploadMat') : fieldId = this.getParent().mAggregations.fields[0].sId;\r\n\r\n\r\n//to check whether at least 1 file is selected for attachment\r\nlet isSelected = is_fileSelected(fieldId);\r\n\r\n\r\nif (isSelected && isSelected.errFlag) {\r\n    //error - no files are selected\r\n\r\n    showMessageToast(isSelected.noFileErrMsg);\r\n    sap.ui.core.BusyIndicator.hide();\r\n    return;\r\n\r\n}\r\n\r\n\r\n\r\nlet m = oPanelMatReqInfo.getModel().getData();\r\n\r\nif (m &&\r\n    m.matInfoId &&\r\n    m.matInfoId.trim() !== '' &&\r\n    m.materialRecordId &&\r\n    m.materialRecordId.trim() !== '') {\r\n\r\n    //files are selected\r\n    /*\r\n    function to check if the to be attached file obeys all the technical criterias.\r\n    level is MATERIAL\r\n    fieldId is the id of the field\r\n    */\r\n    checkFile('MATERIAL', fieldId, m);\r\n\r\n} else {\r\n\r\n    showMessageToast(g_missing_matId);\r\n    sap.ui.core.BusyIndicator.hide(0);\r\n\r\n}\r\n","translation":[]}]},{"fieldNo":"304ef2c3-6f0f-43d6-d8d6-172208bfb187","fieldName":"tableMatFiles","fieldParent":"d25a12cd-87c2-447c-b85b-6840f8627267","fieldPos":394,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"5","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"bb1c551c-86c1-4aae-a0ae-45a783c6a0fc","fieldName":"colMatFileDel","fieldParent":"304ef2c3-6f0f-43d6-d8d6-172208bfb187","fieldPos":395,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"b8ecaefb-104d-4df9-bd00-be5fd455e02e","fieldName":"iconMatFileDel","fieldParent":"bb1c551c-86c1-4aae-a0ae-45a783c6a0fc","fieldPos":396,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/trash-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\r\n2021ENHANCEMENTS\r\nupdated by : vighnesh\r\nupdated on : march 9, 2022\r\n*/\r\nsap.ui.core.BusyIndicator.show(0);\r\nlet file_uuid = oEvent.oSource.getBindingContext().getObject().file_id; //unique p9 id of the file\r\n\r\n/*\r\ncode snippet to find out the material to which user is attaching file \r\nto pass the material level details to delete function for capturing values in AT.\r\n*/\r\nlet matSelected = oEvent.oSource.getBindingContext().getObject().file_matInfoId;\r\n\r\nlet mData = oTableAddMaterial.getModel().getData();\r\nmData = mData.find(i => i.matInfoId === matSelected);\r\n\r\n/*\r\ncheck if there is no material, prevent deletion\r\n*/\r\nif (!mData) {\r\n    showMessageToast(g_invalid_matDetails_deletion);\r\n    sap.ui.core.BusyIndicator.hide();\r\n    return;\r\n}\r\n\r\n/*\r\nthis keyword will get the entire object having the specific file information needed for deletion & audit Trail entry\r\n*/\r\ncheck_for_file_deletion(file_uuid, 'MATERIAL', this, mData);","translation":[]}]},{"fieldNo":"6c70e2aa-5ef9-4509-f891-85dec260d0c8","fieldName":"colMatFileName","fieldParent":"304ef2c3-6f0f-43d6-d8d6-172208bfb187","fieldPos":397,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"File Name","script":"","translation":[]}]},{"fieldNo":"67da09b0-5480-4c2a-bc46-60f64f7026be","fieldName":"linkMatFileName","fieldParent":"6c70e2aa-5ef9-4509-f891-85dec260d0c8","fieldPos":398,"fieldType":"sap.m.Link","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{file_fileName}","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\r\n2021ENHANCMENTS\r\nupdated by : vighnesh\r\nupdated on : march 9, 2022\r\n\r\ncommon function to download supplier/material level file attachments\r\n*/\r\ndownloadFileAttachments(oEvent);","translation":[]}]},{"fieldNo":"6cd2e78e-b563-46af-ab9e-d93fdc04af31","fieldName":"oIconTabFilterApprovers","fieldParent":"ce99785d-bd0e-431b-e479-7362aca184a8","fieldPos":399,"fieldType":"sap.m.IconTabFilter","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"Confirmation & Approval Tasks","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"APPTAB","script":"","translation":[]}]},{"fieldNo":"d4938b76-eb3d-49b6-d72e-433fe16d5ccb","fieldName":"oPanelApprovers","fieldParent":"6cd2e78e-b563-46af-ab9e-d93fdc04af31","fieldPos":400,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3298c0be-8727-41d0-d492-9fe0c1316e14","fieldName":"oHBoxApprovers","fieldParent":"d4938b76-eb3d-49b6-d72e-433fe16d5ccb","fieldPos":401,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBeginEnd","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"682aae60-f551-4f7a-9178-30dda2d4fce4","fieldName":"oVBoxApprovers","fieldParent":"3298c0be-8727-41d0-d492-9fe0c1316e14","fieldPos":402,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"7eafe846-7c17-48b2-b867-e8c02b75ad1d","fieldName":"oBarApproverHeader","fieldParent":"682aae60-f551-4f7a-9178-30dda2d4fce4","fieldPos":403,"fieldType":"sap.m.Bar","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panelHeader","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setSubHeader","script":"","translation":[]}]},{"fieldNo":"8ef60a5d-7764-4a82-b08c-a8352561b188","fieldName":"LeftApprovers","fieldParent":"7eafe846-7c17-48b2-b867-e8c02b75ad1d","fieldPos":404,"fieldType":"neptune.BarContent","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"a53e6bc9-6fec-4542-a68c-7924df529782","fieldName":"oTextApproverHeader","fieldParent":"8ef60a5d-7764-4a82-b08c-a8352561b188","fieldPos":405,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"NUMBER OF MATERIALS:","script":"","translation":[]}]},{"fieldNo":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldName":"oTableApprovers","fieldParent":"682aae60-f551-4f7a-9178-30dda2d4fce4","fieldPos":406,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingValue":"API Materail_Service_Questions>asl_questionnaireconfig","bindingType":"h","bindingSource":"API","bindingParentID":"1fb6679f-27a9-49ba-be51-a685dde1a2b6","bindingPathID":"8816db65-feae-4269-f0ca-955138b5d1a3","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"5","script":"","translation":[]},{"attribute":"tooltip","grouping":"Properties","value":"hello","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBottom","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"Single","script":"","translation":[]},{"attribute":"selectionBehavior","grouping":"Properties","value":"RowSelector","script":"","translation":[]},{"attribute":"fixedColumnCount","grouping":"Properties","value":"8","script":"","translation":[]}]},{"fieldNo":"4ee5f20c-3edf-4652-d2b7-1a7c37343097","fieldName":"oColumnApprovers","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":407,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Left","script":"","translation":[]}]},{"fieldNo":"0788cf68-af28-4724-f488-c46b18ea0d06","fieldName":"oHorizontalLayout","fieldParent":"4ee5f20c-3edf-4652-d2b7-1a7c37343097","fieldPos":408,"fieldType":"sap.ui.layout.HorizontalLayout","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"37b88937-072b-4cd9-dfa8-363ceecf7c08","fieldName":"oButtonView","fieldParent":"0788cf68-af28-4724-f488-c46b18ea0d06","fieldPos":409,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"greenicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-regular/eye","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"g_click_view_icon_approval = true;\nvar sel = oEvent.oSource.getBindingContext().getObject();\n\nhighlightSelectedRow(oTableApprovers, this);\n\n/*\nNOTE: the below function must not be called here. it must be called once the approvers tab is binded with approvers data.\nsee below note for explanation\nUPDATED BY: VIGHNESH\nUPDATED AT: AUGUST 16, 2021\nsetEmailsForApprovers(sel.jnjSegment, sel.jnjOrg);\n*/\n\n\nif (g_action === 'BATCHUPLOAD' && g_selectedRole === 'ADMIN') {\n    showMessageToast('View mode not supported in Batch Upload')\n} else {\n    sap.ui.core.BusyIndicator.show(0)\n    var options = {\n        parameters: {\n            \"supplierInfoId\": sel.supplierInfoId,\n            \"materialInfoId\": sel.matInfoId // Optional \n        }\n    };\n\n    apigetMatApprovalsInfo(options);\n}\n\n/*\nNOTE: moved this line of code from line5 to here\nREASON: this block of code uses the model data binded to the 'oIconTabBarApproversList' to show data related to corresponding approver's tabs. \nSince this function was called even before the apigetMatApprovalsInfo API call, the model was empty as the model.setData function is called before the API call\nthe apigetMatApprovalsInfo API is responsible to bind the approval data to the model which would be used by 'setEmailsForApprovers' function\nUPDATED BY: VIGHNESH\nUPDATED AT: AUGUST 16, 2021\n*/\n\nsetEmailsForApprovers(sel.jnjSegment, sel.jnjOrg);\n","translation":[]}]},{"fieldNo":"68ae3948-542d-45f7-d574-c2bba2ae15d5","fieldName":"oButtonEditApp","fieldParent":"0788cf68-af28-4724-f488-c46b18ea0d06","fieldPos":410,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{selectionFlag}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"blueicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-regular/dot-circle","script":"","translation":[]},{"attribute":"backgroundColor","grouping":"Properties","value":"{editFlagColor}","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"g_click_view_icon_approval = false;\n\nhighlightSelectedRow(oTableApprovers, this);\n\nvar sel = oEvent.oSource.getBindingContext().getObject();\n\n\n\n\nif (sel.criticalityLevel && (sel.criticalityLevel).toUpperCase() === \"UNKNOWN\") {\n\n    showMessageToast(\"Please update Criticality Level. Cannot be UNKNOWN\");\n    oIconTabBarSupplierInfo.fireSelect();\n    return;\n}\n\n/*\nNOTE: the setEmailsForApprovers function was called here before the postLocking API. the API is responsible to bring all the approval data and bind it to the model\nwhich will be used by the function. the line of code is deleted and moved after the API call. see at the end.\nUPDATED BY: VIGHNESH\nUPDATED AT: AUGUST 16, 2021\n*/\n\n\nif (g_action === 'BATCHUPLOAD' && g_selectedRole === 'ADMIN') {\n\n\n    oDialogBU.setTitle(\"Approval Information for \" + sel.matInfoId);\n\n    if (sel.attachments && sel.attachments.length === 0) {\n        oTableSQAAttachmentsBU.setVisible(false);\n    } else {\n        oTableSQAAttachmentsBU.setVisible(true);\n        oTableSQAAttachmentsBU.getModel().setData(sel.attachments);\n    }\n    oDialogBU.getModel().setData(sel.approvalData);\n\n\n    if (sel.crucialSupplierStatus === \"Yes\" || sel.criticalSubContStatus === \"Yes\" ? true : false) {\n        rowRqc.setVisible(true);\n        sel.rqcContact = true;\n    } else {\n        sel.sqagroup_rqcContact = false;\n        rowRqc.setVisible(false);\n    }\n\n    cBoxExist.setText(\"Does it exist for \" + sel.supplierType + \" & \" + sel.criticalityLevel + \" ?\");\n    approverBatchMaterialInfo.getModel().setData(sel);\n\n    missingFieldsBatch();\n\n    oDialogBU.open();\n\n\n} else if (g_action !== 'BATCHUPLOAD' && g_selectedRole !== 'REQ') {\n\n    g_selected_material_ev = sel;\n\n    var options = {\n        data: {\n            userId: g_users.userId,\n            userRole: g_selectedRole,\n            matInfoId: sel.matInfoId,\n            supplierInfoId: sel.supplierInfoId\n        }\n    };\n\n    apiPostLockingRoleWiseEdit(options);\n}\n","translation":[]}]},{"fieldNo":"5a1496eb-a054-4032-92c6-49b2e6d5d773","fieldName":"colMatIdA","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":411,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"160px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Material ID","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"8c62f517-e4a5-41ef-e4e6-5b56530ff405","fieldName":"oText10a","fieldParent":"5a1496eb-a054-4032-92c6-49b2e6d5d773","fieldPos":412,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{matInfoId}","script":"","translation":[]}]},{"fieldNo":"4d40e016-db8c-46eb-a20f-9288b49958e2","fieldName":"oColumnAppJnJSeg","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":413,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"130px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"J&J Segment","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"66aabf62-221d-4af1-d60d-9cae5f1fdbbb","fieldName":"oTextAppJnJSeg","fieldParent":"4d40e016-db8c-46eb-a20f-9288b49958e2","fieldPos":414,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjSegment}","script":"","translation":[]}]},{"fieldNo":"47825cbd-0901-411a-9c84-da88a83c4369","fieldName":"oColumnAppJnJOrg","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":415,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"220px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"J&J Quality Organization","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"678015af-37ff-4f1a-dddf-3f85f0a34466","fieldName":"oTextAppJnJOrg","fieldParent":"47825cbd-0901-411a-9c84-da88a83c4369","fieldPos":416,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjOrg}","script":"","translation":[]}]},{"fieldNo":"3aedb37d-99b5-41cd-ba44-e0e11a90cd1b","fieldName":"oColumnAppJnJOpComp","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":417,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"J&J Operating Company","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"dedcd1d8-cfb4-468c-ee19-cb1152acb2e1","fieldName":"oTextAppJnJOpComp","fieldParent":"3aedb37d-99b5-41cd-ba44-e0e11a90cd1b","fieldPos":418,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjOpComp}","script":"","translation":[]}]},{"fieldNo":"0df81a1f-5709-4fd7-e661-6f676943e85a","fieldName":"oColumnAppJnJSite","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":419,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"J&J Site","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"04f055cc-7907-427d-9c6d-541888f2d1fc","fieldName":"oTextAppJnJSite","fieldParent":"0df81a1f-5709-4fd7-e661-6f676943e85a","fieldPos":420,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjSite}","script":"","translation":[]}]},{"fieldNo":"df12fbee-0559-4002-899d-4df86ad7c91a","fieldName":"oColumnJnJRegionA","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":421,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"J&J Region","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"ac813d9b-04b4-40b8-c69c-c7f3b18eea52","fieldName":"oTextJnJRegionA","fieldParent":"df12fbee-0559-4002-899d-4df86ad7c91a","fieldPos":422,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{jnjRegion}","script":"","translation":[]}]},{"fieldNo":"d7cfcb40-5c8b-42dd-d2bd-f877c0104e22","fieldName":"oColumnAppQualSt","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":423,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"180px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Qualification Status","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"7b148ea0-eef7-46a8-fff8-d086becffb01","fieldName":"oTextAppQualSt","fieldParent":"d7cfcb40-5c8b-42dd-d2bd-f877c0104e22","fieldPos":424,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{qualificationStatus}{secondApprover}","script":"","translation":[]}]},{"fieldNo":"648417fa-d533-416d-9dab-d29f97aa6b4e","fieldName":"oColumnAppCLLevel","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":425,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Criticality Level","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"bed1bea3-7372-4e0b-b04f-4a576c90a0d2","fieldName":"oTextAppCLLevel","fieldParent":"648417fa-d533-416d-9dab-d29f97aa6b4e","fieldPos":426,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{criticalityLevel}","script":"","translation":[]}]},{"fieldNo":"a9c806f2-d63c-4c64-88d4-80b0677c88d5","fieldName":"oColumnAppSupType","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":427,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"250px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Supplier Type","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"2648f4af-030a-4b8e-8927-98f429ec0ce7","fieldName":"oTextAppSupType","fieldParent":"a9c806f2-d63c-4c64-88d4-80b0677c88d5","fieldPos":428,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{supplierType}","script":"","translation":[]}]},{"fieldNo":"812dfc86-5fe0-4d86-e842-43f55e9c0170","fieldName":"oColumnAppRisk","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":429,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"220px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Risk Categorization","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"d372ba51-66bb-42ec-92ad-86cf1dec1683","fieldName":"oTextAppRisk","fieldParent":"812dfc86-5fe0-4d86-e842-43f55e9c0170","fieldPos":430,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{riskCatgGroup}","script":"","translation":[]}]},{"fieldNo":"e8b050fe-d183-49b4-ae06-e6e439c22a74","fieldName":"oColumnAppCruSupSt","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":431,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"220px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Crucial Supplier Status","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"9d36266a-2613-45db-e38f-14c8192462d5","fieldName":"oTextAppCruSupSt","fieldParent":"e8b050fe-d183-49b4-ae06-e6e439c22a74","fieldPos":432,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{crucialSupplierStatus}","script":"","translation":[]}]},{"fieldNo":"c71e250f-2b59-4e6e-e038-89b3ed3b6534","fieldName":"oColumnAppCriSubSt","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":433,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"220px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Critical Subcontractor Status","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"7a49cf2c-3208-4b9c-fe1b-97ce4d0d9496","fieldName":"oTextAppCriSubSt","fieldParent":"c71e250f-2b59-4e6e-e038-89b3ed3b6534","fieldPos":434,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{criticalSubContStatus}","script":"","translation":[]}]},{"fieldNo":"37dd9863-770c-432c-ec74-f13403454cbc","fieldName":"oColumnAppASL","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":435,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"130px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"ASL Owner","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"25c7b187-a4ba-4e11-e918-060d46a23592","fieldName":"oIconASL","fieldParent":"37dd9863-770c-432c-ec74-f13403454cbc","fieldPos":436,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"src","grouping":"Properties","value":"{aslApproval/icon}","script":"","translation":[]},{"attribute":"color","grouping":"Properties","value":"{aslApproval/color}","script":"","translation":[]}]},{"fieldNo":"40e0b562-b1e7-474b-d7eb-dfb0aade8199","fieldName":"oColumnAppSQA","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":437,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"130px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Source Quality","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"82ea784d-25f1-4d5c-99b1-17befdd0f2df","fieldName":"oIcon","fieldParent":"40e0b562-b1e7-474b-d7eb-dfb0aade8199","fieldPos":438,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"src","grouping":"Properties","value":"{sqaApproval/icon}","script":"","translation":[]},{"attribute":"color","grouping":"Properties","value":"{sqaApproval/color}","script":"","translation":[]}]},{"fieldNo":"0dd0911a-8d4a-405f-9df5-011f35b34bd2","fieldName":"oColumnAppRQC","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":439,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"200px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Regulatory / Quality Compliance Approval","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"9aaf19c6-b3cd-4db4-afe5-b3ccf3829f64","fieldName":"oIcon1","fieldParent":"0dd0911a-8d4a-405f-9df5-011f35b34bd2","fieldPos":440,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"src","grouping":"Properties","value":"{regulatoryApproval/icon}","script":"","translation":[]},{"attribute":"color","grouping":"Properties","value":"{regulatoryApproval/color}","script":"","translation":[]}]},{"fieldNo":"8ea8de0c-0e28-4f0a-b880-f5752f4dbc17","fieldName":"oColumnAppSQAA","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":441,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"160px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Quality Agreement","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"bbd09b63-967a-4485-8417-ace93a75fb0e","fieldName":"oIconSQAA","fieldParent":"8ea8de0c-0e28-4f0a-b880-f5752f4dbc17","fieldPos":442,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"src","grouping":"Properties","value":"{sqaaApproval/icon}","script":"","translation":[]},{"attribute":"color","grouping":"Properties","value":"{sqaaApproval/color}","script":"","translation":[]}]},{"fieldNo":"997252f3-e05f-46f9-e3fb-0333bcb20f61","fieldName":"oColumnAppAudit","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":443,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"130px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Audit","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"22776d33-e378-4297-a5ed-9dea47d43e4b","fieldName":"oIcon2","fieldParent":"997252f3-e05f-46f9-e3fb-0333bcb20f61","fieldPos":444,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"src","grouping":"Properties","value":"{auditApproval/icon}","script":"","translation":[]},{"attribute":"color","grouping":"Properties","value":"{auditApproval/color}","script":"","translation":[]}]},{"fieldNo":"34118916-767a-40b8-ba17-383d4c178e50","fieldName":"oColumnAppElevated","fieldParent":"c969c0dc-1679-4862-a711-4cb99a96d2e4","fieldPos":445,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"160px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Second Approver","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"924046b3-2634-4eb5-cd1b-461b522530a7","fieldName":"oIcon3","fieldParent":"34118916-767a-40b8-ba17-383d4c178e50","fieldPos":446,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"src","grouping":"Properties","value":"{elevatedApproval/icon}","script":"","translation":[]},{"attribute":"color","grouping":"Properties","value":"{elevatedApproval/color}","script":"","translation":[]}]},{"fieldNo":"98e6e79b-6df4-4dea-a314-384b6505276f","fieldName":"boxComments","fieldParent":"d4938b76-eb3d-49b6-d72e-433fe16d5ccb","fieldPos":447,"fieldType":"sap.m.FlexBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBeginEnd","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"866dd8f3-f803-44fc-bd12-e0bfb4d1ff5f","fieldName":"oLinkCommentsHistory","fieldParent":"98e6e79b-6df4-4dea-a314-384b6505276f","fieldPos":448,"fieldType":"sap.m.Link","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"tooltip","grouping":"Properties","value":"View all comments","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"COMMENTS HISTORY","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"link","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: code block to open the comments history\nreplaced the material ID with static Material ID\nupdated by: VIGHNESH\nupdated on: oct 20, 2021\n2021ENHANCEMENTS\n*/\npopCommentsHistory.setBusy(true);\npopCommentsHistory.openBy(this);\n\nvar key = oIconTabBarApproversList.getSelectedKey();\nvar m = oIconTabBarApproversList.getModel().getData();\nif (key === 'SQAESIGN') {\n    key = 'SQA'\n}\n\npopCommentsHistory.setTitle('STATIC MATERIAL ID: ' + m.material_materialRecordId);\nvar options = {\n    data: {\n        \"matInfoId\": m.material_matInfoId,\n        \"selectedTab\": key\n    }\n};\n\napigetCommentHistory(options);","translation":[]}]},{"fieldNo":"baa19060-54d5-4ddf-d920-e4d8dc06766a","fieldName":"oIconTabBarApproversList","fieldParent":"d4938b76-eb3d-49b6-d72e-433fe16d5ccb","fieldPos":449,"fieldType":"sap.m.IconTabBar","script":"","customComponent":false,"bindingValue":"asl_allApprovalsInfo>allApprovalsInfo","bindingType":"u","bindingSource":"API","bindingParentID":"2f19d6cd-4c04-4680-91b1-07ffd1bc62bb","bindingPathID":"842adee3-6cc6-43fa-ee89-f0fac7d955f2","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"tabBar","script":"","translation":[]},{"attribute":"expandable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"var selItem = oIconTabBarApproversList.getSelectedKey();\nshowApproverTabData(selItem);","translation":[]}]},{"fieldNo":"d7b0ff2c-4a4c-496e-e7b4-3d948abef1ee","fieldName":"oIconTabFilterASLOnwer","fieldParent":"baa19060-54d5-4ddf-d920-e4d8dc06766a","fieldPos":450,"fieldType":"sap.m.IconTabFilter","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"ASL Owner","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"ASL","script":"","translation":[]}]},{"fieldNo":"101f9beb-bdf3-4001-aa7b-1e6ecda6902e","fieldName":"oPanelASlOnwer","fieldParent":"d7b0ff2c-4a4c-496e-e7b4-3d948abef1ee","fieldPos":451,"fieldType":"sap.m.Panel","script":"","customComponent":false,"bindingType":"u","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"backgroundDesign","grouping":"Properties","value":"Solid","script":"","translation":[]}]},{"fieldNo":"e3d63d3a-cbee-4d30-a461-ce4787206433","fieldName":"oVBoxASLApprover","fieldParent":"101f9beb-bdf3-4001-aa7b-1e6ecda6902e","fieldPos":452,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"b89003ef-6e05-4f42-ebca-7b77d35e1ed7","fieldName":"oHBoxASLApprover","fieldParent":"e3d63d3a-cbee-4d30-a461-ce4787206433","fieldPos":453,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"dad3b55d-e663-4fd3-e759-1310b16a8d7f","fieldName":"oVBoxASLOwnerConfirmation","fieldParent":"b89003ef-6e05-4f42-ebca-7b77d35e1ed7","fieldPos":454,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"7a15dfab-ab2f-4815-b06b-e94485ce4690","fieldName":"oLabelASLOwnerConfirmation","fieldParent":"dad3b55d-e663-4fd3-e759-1310b16a8d7f","fieldPos":455,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"ASL Owner:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"4aaa8405-d221-4af4-d9fa-078ddc2c7bc3","fieldName":"oHBox","fieldParent":"dad3b55d-e663-4fd3-e759-1310b16a8d7f","fieldPos":456,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"0b0fa475-cd76-489b-951a-fd451eed7870","fieldName":"oRadioButtonGroup","fieldParent":"4aaa8405-d221-4af4-d9fa-078ddc2c7bc3","fieldPos":457,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"selectedIndex","grouping":"Properties","value":"-1","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_asl_editable}","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\nif (this.getSelectedIndex() === 0) {\n\n    oVBox2ASLEmailSendValues.setVisible(true);\n    oMultiComboBoxSendMail.removeStyleClass(\"error\");\n    oMultiComboBoxSendMail.addStyleClass(\"combobox\");\n    oVBoxASLComments.setVisible(false);\n\n\n} else if (this.getSelectedIndex() === 1) {\n\n    oLabelASLcomments.setRequired(true);\n    labRemCountASLCom.setText();\n    txtAreaASLcomments.removeStyleClass(\"error\");\n\n    txtAreaASLcomments.removeStyleClass(\"warning\");\n    txtAreaASLcomments.setValueState(\"None\");\n    txtAreaASLcomments.setValueStateText();\n    txtAreaASLcomments.addStyleClass(\"textbox\");\n\n    oVBox2ASLEmailSendValues.setVisible(false);\n    oVBoxASLComments.setVisible(true);\n}\n\n\nlet date = setDateTime();\n\noInputASLConfirmedDate.setText(date);\noInputASLOwnerConfirmedBy.setText(g_users.email);\noInputASLApproverNameOfUser.setText(g_users.full_name);\n\n\noMultiComboBoxSendMail.setSelectedKeys();\n\noVBox2ASLConfirmedDate.setVisible(true);\noVBox3ASLApproverNameOfUser.setVisible(true);\noVBox1ASLOwnerConfirmedBy.setVisible(true);\n\n\ntxtAreaASLcomments.setValue();\n\ng_dataLoss = true;","translation":[]}]},{"fieldNo":"ae9ccc7f-cca4-428c-aaa7-670f86f9bd4c","fieldName":"oRadioButtonASLOwnerConfirmationYes","fieldParent":"0b0fa475-cd76-489b-951a-fd451eed7870","fieldPos":458,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Confirm","script":"","translation":[]},{"attribute":"groupName","grouping":"Properties","value":"aslConfirmation","script":"","translation":[]}]},{"fieldNo":"f651114d-1a50-4dff-e08f-6489c4aca362","fieldName":"oRadioButtonASLOwnerConfirmationNo","fieldParent":"0b0fa475-cd76-489b-951a-fd451eed7870","fieldPos":459,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Return to Requester","script":"","translation":[]},{"attribute":"groupName","grouping":"Properties","value":"aslConfirmation","script":"","translation":[]}]},{"fieldNo":"14ecf650-e174-4b19-f9ea-456c7a038e16","fieldName":"oVBox1ASLOwnerConfirmedBy","fieldParent":"b89003ef-6e05-4f42-ebca-7b77d35e1ed7","fieldPos":460,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"8abd06ef-6d5f-40a7-dcb1-0a4aad87fcce","fieldName":"oLabelASLOwnerConfirmedBy","fieldParent":"14ecf650-e174-4b19-f9ea-456c7a038e16","fieldPos":461,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"85b24c66-f027-4eb4-b31d-a0ba83cfa03f","fieldName":"oInputASLOwnerConfirmedBy","fieldParent":"14ecf650-e174-4b19-f9ea-456c7a038e16","fieldPos":462,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{/aslowner_confirmedByEmail}","script":"","translation":[]}]},{"fieldNo":"26a790bf-9056-43cf-bdfc-2dba8d66eb9b","fieldName":"oVBox3ASLApproverNameOfUser","fieldParent":"b89003ef-6e05-4f42-ebca-7b77d35e1ed7","fieldPos":463,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"dc3ccbfd-290e-4cde-ece7-6a6f40810ccc","fieldName":"oLabelASLApproverNameOfUser","fieldParent":"26a790bf-9056-43cf-bdfc-2dba8d66eb9b","fieldPos":464,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Name:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"c0b06e85-cad1-4297-d1a4-16c63dac67ea","fieldName":"oInputASLApproverNameOfUser","fieldParent":"26a790bf-9056-43cf-bdfc-2dba8d66eb9b","fieldPos":465,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{/aslowner_confirmedByName}","script":"","translation":[]}]},{"fieldNo":"859d12eb-01a2-4606-df07-5a8048cb20ea","fieldName":"oVBox2ASLConfirmedDate","fieldParent":"b89003ef-6e05-4f42-ebca-7b77d35e1ed7","fieldPos":466,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"105f8fb1-c93b-43d8-acf1-3149958a749e","fieldName":"oLabelASLConfirmedDate","fieldParent":"859d12eb-01a2-4606-df07-5a8048cb20ea","fieldPos":467,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"4d9f3258-35d4-45c8-fbaf-00f796b5feee","fieldName":"oInputASLConfirmedDate","fieldParent":"859d12eb-01a2-4606-df07-5a8048cb20ea","fieldPos":468,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{/aslowner_confirmDate}","script":"","translation":[]}]},{"fieldNo":"7b8f23bd-0655-42da-a752-48eebf6093f9","fieldName":"oVBox2ASLEmailSendValues","fieldParent":"b89003ef-6e05-4f42-ebca-7b77d35e1ed7","fieldPos":469,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"80%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]}]},{"fieldNo":"58b0090c-ac9d-439e-8696-212499455241","fieldName":"oLabelASLEmailValues","fieldParent":"7b8f23bd-0655-42da-a752-48eebf6093f9","fieldPos":470,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Source Quality Contact:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"651030f9-fe48-4e48-fdb5-7c94fb4988af","fieldName":"oMultiComboBoxSendMail","fieldParent":"7b8f23bd-0655-42da-a752-48eebf6093f9","fieldPos":471,"fieldType":"sap.m.MultiComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_field_asl_editable}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\ng_dataLoss = true;\n\nif (this.getSelectedKeys() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\nif (oEvent.mParameters.value === \"All\") {\n    var a = [];\n    if (this.getSelectedKeys().length > 0 && this.getSelectedKeys().includes('All')) { } else {\n        a = this.getKeys();\n\n    }\n\n    this.setSelectedKeys(a);\n} else {\n    if (this.getSelectedKeys().includes('All')) {\n        this.removeSelectedKeys(['All'])\n    }\n\n}","translation":[]}]},{"fieldNo":"83c86293-4915-4c88-fb43-6600811d70fe","fieldName":"oVBoxASLComments","fieldParent":"e3d63d3a-cbee-4d30-a461-ce4787206433","fieldPos":472,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"cc729b24-3a55-4cd1-f961-6975b7cf9504","fieldName":"oHBoxASLcomments","fieldParent":"83c86293-4915-4c88-fb43-6600811d70fe","fieldPos":473,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"a36ad09e-1e3d-4302-d0db-bd538a17a802","fieldName":"oLabelASLcomments","fieldParent":"cc729b24-3a55-4cd1-f961-6975b7cf9504","fieldPos":474,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Comments on Return to Requester (500 characters maximum):","script":"","translation":[]}]},{"fieldNo":"0cf0eec9-16d4-4afb-fbcf-cbdda1331c6f","fieldName":"labRemCountASLCom","fieldParent":"cc729b24-3a55-4cd1-f961-6975b7cf9504","fieldPos":475,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"19ec9126-d9f1-4460-eef5-7c8bdc2dee34","fieldName":"txtAreaASLcomments","fieldParent":"83c86293-4915-4c88-fb43-6600811d70fe","fieldPos":476,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/aslowner_comments}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_field_asl_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\nupdated by: VIGHNESH\nupdated on: SEPT 16, 2021\n2021ENHANCEMENTS\n*/\nlabRemCountASLCom.setText();\n\nthis.removeStyleClass(\"error\");\n\nlet aslComLen = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 (nothing is entered) else show the label\naslComLen === 500 ? labRemCountASLCom.setText() : labRemCountASLCom.setText(\"Characters Left : \" + aslComLen);\n\n//what if maximum character limit is reached\nif (aslComLen === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"e29d9bae-cf5f-4c0b-f2d2-3f9153269f44","fieldName":"oIconTabFilterSQA","fieldParent":"baa19060-54d5-4ddf-d920-e4d8dc06766a","fieldPos":477,"fieldType":"sap.m.IconTabFilter","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Source Quality","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"SQA","script":"","translation":[]}]},{"fieldNo":"321684cb-3d16-4e20-d8c1-7cf9685cd43d","fieldName":"oPanelSQAconf","fieldParent":"e29d9bae-cf5f-4c0b-f2d2-3f9153269f44","fieldPos":478,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]}]},{"fieldNo":"4334d018-9d99-4abd-bac9-d35fa2f91645","fieldName":"oTextReturnTo","fieldParent":"321684cb-3d16-4e20-d8c1-7cf9685cd43d","fieldPos":479,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"RETURN","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"dd6f0c36-743e-4fc3-ad8b-6207654ea4fa","fieldName":"oHBoxPanel1SQAConf","fieldParent":"321684cb-3d16-4e20-d8c1-7cf9685cd43d","fieldPos":480,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"b257e4a8-9607-42f4-8874-905c60d3136f","fieldName":"oVBoxPanel1SQAAPP","fieldParent":"dd6f0c36-743e-4fc3-ad8b-6207654ea4fa","fieldPos":481,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginEnd","script":"","translation":[]}]},{"fieldNo":"60773feb-2f81-4cb5-d35b-0a9b10affa8b","fieldName":"oLabelSQAApp","fieldParent":"b257e4a8-9607-42f4-8874-905c60d3136f","fieldPos":482,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Source Quality:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"915ea785-b571-41f7-a577-0c5dd0553579","fieldName":"oRadioButtonGrpPanel1SQAConf","fieldParent":"b257e4a8-9607-42f4-8874-905c60d3136f","fieldPos":483,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by: vighnesh\nupdated on: oct 11, 2021\n*/\ng_dataLoss = true;\nthis.getSelectedIndex() === 0 ? oLabelSQAAppComments.setText(\"Comments on Return to ASL Owner (500 characters maximum):\") : oLabelSQAAppComments.setText(\"Comments on Return to Requester (500 characters maximum):\");","translation":[]}]},{"fieldNo":"99319048-a9a3-45fc-dda8-3ae135f0242c","fieldName":"oRadioButtonPanel1SQAConfYes","fieldParent":"915ea785-b571-41f7-a577-0c5dd0553579","fieldPos":484,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Return to ASL Owner","script":"","translation":[]},{"attribute":"groupName","grouping":"Properties","value":"sqaQuackPackConfirm","script":"","translation":[]}]},{"fieldNo":"fe80820a-6aa9-4cb5-d211-46bee0fab91d","fieldName":"oRadioButtonPanel1SQAConfNo","fieldParent":"915ea785-b571-41f7-a577-0c5dd0553579","fieldPos":485,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Return to Requester","script":"","translation":[]},{"attribute":"groupName","grouping":"Properties","value":"sqaQuackPackConfirm","script":"","translation":[]}]},{"fieldNo":"d6cd2d46-d27e-4715-c3ef-4844e94919fb","fieldName":"oVBoxPanel1SQAConfEmail","fieldParent":"dd6f0c36-743e-4fc3-ad8b-6207654ea4fa","fieldPos":486,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBegin","script":"","translation":[]}]},{"fieldNo":"a3624413-3f33-4cac-9165-c275c795e2a6","fieldName":"oLabelPanel1SQAConfEmail","fieldParent":"d6cd2d46-d27e-4715-c3ef-4844e94919fb","fieldPos":487,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email:","script":"","translation":[]}]},{"fieldNo":"4a34c7c2-2d08-47d3-d914-f804930fa5e3","fieldName":"oTextPanel1SQAConfEmail","fieldParent":"d6cd2d46-d27e-4715-c3ef-4844e94919fb","fieldPos":488,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"04f1d4c9-1f50-4655-e459-46becda87243","fieldName":"oVBoxPanel1SQAConfName","fieldParent":"dd6f0c36-743e-4fc3-ad8b-6207654ea4fa","fieldPos":489,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"9da8d3f5-c135-471d-ba73-d66c1616e0a3","fieldName":"oLabelPanel1SQAConfName","fieldParent":"04f1d4c9-1f50-4655-e459-46becda87243","fieldPos":490,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Name:","script":"","translation":[]}]},{"fieldNo":"35d0c802-3fef-48a6-e06b-bdd9c38f9be6","fieldName":"oTextPanel1SQAConfName","fieldParent":"04f1d4c9-1f50-4655-e459-46becda87243","fieldPos":491,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"fefbf675-166e-4b56-98a2-f6661b59fc8f","fieldName":"oVBoxPanel1SQAConfDate","fieldParent":"dd6f0c36-743e-4fc3-ad8b-6207654ea4fa","fieldPos":492,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"56ba479b-6876-48de-f07a-e57b4a198218","fieldName":"oLabelPanel1SQAConfDate","fieldParent":"fefbf675-166e-4b56-98a2-f6661b59fc8f","fieldPos":493,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date:","script":"","translation":[]}]},{"fieldNo":"10814a63-aa1f-4223-d5c3-2adccbc423bc","fieldName":"oTextPanel1SQAConfDate","fieldParent":"fefbf675-166e-4b56-98a2-f6661b59fc8f","fieldPos":494,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"4a10a933-6503-4df6-cf66-645374acf6fe","fieldName":"oVBoxSQAConf","fieldParent":"321684cb-3d16-4e20-d8c1-7cf9685cd43d","fieldPos":495,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"2e405a88-e42c-44c3-de10-fbee7e71c496","fieldName":"oHBoxSQAConf","fieldParent":"4a10a933-6503-4df6-cf66-645374acf6fe","fieldPos":496,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"4b145b53-5271-4815-a3df-64a4c851c830","fieldName":"oLabelSQAAppComments","fieldParent":"2e405a88-e42c-44c3-de10-fbee7e71c496","fieldPos":497,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Comments on Return to ASL Owner/Requester (500 characters maximum):","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"34c07d66-9aed-4781-ca29-4825b28edf46","fieldName":"labRemCountSQRetCom","fieldParent":"2e405a88-e42c-44c3-de10-fbee7e71c496","fieldPos":498,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"174fbad7-b8ae-4e09-962a-78df6dd23144","fieldName":"txtAreaSQARejComments","fieldParent":"4a10a933-6503-4df6-cf66-645374acf6fe","fieldPos":499,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/sqagroup_rejectionComments}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\nupdated by: VIGHNESH\nupdated on: SEPT 16, 2021\n2021ENHANCEMENTS\n*/\nlabRemCountSQRetCom.setText();\n\nthis.removeStyleClass(\"error\");\n\nlet returnSQLen = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 (nothing is entered) else show the label\nreturnSQLen === 500 ? labRemCountSQRetCom.setText() : labRemCountSQRetCom.setText(\"Characters Left : \" + returnSQLen);\n\n//what if maximum character limit is reached\nif (returnSQLen === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"981b8664-8913-4a92-9afd-1ab9fa0d9b29","fieldName":"oHBoxSQAConfBtn","fieldParent":"321684cb-3d16-4e20-d8c1-7cf9685cd43d","fieldPos":500,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"56f2a189-103d-4181-ecd5-f1238c339317","fieldName":"oBtnSQAPanelReset","fieldParent":"981b8664-8913-4a92-9afd-1ab9fa0d9b29","fieldPos":501,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"80px","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"RESET","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"//Don't need multiple click validation since its reset functionality\r\nclearSQA_CONFPanel();","translation":[]}]},{"fieldNo":"e72c5631-d89e-4ea3-bc0d-00f3e94df2e7","fieldName":"oBntSQAConfBtn","fieldParent":"981b8664-8913-4a92-9afd-1ab9fa0d9b29","fieldPos":502,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CONFIRM","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: added busy indicators everywhere to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 10\n*/\nsap.ui.core.BusyIndicator.show(0); // -- multiple click\n\n//when source quality is not confirmed\nif (oRadioButtonGrpPanel1SQAConf.getSelectedIndex() === -1) {\n\n    showMessageToast(\"Please select the below mandantory fields :\" + \"\\n\" + \"\\n\" + \"* Source Quality\");\n    sap.ui.core.BusyIndicator.hide(); // -- multiple click\n\n} else if (oRadioButtonGrpPanel1SQAConf.getSelectedIndex() === 0 || oRadioButtonGrpPanel1SQAConf.getSelectedIndex() === 1) {\n\n    if (txtAreaSQARejComments.getValue() === \"\") {\n        txtAreaSQARejComments.removeStyleClass(\"textbox\");\n        txtAreaSQARejComments.addStyleClass(\"error\");\n\n        let labelArr = oLabelSQAAppComments.getText().split(\"(\");\n        let labelText = labelArr[0].trim();\n        showMessageToast(\"Please select the below mandantory fields :\" + \"\\n\" + \"\\n\" + \"* \" + labelText);\n\n        sap.ui.core.BusyIndicator.hide(); // -- multiple click\n\n    } else {\n        postSQATabData(\"SQAReject\");\n    }\n}\n","translation":[]}]},{"fieldNo":"50130455-8b36-4b5f-f13e-4e205d60dbb4","fieldName":"panelAuditConfirm","fieldParent":"e29d9bae-cf5f-4c0b-f2d2-3f9153269f44","fieldPos":503,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]}]},{"fieldNo":"a8e5dcf0-4673-4096-f559-73b9c4121ec5","fieldName":"oTextAUDITAPPROVAL","fieldParent":"50130455-8b36-4b5f-f13e-4e205d60dbb4","fieldPos":504,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"AUDIT","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"6b8f8cb8-328c-456a-d3e7-9ceb2c1c22ed","fieldName":"oHBoxSQAPanel","fieldParent":"50130455-8b36-4b5f-f13e-4e205d60dbb4","fieldPos":505,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"f825b28a-37d2-4434-af2a-aab583f88c33","fieldName":"oHBoxSQAAuditConfirm","fieldParent":"6b8f8cb8-328c-456a-d3e7-9ceb2c1c22ed","fieldPos":506,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"9dac330f-60af-484d-8ec3-dca48c9c9105","fieldName":"oVBoxAuditConfirm","fieldParent":"f825b28a-37d2-4434-af2a-aab583f88c33","fieldPos":507,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"50%","script":"","translation":[]}]},{"fieldNo":"fa5d2de2-c70a-41c9-d6b7-ff2c72208847","fieldName":"lblAuditConfirm","fieldParent":"9dac330f-60af-484d-8ec3-dca48c9c9105","fieldPos":508,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit Required:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9c9965f1-512e-4946-fce3-1798fabd8b0b","fieldName":"oHBoxAuditRadioBtn","fieldParent":"9dac330f-60af-484d-8ec3-dca48c9c9105","fieldPos":509,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"f110848a-858e-4c84-db3b-39a6134c2144","fieldName":"oRadioButtonGroupAudit","fieldParent":"9c9965f1-512e-4946-fce3-1798fabd8b0b","fieldPos":510,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by: vighnesh\nupdated on: oct 12, 2021\nrefactored code\n*/\ng_dataLoss = true;\nlet flag;\nif (this.getSelectedIndex() === 0) {\n\n    flag = true;\n\n}\nif (this.getSelectedIndex() === 1) {\n\n    flag = false;\n    txtAreaStandReg.setValue();\n    txtAreaStandReg.removeStyleClass(\"warning\");\n    txtAreaStandReg.addStyleClass(\"textbox\");\n    txtAreaStandReg.setValueStateText();\n    txtAreaStandReg.setValueState(\"None\");\n\n    txtAreaAuditComments.setValue();\n    txtAreaAuditComments.removeStyleClass(\"warning\");\n    txtAreaAuditComments.addStyleClass(\"textbox\");\n    txtAreaAuditComments.setValueStateText();\n    txtAreaAuditComments.setValueState(\"None\");\n\n}\n\noVBoxAuditConfirmationDetails.setVisible(flag); //reg & comments block\noHBoxSQAAuditEmailNameDate.setVisible(true);\noVBoxAuditGrp.setVisible(flag);\ncomboAuditGrp.setSelectedKeys();\n\n\nif (oVBoxAuditGrp.getVisible()) {\n    comboAuditGrp.removeStyleClass(\"error\");\n    comboAuditGrp.addStyleClass(\"combobox\");\n}\n\n//applying email, name & date fields when SQ either selects Yes or No\noTextSQAAuditEmail.setText(g_users.email);\noTextSQAAuditName.setText(g_users.full_name);\noTextSQAAuditDate.setText(setDateTime());","translation":[]}]},{"fieldNo":"f7cacc3e-fc20-404b-f7c6-3fa875216416","fieldName":"radioBtnAuditY","fieldParent":"f110848a-858e-4c84-db3b-39a6134c2144","fieldPos":511,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Yes","script":"","translation":[]},{"attribute":"groupName","grouping":"Properties","value":"sqaAuditConfirm","script":"","translation":[]}]},{"fieldNo":"ac6659cb-35e7-47f4-a674-a2ec1a6945f1","fieldName":"radioBtnAuditN","fieldParent":"f110848a-858e-4c84-db3b-39a6134c2144","fieldPos":512,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"No","script":"","translation":[]},{"attribute":"groupName","grouping":"Properties","value":"sqaAuditConfirm","script":"","translation":[]}]},{"fieldNo":"8e433763-cd83-4057-dd62-d51a14857263","fieldName":"oVBoxAuditGrp","fieldParent":"f825b28a-37d2-4434-af2a-aab583f88c33","fieldPos":513,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"50%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]}]},{"fieldNo":"7261c102-27ea-4e52-9d65-564e83156ece","fieldName":"lblAuditGrp","fieldParent":"8e433763-cd83-4057-dd62-d51a14857263","fieldPos":514,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit Group:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"d5bccb3c-a248-473d-d1df-b6ecf51ad0f6","fieldName":"comboAuditGrp","fieldParent":"8e433763-cd83-4057-dd62-d51a14857263","fieldPos":515,"fieldType":"sap.m.MultiComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"47%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\ng_dataLoss = true;\nif (this.getSelectedKeys() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\nif (oEvent.mParameters.value === \"All\") {\n    var a = [];\n    if (this.getSelectedKeys().length > 0 && this.getSelectedKeys().includes('All')) { } else {\n        a = this.getKeys();\n\n    }\n\n    this.setSelectedKeys(a);\n} else {\n    if (this.getSelectedKeys().includes('All')) {\n        this.removeSelectedKeys(['All'])\n    }\n\n}","translation":[]}]},{"fieldNo":"de175910-9a6e-4318-b6d8-34f9ffcdd8fe","fieldName":"oVBoxAuditConfirmationDetails","fieldParent":"6b8f8cb8-328c-456a-d3e7-9ceb2c1c22ed","fieldPos":516,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBottom","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"c1dfcda8-fe09-4d50-cb02-93e00990dac5","fieldName":"oVBoxAuditRegTextArea","fieldParent":"de175910-9a6e-4318-b6d8-34f9ffcdd8fe","fieldPos":517,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"50%","script":"","translation":[]}]},{"fieldNo":"2c13caaf-d050-4917-bb5a-5f02ea9c1a4a","fieldName":"oHBoxAuditRegTextArea","fieldParent":"c1dfcda8-fe09-4d50-cb02-93e00990dac5","fieldPos":518,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"48f29e72-d0d0-4b01-ec5c-dc2ec97ac453","fieldName":"lblStandReg","fieldParent":"2c13caaf-d050-4917-bb5a-5f02ea9c1a4a","fieldPos":519,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Standards and Regulations (500 Characters Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"ee2f108b-3016-45d9-e72b-15d68ac2e9f6","fieldName":"labRemCountAuditStRegSQ","fieldParent":"2c13caaf-d050-4917-bb5a-5f02ea9c1a4a","fieldPos":520,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"5ee922ff-0bc7-4d8c-822a-4a2316ceb360","fieldName":"txtAreaStandReg","fieldParent":"c1dfcda8-fe09-4d50-cb02-93e00990dac5","fieldPos":521,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\nupdated by: VIGHNESH\nupdated on: SEPT 16, 2021\n2021ENHANCEMENTS\n*/\nlabRemCountAuditStRegSQ.setText();\n\nlet auditStRegLen = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 (nothing is entered) else show the label\nauditStRegLen === 500 ? labRemCountAuditStRegSQ.setText() : labRemCountAuditStRegSQ.setText(\"Characters Left : \" + auditStRegLen);\n\n//what if maximum character limit is reached\nif (auditStRegLen === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"f670ef08-ee0c-4856-b830-3f1c97a929b8","fieldName":"oVBoxSQAAuditComments","fieldParent":"de175910-9a6e-4318-b6d8-34f9ffcdd8fe","fieldPos":522,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"50%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]}]},{"fieldNo":"65d0153c-6874-44c6-fa06-7b0c033ecd9f","fieldName":"oHBoxSQAAuditComments","fieldParent":"f670ef08-ee0c-4856-b830-3f1c97a929b8","fieldPos":523,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"c518fc94-ace9-4b46-e2c4-5d1757d3e60a","fieldName":"lblAudotComments","fieldParent":"65d0153c-6874-44c6-fa06-7b0c033ecd9f","fieldPos":524,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Comments (500 Characters Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"02c2dc6b-a46d-4bdb-c7b8-42f8a8095554","fieldName":"labRemCountAuditComSQ","fieldParent":"65d0153c-6874-44c6-fa06-7b0c033ecd9f","fieldPos":525,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"4fddfde7-cea7-4661-9eb2-2d66c5d2580d","fieldName":"txtAreaAuditComments","fieldParent":"f670ef08-ee0c-4856-b830-3f1c97a929b8","fieldPos":526,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\nupdated by: VIGHNESH\nupdated on: SEPT 16, 2021\n2021ENHANCEMENTS\n*/\nlabRemCountAuditComSQ.setText();\n\nlet auditComSQLen = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 (nothing is entered) else show the label\nauditComSQLen === 500 ? labRemCountAuditComSQ.setText() : labRemCountAuditComSQ.setText(\"Characters Left : \" + auditComSQLen);\n\n//what if maximum character limit is reached\nif (auditComSQLen === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"3c509117-1eda-463d-dd9a-5036440df624","fieldName":"oHBoxSQAAuditEmailNameDate","fieldParent":"6b8f8cb8-328c-456a-d3e7-9ceb2c1c22ed","fieldPos":527,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"032b956b-dd2f-4e27-fcbb-5262bf5bd996","fieldName":"oVBoxSQAAuditEmail","fieldParent":"3c509117-1eda-463d-dd9a-5036440df624","fieldPos":528,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"911c8cd7-b0ba-4e02-a4b9-6f23cee9318f","fieldName":"oLabelSQAAuditEmail","fieldParent":"032b956b-dd2f-4e27-fcbb-5262bf5bd996","fieldPos":529,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email:","script":"","translation":[]}]},{"fieldNo":"325c1cfa-d600-4f04-c244-fb20f1fe9519","fieldName":"oTextSQAAuditEmail","fieldParent":"032b956b-dd2f-4e27-fcbb-5262bf5bd996","fieldPos":530,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"34f9d358-93a6-49bf-8801-b7c5eb5f90c9","fieldName":"oVBoxSQAAuditName","fieldParent":"3c509117-1eda-463d-dd9a-5036440df624","fieldPos":531,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"89a52761-9aac-454e-dc79-6ff1aa349a2b","fieldName":"oLabelSQAAuditName","fieldParent":"34f9d358-93a6-49bf-8801-b7c5eb5f90c9","fieldPos":532,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Name:","script":"","translation":[]}]},{"fieldNo":"2b12710f-926f-4ac3-a676-1c12df87cc6b","fieldName":"oTextSQAAuditName","fieldParent":"34f9d358-93a6-49bf-8801-b7c5eb5f90c9","fieldPos":533,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"a503091c-6943-434e-e365-0ae029b03093","fieldName":"oVBoxSQAAuditDate","fieldParent":"3c509117-1eda-463d-dd9a-5036440df624","fieldPos":534,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"8e374019-1bc4-4236-ee16-d569070c1aa0","fieldName":"oLabelSQAAuditDate","fieldParent":"a503091c-6943-434e-e365-0ae029b03093","fieldPos":535,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date:","script":"","translation":[]}]},{"fieldNo":"b0b3fec1-2544-42cb-f8b8-8462365aa446","fieldName":"oTextSQAAuditDate","fieldParent":"a503091c-6943-434e-e365-0ae029b03093","fieldPos":536,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"03e85596-16b0-44ed-9f57-a54f82e5122e","fieldName":"oHBoxSQAPanel1Btn","fieldParent":"50130455-8b36-4b5f-f13e-4e205d60dbb4","fieldPos":537,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"cd12bdd6-0421-4f10-dfb6-9e199f1094a3","fieldName":"oBtnAUDITPanel1Reset","fieldParent":"03e85596-16b0-44ed-9f57-a54f82e5122e","fieldPos":538,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"80px","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"RESET","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"clearSQA_AUDITpanel();","translation":[]}]},{"fieldNo":"a157202b-ea4b-4255-dadd-5a8d4cf201e1","fieldName":"btnCancelResendA","fieldParent":"03e85596-16b0-44ed-9f57-a54f82e5122e","fieldPos":539,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CANCEL","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.show(0); //multiple click\n\nif (g_approver_before_resending_sqadata.oldData && g_approver_before_resending_sqadata.sqaBlock.includes('SQAUDIT')) {\n\n    setDataOnSQAAUDIT(g_approver_before_resending_sqadata.oldData);\n    sqauditEnable(false);\n    g_approver_before_resending_sqadata.sqaBlock.splice(g_approver_before_resending_sqadata.sqaBlock.indexOf('SQAUDIT'), 1);\n    btnResendSQAudit.setVisible(true);\n    btnCancelResendA.setVisible(false);\n}\n\nsap.ui.core.BusyIndicator.hide(); //multiple click","translation":[]}]},{"fieldNo":"4e224aa1-08f4-4f4d-dc04-ca54e4a9ce03","fieldName":"btnResendSQAudit","fieldParent":"03e85596-16b0-44ed-9f57-a54f82e5122e","fieldPos":540,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"RESEND","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.show(0); //multiple click fix\n\ng_approver_before_resending_sqadata['oldData'] = oIconTabBarApproversList.getModel().getData();\ng_approver_before_resending_sqadata.sqaBlock.push('SQAUDIT');\n\nsqauditEnable(true);\nthis.setVisible(false);\nbtnCancelResendA.setVisible(true);\n\noTextSQAAuditEmail.setText(g_users.email);\noTextSQAAuditName.setText(g_users.full_name);\noTextSQAAuditDate.setText(setDateTime());\n\nsap.ui.core.BusyIndicator.hide(); //multiple click fix\n\n","translation":[]}]},{"fieldNo":"d0d27a80-df77-4f3d-a1b1-4e1eb50d91f5","fieldName":"oBntSQAAuditConfirm","fieldParent":"03e85596-16b0-44ed-9f57-a54f82e5122e","fieldPos":541,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CONFIRM","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: added busy indicators everywhere to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 10\n*/\nsap.ui.core.BusyIndicator.show(0); //multiple click fix\nsqaAuditPanelVal();","translation":[]}]},{"fieldNo":"45a86674-17f2-45c6-eaa6-e8446af0cc8f","fieldName":"oPanelReg","fieldParent":"e29d9bae-cf5f-4c0b-f2d2-3f9153269f44","fieldPos":542,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]}]},{"fieldNo":"f0b1334d-1450-40b8-b7c5-09558b8e72b7","fieldName":"oTextRQCAPPROVAL","fieldParent":"45a86674-17f2-45c6-eaa6-e8446af0cc8f","fieldPos":543,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"REGULATORY / QUALITY COMPLIANCE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"4c479994-d896-4f56-990f-82b2400c0e9c","fieldName":"oHBoxReg","fieldParent":"45a86674-17f2-45c6-eaa6-e8446af0cc8f","fieldPos":544,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"392a9af1-8caa-43fc-9f71-52ad4c7578b7","fieldName":"oVBoxSQARQCEmailGroup","fieldParent":"4c479994-d896-4f56-990f-82b2400c0e9c","fieldPos":545,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"6313f3b2-1bd2-4b7e-d0aa-39703242f14b","fieldName":"lblRegCompEmailGroup","fieldParent":"392a9af1-8caa-43fc-9f71-52ad4c7578b7","fieldPos":546,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Regulatory / Quality Compliance contact:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"7a2e5a05-0a24-4992-a5b8-e85760c805d4","fieldName":"oMultiComboBoxRQCEmailGroup","fieldParent":"392a9af1-8caa-43fc-9f71-52ad4c7578b7","fieldPos":547,"fieldType":"sap.m.MultiComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"50%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\ng_dataLoss = true;\nif (this.getSelectedKeys().length >= 0 || oEvent.mParameters.value === \"All\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n    oVBoxSQARegEmail.setVisible(true);\n    oVBoxSQARegName.setVisible(true);\n    oVBoxSQARegDate.setVisible(true);\n    oTextRegConfirmedBy.setText(g_users.email);\n    oTextRegCreatedName.setText(g_users.full_name);\n    oTextRegConfirmedAt.setText(setDateTime());\n} else {\n    oVBoxSQARegEmail.setVisible(false);\n    oVBoxSQARegName.setVisible(false);\n    oVBoxSQARegDate.setVisible(false);\n}\n\n\nif (oEvent.mParameters.value === \"All\") {\n    var a = [];\n    if (this.getSelectedKeys().length > 0 && this.getSelectedKeys().includes('All')) { } else {\n        a = this.getKeys();\n\n    }\n\n    this.setSelectedKeys(a);\n} else {\n    if (this.getSelectedKeys().includes('All')) {\n        this.removeSelectedKeys(['All'])\n    }\n\n}","translation":[]}]},{"fieldNo":"1dfff29a-72f5-4b85-b41a-78b8b0aa6497","fieldName":"oVBoxSQARegEmail","fieldParent":"4c479994-d896-4f56-990f-82b2400c0e9c","fieldPos":548,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBegin","script":"","translation":[]}]},{"fieldNo":"9e1a32a0-6a5d-4f16-9b5d-91de1ca38839","fieldName":"lblRegConfirmedBy","fieldParent":"1dfff29a-72f5-4b85-b41a-78b8b0aa6497","fieldPos":549,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"089937da-a30e-4a18-8574-0eba8449af7c","fieldName":"oTextRegConfirmedBy","fieldParent":"1dfff29a-72f5-4b85-b41a-78b8b0aa6497","fieldPos":550,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"22afda27-5f02-4f12-c3ab-7054a038d143","fieldName":"oVBoxSQARegName","fieldParent":"4c479994-d896-4f56-990f-82b2400c0e9c","fieldPos":551,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"6314784b-401a-4aaf-e6d2-e25f8b3a22a3","fieldName":"oLabelRegCreatedName","fieldParent":"22afda27-5f02-4f12-c3ab-7054a038d143","fieldPos":552,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Name:","script":"","translation":[]}]},{"fieldNo":"7b111a51-7394-4598-fdfc-81773be1184c","fieldName":"oTextRegCreatedName","fieldParent":"22afda27-5f02-4f12-c3ab-7054a038d143","fieldPos":553,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"f9b37112-e0d2-405c-9de9-a697d40e4ceb","fieldName":"oVBoxSQARegDate","fieldParent":"4c479994-d896-4f56-990f-82b2400c0e9c","fieldPos":554,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]}]},{"fieldNo":"dce54c3b-b812-466b-a313-ec9df2546d78","fieldName":"lblRegConfirmedAt","fieldParent":"f9b37112-e0d2-405c-9de9-a697d40e4ceb","fieldPos":555,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"dcb11901-4214-4fb8-b25d-3c765b0e53f6","fieldName":"oTextRegConfirmedAt","fieldParent":"f9b37112-e0d2-405c-9de9-a697d40e4ceb","fieldPos":556,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"a974c862-dbca-48ed-e56f-3ba79be112a6","fieldName":"oHBox1","fieldParent":"45a86674-17f2-45c6-eaa6-e8446af0cc8f","fieldPos":557,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"f9c867df-ca8b-44d6-e1aa-d3d539340cc8","fieldName":"oBtnSQRQCPanelReset","fieldParent":"a974c862-dbca-48ed-e56f-3ba79be112a6","fieldPos":558,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"80px","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"RESET","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"clearSQA_RQCpanel();","translation":[]}]},{"fieldNo":"8b8a3795-9a5d-43c6-fff0-d3fb50300b8c","fieldName":"btnCancelResendR","fieldParent":"a974c862-dbca-48ed-e56f-3ba79be112a6","fieldPos":559,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CANCEL","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: added busy indicators everywhere to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 10\n*/\nsap.ui.core.BusyIndicator.show(0); //multiple click\n\nif (g_approver_before_resending_sqadata.oldData && g_approver_before_resending_sqadata.sqaBlock.includes('SQRQC')) {\n\n    setDataOnSQARQC(g_approver_before_resending_sqadata.oldData);\n    sqrqcEnable(false);\n    g_approver_before_resending_sqadata.sqaBlock.splice(g_approver_before_resending_sqadata.sqaBlock.indexOf('SQRQC'), 1);\n    btnResendSQReg.setVisible(true);\n    btnCancelResendR.setVisible(false);\n}\n\nsap.ui.core.BusyIndicator.hide(); //multiple click","translation":[]}]},{"fieldNo":"39ff01ec-cf9a-4726-8204-084490db31ce","fieldName":"btnResendSQReg","fieldParent":"a974c862-dbca-48ed-e56f-3ba79be112a6","fieldPos":560,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"RESEND","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: added busy indicators everywhere to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 10\n*/\nsap.ui.core.BusyIndicator.show(0); //multiple click\n\ng_approver_before_resending_sqadata['oldData'] = oIconTabBarApproversList.getModel().getData();\ng_approver_before_resending_sqadata.sqaBlock.push('SQRQC');\n\n\nsqrqcEnable(true);\nthis.setVisible(false);\nbtnCancelResendR.setVisible(true);\n\noTextRegConfirmedBy.setText(g_users.email);\noTextRegCreatedName.setText(g_users.full_name);\noTextRegConfirmedAt.setText(setDateTime());\n\nsap.ui.core.BusyIndicator.hide(); //multiple click\n","translation":[]}]},{"fieldNo":"3f1ec9d2-fe54-4832-fa8a-02782fd31e40","fieldName":"oBtnSQARegBtn","fieldParent":"a974c862-dbca-48ed-e56f-3ba79be112a6","fieldPos":561,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CONFIRM","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: added busy indicators everywhere to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 10\n*/\nsap.ui.core.BusyIndicator.show(0); //multiple click\n\nlet errorMsg = [];\n\n//RQC contact selected if visisble\nif (oMultiComboBoxRQCEmailGroup.getSelectedKeys().length === 0) {\n    errorMsg.push(\"\\n * Regulatory / Quality Compliance contact\");\n    oMultiComboBoxRQCEmailGroup.removeStyleClass(\"combobox\");\n    oMultiComboBoxRQCEmailGroup.addStyleClass(\"error\");\n}\n\nlet err = \"\";\nif (errorMsg.length > 0) {\n    err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString();\n    showMessageToast(err);\n    sap.ui.core.BusyIndicator.hide(); //multiple click\n}\nelse {\n\n    /*\n    2021ENHANCEMENTS\n    updated by: vighnesh\n    udpated on : April 25, 2022\n            \n    AGHP-2586 defect remediation\n    incident: INC000025184045\n\n    function to get pieces of updated approval information mandate for parallel approval workflow\n    it will run an API to bring pieces of updated approval information\n    we will no longer call the API to update the Audit data here instead will be called in AJAX success\n\n    DEV team note:\n    since SQA key wont help in the AJAX success of the updated approval API as there are 3 panels for forwarding the material.\n    we will use a separate key to indentify at the AJAX success end\n    key: same parameter as that of what the old function had.  \n\n    see script asl_getApprovalData for more info\n    */\n\n    getUpdatedApprovalInfo('SQ-RQC');\n\n}","translation":[]}]},{"fieldNo":"fff19003-b527-4515-d4b0-91b803ef9f18","fieldName":"panelSQAgrmnt","fieldParent":"e29d9bae-cf5f-4c0b-f2d2-3f9153269f44","fieldPos":562,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]}]},{"fieldNo":"79bc8c21-3db9-405d-d4d7-8c565389ac1f","fieldName":"oTextSQAgrmnt","fieldParent":"fff19003-b527-4515-d4b0-91b803ef9f18","fieldPos":563,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"QUALITY AGREEMENT ","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"1c415259-b6dd-4ac9-8e84-81da43559041","fieldName":"oVBoxSQAPanel","fieldParent":"fff19003-b527-4515-d4b0-91b803ef9f18","fieldPos":564,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"Start","script":"","translation":[]}]},{"fieldNo":"c46e8b4e-d0f8-4ef2-8c9d-e1295bb3d26e","fieldName":"oHBoxSQARadioTypeEmailGroup","fieldParent":"1c415259-b6dd-4ac9-8e84-81da43559041","fieldPos":565,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"55ce4320-3803-48d6-8188-dd2a99fda242","fieldName":"oVBoxSQARadio","fieldParent":"c46e8b4e-d0f8-4ef2-8c9d-e1295bb3d26e","fieldPos":566,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"4d72c804-091e-49b7-f76d-23d06dc19a07","fieldName":"lblSQAgrmnt","fieldParent":"55ce4320-3803-48d6-8188-dd2a99fda242","fieldPos":567,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"textAlign","grouping":"Properties","value":"Begin","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"Quality Agreement Required:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"93b99dc5-05c1-442a-d89c-d4eb89f7813b","fieldName":"oRadioButtonGroupSQA","fieldParent":"55ce4320-3803-48d6-8188-dd2a99fda242","fieldPos":568,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"98%","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\ng_dataLoss = true;\nlet flag;\n\nif (this.getSelectedIndex() === 0) {\n    flag = true\n\n    inpComboSQAgrmntTyp.removeStyleClass(\"error\");\n    inpComboSQAgrmntTyp.addStyleClass(\"combobox\");\n    oMultiComboBoxSQAEmailGroup.removeStyleClass(\"error\");\n    oMultiComboBoxSQAEmailGroup.addStyleClass(\"combobox\");\n\n} else if (this.getSelectedIndex() === 1) {\n    flag = false;\n}\n\n\noHBoxSQARefLoc.setVisible(false);\n\nradioSQDoesExistAgrmntY.setSelected(false);\nradioSQADoesExistgrmntN.setSelected(false);\n\ninpComboSQAgrmntTyp.setSelectedKey();\noMultiComboBoxSQAEmailGroup.setSelectedKeys();\nlabRemCountSQARef.setText();\ninpReferenceNumber.setValue();\ninpLocationName.setValue();\n\n\noTextSQAConfirmedBy.setText(g_users.email);\noTextSQACreatedName.setText(g_users.full_name);\noTextSQAConfirmedAt.setText(setDateTime());\n\noHBoxSQADoesExistEmailGroup.setVisible(flag);\noHBoxSQATypeEmail.setVisible(flag);\n\nonPressSQA_SQAA(true);","translation":[]}]},{"fieldNo":"d6c4cd22-a8c2-4500-e3ae-88a6e9657832","fieldName":"radioSQAgrmntY","fieldParent":"93b99dc5-05c1-442a-d89c-d4eb89f7813b","fieldPos":569,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Yes","script":"","translation":[]},{"attribute":"groupName","grouping":"Properties","value":"sqaAgreementConfirm","script":"","translation":[]}]},{"fieldNo":"2c5b3017-561c-4466-f74e-af6cba486b12","fieldName":"radioSQAgrmntN","fieldParent":"93b99dc5-05c1-442a-d89c-d4eb89f7813b","fieldPos":570,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"No","script":"","translation":[]},{"attribute":"groupName","grouping":"Properties","value":"sqaAgreementConfirm","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"// clearSQSQAPanelValues();","translation":[]}]},{"fieldNo":"7d1c8e89-21fe-4530-f607-0cb61c40ddc0","fieldName":"oHBoxSQATypeEmail","fieldParent":"c46e8b4e-d0f8-4ef2-8c9d-e1295bb3d26e","fieldPos":571,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"0f351b27-37fc-45e6-fa8b-068498e3e5f3","fieldName":"oVBoxSQAType","fieldParent":"7d1c8e89-21fe-4530-f607-0cb61c40ddc0","fieldPos":572,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"eb741331-eb7a-44f8-d8a6-f719b97fb30c","fieldName":"lblSQAgrmntTyp","fieldParent":"0f351b27-37fc-45e6-fa8b-068498e3e5f3","fieldPos":573,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Type of Supplier Quality Agreement:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f6431201-1fd5-414d-9d10-8b0e9d922be5","fieldName":"inpComboSQAgrmntTyp","fieldParent":"0f351b27-37fc-45e6-fa8b-068498e3e5f3","fieldPos":574,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\ng_dataLoss = true;\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"c178a293-56e5-4698-e862-c62169f23070","fieldName":"oVBoxSQAEmailGroup","fieldParent":"7d1c8e89-21fe-4530-f607-0cb61c40ddc0","fieldPos":575,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]}]},{"fieldNo":"885d13f9-b22a-43ac-86f8-868ad01fe8b9","fieldName":"lblSQAEmailGroup","fieldParent":"c178a293-56e5-4698-e862-c62169f23070","fieldPos":576,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":" Supplier Quality Agreement contact:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f0621da2-e0ba-4cb7-ec68-aaf773cfbb85","fieldName":"oMultiComboBoxSQAEmailGroup","fieldParent":"c178a293-56e5-4698-e862-c62169f23070","fieldPos":577,"fieldType":"sap.m.MultiComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\ng_dataLoss = true;\nif (this.getSelectedKeys() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\nif (oEvent.mParameters.value === \"All\") {\n    var a = [];\n    if (this.getSelectedKeys().length > 0 && this.getSelectedKeys().includes('All')) { } else {\n        a = this.getKeys();\n\n    }\n\n    this.setSelectedKeys(a);\n} else {\n    if (this.getSelectedKeys().includes('All')) {\n        this.removeSelectedKeys(['All'])\n    }\n\n}","translation":[]}]},{"fieldNo":"cd6ba4ce-72ec-4a83-c61a-d71331e03d3b","fieldName":"oHBoxSQADoesExistEmailGroup","fieldParent":"1c415259-b6dd-4ac9-8e84-81da43559041","fieldPos":578,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"7eef0b45-e5b7-43e2-af7b-edff088227db","fieldName":"oVBoxSQAdoesExist","fieldParent":"cd6ba4ce-72ec-4a83-c61a-d71331e03d3b","fieldPos":579,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"1d865acf-627d-473d-f782-7bc83b8e3fdf","fieldName":"lblSQSegRiskCat","fieldParent":"7eef0b45-e5b7-43e2-af7b-edff088227db","fieldPos":580,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Does it exist for [SEGMENT] & [RISK CATEGORY] ?:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"wrapping","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"bb7532bc-e771-451c-b0e2-a69a63b55119","fieldName":"oRadioButtonGroupSQADoesExist","fieldParent":"7eef0b45-e5b7-43e2-af7b-edff088227db","fieldPos":581,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\ng_dataLoss = true;\nif (this.getSelectedIndex() === 0) {\n\n    oHBoxSQARefLoc.setVisible(true);\n\n    inpReferenceNumber.setValueStateText();\n    inpReferenceNumber.setValueState(\"None\");\n    inpReferenceNumber.removeStyleClass(\"warning\");\n    inpReferenceNumber.removeStyleClass(\"error\");\n    inpReferenceNumber.addStyleClass(\"textbox\");\n    inpLocationName.removeStyleClass(\"error\");\n    inpLocationName.addStyleClass(\"inputfield\");\n\n    oVBoxSQAEmailGroup.setVisible(false);\n\n} else if ((this.getSelectedIndex() === 1)) {\n    oHBoxSQARefLoc.setVisible(false);\n    inpReferenceNumber.setValue();\n    inpLocationName.setValue();\n\n    oVBoxSQAEmailGroup.setVisible(true);\n    oMultiComboBoxSQAEmailGroup.removeStyleClass(\"error\");\n    oMultiComboBoxSQAEmailGroup.addStyleClass(\"combobox\");\n}\n\nlabRemCountSQARef.setText();","translation":[]}]},{"fieldNo":"5f738550-a36a-412f-ebb6-b624529121d5","fieldName":"radioSQDoesExistAgrmntY","fieldParent":"bb7532bc-e771-451c-b0e2-a69a63b55119","fieldPos":582,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Yes","script":"","translation":[]},{"attribute":"groupName","grouping":"Properties","value":"sqaDoesExistConfirm","script":"","translation":[]}]},{"fieldNo":"30e14eef-0531-402d-de45-582c5c642303","fieldName":"radioSQADoesExistgrmntN","fieldParent":"bb7532bc-e771-451c-b0e2-a69a63b55119","fieldPos":583,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"No","script":"","translation":[]},{"attribute":"groupName","grouping":"Properties","value":"sqaDoesExistConfirm","script":"","translation":[]}]},{"fieldNo":"32370cb6-8333-4f75-c211-ce91245db9de","fieldName":"oHBoxSQARefLoc","fieldParent":"1c415259-b6dd-4ac9-8e84-81da43559041","fieldPos":584,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"c4953e57-100b-4bb6-d559-d9f74999a577","fieldName":"oVBoxSQARef","fieldParent":"32370cb6-8333-4f75-c211-ce91245db9de","fieldPos":585,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"54b416ef-0031-45b0-d688-4cd381ac35e0","fieldName":"oHBoxSQARef","fieldParent":"c4953e57-100b-4bb6-d559-d9f74999a577","fieldPos":586,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"2a2246ab-d853-4abb-f307-e107922e64ba","fieldName":"lblRefrenceNum","fieldParent":"54b416ef-0031-45b0-d688-4cd381ac35e0","fieldPos":587,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Reference Number:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"52027c78-bfe5-4e0e-80fd-34af2a3d346a","fieldName":"labRemCountSQARef","fieldParent":"54b416ef-0031-45b0-d688-4cd381ac35e0","fieldPos":588,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"df872c19-78a5-478d-f076-aa3dd978dc85","fieldName":"inpReferenceNumber","fieldParent":"c4953e57-100b-4bb6-d559-d9f74999a577","fieldPos":589,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\nupdated by: VIGHNESH\nupdated on: SEPT 16, 2021\n2021ENHANCEMENTS\n*/\nlabRemCountSQARef.setText();\n\nthis.removeStyleClass(\"error\");\n\nlet refNoSQLen = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 (nothing is entered) else show the label\nrefNoSQLen === 500 ? labRemCountSQARef.setText() : labRemCountSQARef.setText(\"Characters Left : \" + refNoSQLen);\n\n//what if maximum character limit is reached\nif (refNoSQLen === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"8f9c72bc-160e-4d15-d37a-b186f8c59574","fieldName":"oVBoxSQALoc","fieldParent":"32370cb6-8333-4f75-c211-ce91245db9de","fieldPos":590,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"2a5edc26-f15d-4339-b1de-06c3c5f8771c","fieldName":"lblLocationName","fieldParent":"8f9c72bc-160e-4d15-d37a-b186f8c59574","fieldPos":591,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Location Name:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c6293986-8404-42ac-d5ec-abc1a2d7abed","fieldName":"inpLocationName","fieldParent":"8f9c72bc-160e-4d15-d37a-b186f8c59574","fieldPos":592,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/sqagroup_sqaaLocationName}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"if (this.getValue() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"inputfield\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"f1f163ca-0d2a-401d-a20e-c82bd27827c3","fieldName":"oHBoxSQACreatedByDate","fieldParent":"1c415259-b6dd-4ac9-8e84-81da43559041","fieldPos":593,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTopBottom","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"32e539c4-6359-454f-8e06-67decb5d2ecc","fieldName":"oVBoxSQACreatedBy","fieldParent":"f1f163ca-0d2a-401d-a20e-c82bd27827c3","fieldPos":594,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"d8e19c53-6ae9-493a-9a21-cd09a34d524f","fieldName":"lblSQAConfirmedBy","fieldParent":"32e539c4-6359-454f-8e06-67decb5d2ecc","fieldPos":595,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"8be0fa08-d13d-4ab3-99f3-cc23dc41260d","fieldName":"oTextSQAConfirmedBy","fieldParent":"32e539c4-6359-454f-8e06-67decb5d2ecc","fieldPos":596,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"bc4559fc-49bb-47da-9220-89a0f68bd9d1","fieldName":"oVBoxSQACreatedName","fieldParent":"f1f163ca-0d2a-401d-a20e-c82bd27827c3","fieldPos":597,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"7b9d5bd7-555c-4601-c234-668cb58ce3af","fieldName":"oLabelSQACreatedName","fieldParent":"bc4559fc-49bb-47da-9220-89a0f68bd9d1","fieldPos":598,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Name:","script":"","translation":[]}]},{"fieldNo":"59a5358b-6cc8-44ca-88cb-eebbd077f0d8","fieldName":"oTextSQACreatedName","fieldParent":"bc4559fc-49bb-47da-9220-89a0f68bd9d1","fieldPos":599,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"a0039db8-0447-435a-90d8-26edc647a08a","fieldName":"oVBoxSQACreatedDate","fieldParent":"f1f163ca-0d2a-401d-a20e-c82bd27827c3","fieldPos":600,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9ed10408-5916-4b6b-f474-248845fe3585","fieldName":"lblSQAConfirmedAt","fieldParent":"a0039db8-0447-435a-90d8-26edc647a08a","fieldPos":601,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"fd39fc20-faf2-4e9b-ec8d-99b44a13e903","fieldName":"oTextSQAConfirmedAt","fieldParent":"a0039db8-0447-435a-90d8-26edc647a08a","fieldPos":602,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"7346baab-82bf-46ef-fe9d-c0118e36ed64","fieldName":"oHBoxSQAPanel2Btn","fieldParent":"fff19003-b527-4515-d4b0-91b803ef9f18","fieldPos":603,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"ae72ea95-bbdb-47c8-de94-309aa47ca0fa","fieldName":"oBtnSQAPanel2Reset","fieldParent":"7346baab-82bf-46ef-fe9d-c0118e36ed64","fieldPos":604,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"80px","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"RESET","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"clearSQA_SQAAPanel();","script":"clearSQA_SQAAPanel();","translation":[]}]},{"fieldNo":"e77804ad-c546-49ed-e675-4646f3e19b1b","fieldName":"btnCancelResendSQ","fieldParent":"7346baab-82bf-46ef-fe9d-c0118e36ed64","fieldPos":605,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"CANCEL","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: added busy indicators everywhere to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 10\n*/\nsap.ui.core.BusyIndicator.show(0); //multiple click\n\nif (g_approver_before_resending_sqadata.oldData && g_approver_before_resending_sqadata.sqaBlock.includes('SQSQAA')) {\n\n    setDataOnSQASQAA(g_approver_before_resending_sqadata.oldData);\n    sqqualityEnable(false);\n    g_approver_before_resending_sqadata.sqaBlock.splice(g_approver_before_resending_sqadata.sqaBlock.indexOf('SQSQAA'), 1);\n    btnResendSQsqaa.setVisible(true);\n    btnCancelResendSQ.setVisible(false);\n}\n\nsap.ui.core.BusyIndicator.hide(); //multiple click","translation":[]}]},{"fieldNo":"6b34db2d-209d-469a-af9b-a4223156d091","fieldName":"btnResendSQsqaa","fieldParent":"7346baab-82bf-46ef-fe9d-c0118e36ed64","fieldPos":606,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"RESEND","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: added busy indicators everywhere to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 10\n*/\nsap.ui.core.BusyIndicator.show(0); //multiple click\n\ng_approver_before_resending_sqadata['oldData'] = oIconTabBarApproversList.getModel().getData();\ng_approver_before_resending_sqadata.sqaBlock.push('SQSQAA');\n\noTextSQAConfirmedBy.setText(g_users.email);\noTextSQACreatedName.setText(g_users.full_name);\noTextSQAConfirmedAt.setText(setDateTime());\n\nsqqualityEnable(true);\nthis.setVisible(false);\nbtnCancelResendSQ.setVisible(true);\n\nsap.ui.core.BusyIndicator.hide(); //multiple click\n","translation":[]}]},{"fieldNo":"1b2524be-4893-4b90-af33-2b6f600de8da","fieldName":"oBtnSQASQAAconfirm","fieldParent":"7346baab-82bf-46ef-fe9d-c0118e36ed64","fieldPos":607,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CONFIRM","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\r\nNOTE: added busy indicators everywhere to avoid multiple clicks\r\nUPDATED BY: VIGHNESH\r\nUPDATED ON: SEPT 10\r\n*/\r\nsap.ui.core.BusyIndicator.show(0); //multiple click\r\nsqaAgreementPanelVal();","translation":[]}]},{"fieldNo":"4d7b9b98-d7c5-48ea-c144-8c9f7850e3b1","fieldName":"oIconTabFilterRQC","fieldParent":"baa19060-54d5-4ddf-d920-e4d8dc06766a","fieldPos":608,"fieldType":"sap.m.IconTabFilter","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Regulatory/Quality Compliance","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"RQC","script":"","translation":[]}]},{"fieldNo":"481237e7-a215-4d6f-db66-ffa4c36faec2","fieldName":"oPanelRQC","fieldParent":"4d7b9b98-d7c5-48ea-c144-8c9f7850e3b1","fieldPos":609,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]}]},{"fieldNo":"228d93c7-40e8-4843-cad4-d273dab266f8","fieldName":"oVBoxRQC","fieldParent":"481237e7-a215-4d6f-db66-ffa4c36faec2","fieldPos":610,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"01886198-d893-49fc-d7ba-6f9f5af17548","fieldName":"oHBoxRQCConfEmailNameDate","fieldParent":"228d93c7-40e8-4843-cad4-d273dab266f8","fieldPos":611,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"ea2d91d9-45cb-4ea3-f5c3-7fffe8bfb9bc","fieldName":"oVBoxRQCconf","fieldParent":"01886198-d893-49fc-d7ba-6f9f5af17548","fieldPos":612,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"11a874c5-1021-4e10-c90b-539bbb4201f8","fieldName":"oLabelRegConfCom","fieldParent":"ea2d91d9-45cb-4ea3-f5c3-7fffe8bfb9bc","fieldPos":613,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Regulatory / Quality Compliance:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9ad04fe7-105c-4a7d-9d80-2c3298573bb3","fieldName":"oHBoxRQCconf","fieldParent":"ea2d91d9-45cb-4ea3-f5c3-7fffe8bfb9bc","fieldPos":614,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"65dd5f8f-da69-4e9f-e432-ab5f314f545c","fieldName":"oRadioButtonGroupRQC","fieldParent":"9ad04fe7-105c-4a7d-9d80-2c3298573bb3","fieldPos":615,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_rqc_editable}","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*\nVGHNESH2021ENHANCEMENTS-2199\nNOTE: according the 2021 Enhancements, AGHP-2199, RQC Comments field is decided to be kept mandatory when user either approves or reject the material.\nDiscarding the if else approach to not differentiate between approve & reject and toggling the visibility of comments field\nCHANGED BY: VIGHNESH\nCHANGED ON: AUGUST 31, 2021\n*/\n\noTextRegDate.setText(setDateTime()); //setting the confirmed by date field\noTextRegEmail.setText(g_users.email); //setting the confirmed by email field\noTextRegName.setText(g_users.full_name); //setting the confirmed by name field\noHBoxRQCComments.setVisible(true);\n\nonPressRQCConf(true);\n\n//resetting the remaining char count & comments field in UI\noTextAreaRegComments.setValue();\nlabRemCountRQCCom.setText();\noTextAreaRegComments.removeStyleClass(\"error\");\noTextAreaRegComments.addStyleClass(\"textbox\");\noTextAreaRegComments.removeStyleClass(\"warning\");\noTextAreaRegComments.setValueStateText();\noTextAreaRegComments.setValueState(\"None\");\n\ng_dataLoss = true;","translation":[]}]},{"fieldNo":"81a76f53-dc6c-4f11-91e8-124099c24dbc","fieldName":"oRadioButtonRegConf","fieldParent":"65dd5f8f-da69-4e9f-e432-ab5f314f545c","fieldPos":616,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Confirm","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"radio","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"4af2b4c5-d808-4779-f511-60b0c11f6140","fieldName":"oRadioButtonRegConf1","fieldParent":"65dd5f8f-da69-4e9f-e432-ab5f314f545c","fieldPos":617,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Return to Source Quality","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"radio","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c3bdccfd-664f-4707-cece-4464ad290a0f","fieldName":"oHBoxRQCEmail","fieldParent":"01886198-d893-49fc-d7ba-6f9f5af17548","fieldPos":618,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"894d3c37-dc70-4e70-e083-bcdc1485e3e3","fieldName":"oVBoxRQCEmail","fieldParent":"c3bdccfd-664f-4707-cece-4464ad290a0f","fieldPos":619,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"58d40a2e-f461-4f0c-e7f6-eb7ec4b0ab69","fieldName":"oLabelRegEmail","fieldParent":"894d3c37-dc70-4e70-e083-bcdc1485e3e3","fieldPos":620,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"1b29b4f8-19e6-4e9e-9761-2e5bd71dee69","fieldName":"oTextRegEmail","fieldParent":"894d3c37-dc70-4e70-e083-bcdc1485e3e3","fieldPos":621,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{/regulatory_reguSupplierEmail}","script":"","translation":[]}]},{"fieldNo":"95afc69c-fc2d-4325-c92b-e0f85617feff","fieldName":"oHBoxRQCName","fieldParent":"01886198-d893-49fc-d7ba-6f9f5af17548","fieldPos":622,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"fa0c64cc-ea21-4a6a-a253-e8c8b944ec75","fieldName":"oVBoxRQCName","fieldParent":"95afc69c-fc2d-4325-c92b-e0f85617feff","fieldPos":623,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"6368cfb4-bc9e-4809-e12e-6d0cf4851395","fieldName":"oLabelRegName","fieldParent":"fa0c64cc-ea21-4a6a-a253-e8c8b944ec75","fieldPos":624,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Name:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"f17bb707-5d40-40c8-e700-8171554d0bc3","fieldName":"oTextRegName","fieldParent":"fa0c64cc-ea21-4a6a-a253-e8c8b944ec75","fieldPos":625,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{/regulatory_reguConfrmByName}","script":"","translation":[]}]},{"fieldNo":"f6119de0-2f51-4d52-d380-4e8486500139","fieldName":"oHBoxRQCDate","fieldParent":"01886198-d893-49fc-d7ba-6f9f5af17548","fieldPos":626,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]}]},{"fieldNo":"bbd62fcb-adcd-4a45-c71f-dee40e32ca65","fieldName":"oVBoxRegDate","fieldParent":"f6119de0-2f51-4d52-d380-4e8486500139","fieldPos":627,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"2938c06c-2fd9-46d7-a041-7a5a71182bd6","fieldName":"oLabelRegDate","fieldParent":"bbd62fcb-adcd-4a45-c71f-dee40e32ca65","fieldPos":628,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"8cd36fec-8b93-45ef-b913-1ff8b4ced94f","fieldName":"oTextRegDate","fieldParent":"bbd62fcb-adcd-4a45-c71f-dee40e32ca65","fieldPos":629,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"{/regulatory_reguConfrmDate}","script":"","translation":[]}]},{"fieldNo":"be263b14-9417-416f-faaa-cf29d8ec8266","fieldName":"oHBoxRQCComments","fieldParent":"228d93c7-40e8-4843-cad4-d273dab266f8","fieldPos":630,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTopBottom","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"8305338e-f96a-4b69-c266-71f2680c50e8","fieldName":"oVBoxRQCComments","fieldParent":"be263b14-9417-416f-faaa-cf29d8ec8266","fieldPos":631,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"4cca9da5-a6fb-4452-cde2-58ce81e64634","fieldName":"oHBoxRegComments","fieldParent":"8305338e-f96a-4b69-c266-71f2680c50e8","fieldPos":632,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"fb66832a-72c9-4d11-83cd-65d829dced82","fieldName":"oLabelRegComments","fieldParent":"4cca9da5-a6fb-4452-cde2-58ce81e64634","fieldPos":633,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Regulatory / Quality Compliance Comments (1000 characters Max):","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"216c9012-a41c-47d3-b10d-6562267cf05d","fieldName":"labRemCountRQCCom","fieldParent":"4cca9da5-a6fb-4452-cde2-58ce81e64634","fieldPos":634,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"096eea59-96b4-44b5-eec6-534f7e5dc0f1","fieldName":"oTextAreaRegComments","fieldParent":"8305338e-f96a-4b69-c266-71f2680c50e8","fieldPos":635,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/regulatory_reguAssessComments}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"1000","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_field_rqc_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\nupdated by: VIGHNESH\nupdated on: SEPT 16, 2021\n2021ENHANCEMENTS\n*/\nthis.removeStyleClass(\"error\");\n\nlabRemCountRQCCom.setText();\n\nlet rqcComLen = 1000 - this.getValue().length;\n\n//do not show the remaining character label if len is 1000 (nothing is entered) else show the label\nrqcComLen === 1000 ? labRemCountRQCCom.setText() : labRemCountRQCCom.setText(\"Characters Left : \" + rqcComLen);\n\n//what if maximum character limit is reached\nif (rqcComLen === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 1000 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"efac6ece-a6dc-4b7a-889f-4d6f2fc26dda","fieldName":"oIconTabFilterSQAA","fieldParent":"baa19060-54d5-4ddf-d920-e4d8dc06766a","fieldPos":636,"fieldType":"sap.m.IconTabFilter","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Quality Agreement","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"SQAA","script":"","translation":[]}]},{"fieldNo":"98d94f21-c7cf-404b-d750-00ff68203654","fieldName":"oPanelSQAA","fieldParent":"efac6ece-a6dc-4b7a-889f-4d6f2fc26dda","fieldPos":637,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]}]},{"fieldNo":"50129a94-e544-4c9e-edbd-899900c51316","fieldName":"oHBoxSQAAstatusTypeRefLoc","fieldParent":"98d94f21-c7cf-404b-d750-00ff68203654","fieldPos":638,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"d43f9dbc-e2e5-4dad-dded-0c840d6b8f8d","fieldName":"oVBoxStatus","fieldParent":"50129a94-e544-4c9e-edbd-899900c51316","fieldPos":639,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"22675593-96ce-4696-c7cd-cd003b5de6ba","fieldName":"oLabelStatus","fieldParent":"d43f9dbc-e2e5-4dad-dded-0c840d6b8f8d","fieldPos":640,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Status:","script":"","translation":[{"language":"DE","value":" Kundenauftragsnummer"},{"language":"FR","value":"SO N° "},{"language":"NL","value":"Ordernummer"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"3b155499-f085-4638-e60c-1336c468d98f","fieldName":"oComboBoxStatus","fieldParent":"d43f9dbc-e2e5-4dad-dded-0c840d6b8f8d","fieldPos":641,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_sqaa_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nudpated by : vighnesh\nupdated on: oct 11, 2021\n*/\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\ng_dataLoss = true;","translation":[]}]},{"fieldNo":"02a90224-69e9-46e3-b6c5-273206dbbd99","fieldName":"oVBoxSQAAType","fieldParent":"50129a94-e544-4c9e-edbd-899900c51316","fieldPos":642,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"7a7e0d0e-e478-449d-cd96-6cf610ed1b56","fieldName":"oLabelSQAType","fieldParent":"02a90224-69e9-46e3-b6c5-273206dbbd99","fieldPos":643,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Quality Agreement Executed:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"04024ef1-acf9-40e9-cf89-2547fa194a2d","fieldName":"oComboBoxSQAType","fieldParent":"02a90224-69e9-46e3-b6c5-273206dbbd99","fieldPos":644,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_sqaa_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nudpated by : vighnesh\nupdated on: oct 11, 2021\n*/\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\ng_dataLoss = true;","translation":[]}]},{"fieldNo":"518ef136-0055-4942-8a0c-4d05dcc423c9","fieldName":"oListItem","fieldParent":"04024ef1-acf9-40e9-cf89-2547fa194a2d","fieldPos":645,"fieldType":"sap.ui.core.ListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"SQA","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"SQA","script":"","translation":[]}]},{"fieldNo":"bf384423-4ca8-432e-8f78-1e04e3c6d022","fieldName":"oListItem1","fieldParent":"04024ef1-acf9-40e9-cf89-2547fa194a2d","fieldPos":646,"fieldType":"sap.ui.core.ListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"JJ Quality Requirements","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"JJ Quality Requirements","script":"","translation":[]}]},{"fieldNo":"6145ca78-046a-4646-ea9d-216c8649bf33","fieldName":"oListItem2","fieldParent":"04024ef1-acf9-40e9-cf89-2547fa194a2d","fieldPos":647,"fieldType":"sap.ui.core.ListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"ICQA","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"ICQA","script":"","translation":[]}]},{"fieldNo":"f00e0afc-65c5-4469-a961-6f80f8a6ecd6","fieldName":"oListItem3","fieldParent":"04024ef1-acf9-40e9-cf89-2547fa194a2d","fieldPos":648,"fieldType":"sap.ui.core.ListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"None","script":"","translation":[]}]},{"fieldNo":"086d64bd-57e2-4c5e-d9b4-ff723c09245a","fieldName":"oVBoxSQAARef","fieldParent":"50129a94-e544-4c9e-edbd-899900c51316","fieldPos":649,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]}]},{"fieldNo":"3aa97288-de92-4363-8054-304e94a39173","fieldName":"oLabelReferenceNumber","fieldParent":"086d64bd-57e2-4c5e-d9b4-ff723c09245a","fieldPos":650,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Reference Number:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"62247212-b4d1-4cbe-a8a7-d8029acb0f5e","fieldName":"oInputReferenceNumber","fieldParent":"086d64bd-57e2-4c5e-d9b4-ff723c09245a","fieldPos":651,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"40","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_sqaa_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nudpated by : vighnesh\nupdated on: oct 11, 2021\n*/\nif (this.getValue() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"inputfield\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"cd412162-76e6-4bab-be90-e5d10bf9837e","fieldName":"oVBoxSQAALoc","fieldParent":"50129a94-e544-4c9e-edbd-899900c51316","fieldPos":652,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]}]},{"fieldNo":"c9105d0b-518a-4c67-be4a-0426c84fb5a0","fieldName":"oLabelLocationName","fieldParent":"cd412162-76e6-4bab-be90-e5d10bf9837e","fieldPos":653,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Location Name:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"81ca9463-c0a2-4015-fcb0-20314de9e12a","fieldName":"oInputLocationName","fieldParent":"cd412162-76e6-4bab-be90-e5d10bf9837e","fieldPos":654,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"40","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_sqaa_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nudpated by : vighnesh\nupdated on: oct 11, 2021\n*/\nif (this.getValue() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"inputfield\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"8534ca46-2cf1-4617-d418-555f028ba6da","fieldName":"oHBoxAddTableSQA","fieldParent":"50129a94-e544-4c9e-edbd-899900c51316","fieldPos":655,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"alignbtn","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"e41121fd-888b-42f6-862d-de263415081b","fieldName":"btnAddRelationSQAA","fieldParent":"8534ca46-2cf1-4617-d418-555f028ba6da","fieldPos":656,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{/custom_field_sqaa_editable}","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"ADD","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"addSQAARelations();","translation":[]}]},{"fieldNo":"113e7c17-147f-4471-c002-d94d943fdfe8","fieldName":"btnViewRelationSQAA","fieldParent":"8534ca46-2cf1-4617-d418-555f028ba6da","fieldPos":657,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/align-justify","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"\n\ndiaViewSQAA.open();","translation":[]}]},{"fieldNo":"0f4cb4e6-7f29-41a6-9ecc-362ad9479065","fieldName":"oHBoxSQAAComments","fieldParent":"98d94f21-c7cf-404b-d750-00ff68203654","fieldPos":658,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"1078d783-6292-49b3-b41b-41ecf3d8f969","fieldName":"oVBoxSQAAComments","fieldParent":"0f4cb4e6-7f29-41a6-9ecc-362ad9479065","fieldPos":659,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"e3428ecc-e3ea-40b4-baf0-d6fd070e93d1","fieldName":"oHBoxSQAAComts","fieldParent":"1078d783-6292-49b3-b41b-41ecf3d8f969","fieldPos":660,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"2060eed3-8223-48f2-caaa-2d80c1f16b69","fieldName":"oLabelSQAComments","fieldParent":"e3428ecc-e3ea-40b4-baf0-d6fd070e93d1","fieldPos":661,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Quality Agreement Comments (500 Characters Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"6b533ccf-a8f6-4bc2-d9f8-1938b626a284","fieldName":"labRemCountSQAACom","fieldParent":"e3428ecc-e3ea-40b4-baf0-d6fd070e93d1","fieldPos":662,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"e7580e92-0be4-4a19-ed4e-1df7ff80e60c","fieldName":"oTextAreaSQAComments","fieldParent":"1078d783-6292-49b3-b41b-41ecf3d8f969","fieldPos":663,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/sqagreement_sqaaComments}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_field_sqaa_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\nupdated by: VIGHNESH\nupdated on: SEPT 16, 2021\n2021ENHANCEMENTS\n*/\nthis.removeStyleClass(\"error\");\n\nlabRemCountSQAACom.setText();\n\nlet sqaaComLen = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 (nothing is entered) else show the label\nsqaaComLen === 500 ? labRemCountSQAACom.setText() : labRemCountSQAACom.setText(\"Characters Left : \" + sqaaComLen);\n\n//what if maximum character limit is reached\nif (sqaaComLen === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"e304299c-20ca-467e-9a00-e9ad4af5462d","fieldName":"oHBoxSQAAConfNameEmailDateContact","fieldParent":"98d94f21-c7cf-404b-d750-00ff68203654","fieldPos":664,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"8babcb27-bfcd-4370-db5a-1350d437f6a9","fieldName":"oVBoxSQAAConf","fieldParent":"e304299c-20ca-467e-9a00-e9ad4af5462d","fieldPos":665,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"0263733f-1c0f-4435-c69c-ef7c2bbf2602","fieldName":"oLabelconfirmation","fieldParent":"8babcb27-bfcd-4370-db5a-1350d437f6a9","fieldPos":666,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Quality Agreement:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"7eee7246-2d9b-4dd0-90a3-2668229ad4fb","fieldName":"oRadioButtonGroupconfirmation","fieldParent":"8babcb27-bfcd-4370-db5a-1350d437f6a9","fieldPos":667,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_sqaa_editable}","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on: oct 11, 2021\nrefactored the code\n*/\ng_dataLoss = true;\n\n//common code block to set email, name & date when approve/reject\nlet date = setDateTime();\noTextSQAAConfirmedDate.setText(date);\noTextSQAAConfirmedBy.setText(g_users.email);\noTextSQAAConfirmedName.setText(g_users.full_name);\noTextSQAAQualContact.setText();\n\n\n//if block -- making fields mandatory\nif (this.getSelectedIndex() === 0) {\n\n    let manFlag = true;\n    oLabelReferenceNumber.setRequired(manFlag);\n    oLabelLocationName.setRequired(manFlag);\n    oLabelSQAType.setRequired(manFlag);\n    oLabelStatus.setRequired(manFlag);\n\n} else if (this.getSelectedIndex() === 1) {\n\n    let manFlag = false;\n\n    //reference number \n    oLabelReferenceNumber.setRequired(manFlag);\n    oInputReferenceNumber.setValue();\n\n    //location name\n    oLabelLocationName.setRequired(manFlag);\n    oInputLocationName.setValue();\n\n    //SQAA type\n    oLabelSQAType.setRequired(manFlag);\n    oComboBoxSQAType.setSelectedKey();\n\n    //status\n    oLabelStatus.setRequired(manFlag);\n    oComboBoxStatus.setSelectedKey();\n\n\n    //sqaa relation table\n    if (oTableSQAA.getModel().oData.length !== 0) {\n        oTableSQAA.getBinding().oModel.setData([]);\n    }\n    btnViewRelationSQAA.setText(oTableSQAA.getModel().getData().length);\n}\n\n\noVBoxSQAAConfBy.setVisible(true);\noVBoxSQAAConfName.setVisible(true);\noVBoxSQAAConfDate.setVisible(true);\n\n\n//removing highlighting -- common for both radio selection\noComboBoxStatus.removeStyleClass(\"error\");\noComboBoxStatus.addStyleClass(\"combobox\");\n\noComboBoxSQAType.removeStyleClass(\"error\");\noComboBoxSQAType.addStyleClass(\"combobox\");\n\noInputReferenceNumber.removeStyleClass(\"error\");\noInputReferenceNumber.addStyleClass(\"combobox\");\n\noInputLocationName.removeStyleClass(\"error\");\noInputLocationName.addStyleClass(\"combobox\");\n\noTextAreaSQAComments.removeStyleClass(\"error\");\noTextAreaSQAComments.addStyleClass(\"textbox\");","translation":[]}]},{"fieldNo":"36fae61a-20f2-4834-b63d-8dfa57f1f3ea","fieldName":"oRadioButtonconfirmationYes","fieldParent":"7eee7246-2d9b-4dd0-90a3-2668229ad4fb","fieldPos":668,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"textDirection","grouping":"Properties","value":"LTR","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"Confirm","script":"","translation":[]}]},{"fieldNo":"702b4fa0-51da-44c0-b492-825a1ca26a02","fieldName":"oRadioButtonconfirmationNo","fieldParent":"7eee7246-2d9b-4dd0-90a3-2668229ad4fb","fieldPos":669,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Return to Source Quality","script":"","translation":[]}]},{"fieldNo":"eb81825e-5dc3-4d62-e864-eb9d0e89b3fc","fieldName":"oVBoxSQAAConfBy","fieldParent":"e304299c-20ca-467e-9a00-e9ad4af5462d","fieldPos":670,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"d65fa045-c11f-45d1-8977-ae94e8ffd5bc","fieldName":"oLabelCreatedBy","fieldParent":"eb81825e-5dc3-4d62-e864-eb9d0e89b3fc","fieldPos":671,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"fbfa99d7-5a74-4d10-f8bb-e237302f14a7","fieldName":"oTextSQAAConfirmedBy","fieldParent":"eb81825e-5dc3-4d62-e864-eb9d0e89b3fc","fieldPos":672,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/sqagreement_confirmedByEmail}","script":"","translation":[]}]},{"fieldNo":"615907ce-fdf3-4d1b-c9d8-e61309d93c5e","fieldName":"oVBoxSQAAConfName","fieldParent":"e304299c-20ca-467e-9a00-e9ad4af5462d","fieldPos":673,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"3711bbc8-dc1d-4091-c8cf-d660ddf1e5e4","fieldName":"oLabelCreatedName","fieldParent":"615907ce-fdf3-4d1b-c9d8-e61309d93c5e","fieldPos":674,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Name:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"370660cf-af4e-4cc3-b9c3-731898c1e298","fieldName":"oTextSQAAConfirmedName","fieldParent":"615907ce-fdf3-4d1b-c9d8-e61309d93c5e","fieldPos":675,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/sqagreement_confirmedByName}","script":"","translation":[]}]},{"fieldNo":"9276aacc-41d4-4bb2-d4f2-a472a4cda1ad","fieldName":"oVBoxSQAAConfDate","fieldParent":"e304299c-20ca-467e-9a00-e9ad4af5462d","fieldPos":676,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"20c70999-d4c7-4b51-ddd5-9e78c6ce72cb","fieldName":"oLabelConfirmedDate","fieldParent":"9276aacc-41d4-4bb2-d4f2-a472a4cda1ad","fieldPos":677,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"48f11f41-b294-48de-84c0-09904776c4fc","fieldName":"oTextSQAAConfirmedDate","fieldParent":"9276aacc-41d4-4bb2-d4f2-a472a4cda1ad","fieldPos":678,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/sqagreement_confirmedDate}","script":"","translation":[]}]},{"fieldNo":"29459155-e2be-4e6e-91de-aaf24066bc91","fieldName":"oVBoxSQAAQualContact","fieldParent":"e304299c-20ca-467e-9a00-e9ad4af5462d","fieldPos":679,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]}]},{"fieldNo":"91fcfaa1-5446-4390-be35-819b98d3a107","fieldName":"oLabelQualityContactQA","fieldParent":"29459155-e2be-4e6e-91de-aaf24066bc91","fieldPos":680,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Supplier Quality Contact:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"b42117a7-0653-4c9d-cdcf-495a9627be67","fieldName":"oTextSQAAQualContact","fieldParent":"29459155-e2be-4e6e-91de-aaf24066bc91","fieldPos":681,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"fcafd18c-3074-4348-9e92-d2b0ec8048ed","fieldName":"oIconTabFilterAUDIT","fieldParent":"baa19060-54d5-4ddf-d920-e4d8dc06766a","fieldPos":682,"fieldType":"sap.m.IconTabFilter","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"AUDIT","script":"","translation":[]}]},{"fieldNo":"ad9cef97-373b-4032-8526-e17d1eead426","fieldName":"oPanelAudit","fieldParent":"fcafd18c-3074-4348-9e92-d2b0ec8048ed","fieldPos":683,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]}]},{"fieldNo":"7087d748-a9bf-44d6-eaf9-b612eb04c71a","fieldName":"oHBoxxAuditType","fieldParent":"ad9cef97-373b-4032-8526-e17d1eead426","fieldPos":684,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"54621cc7-e3bf-46c9-c38e-ea8aaf466eb4","fieldName":"oVBoxAuditType","fieldParent":"7087d748-a9bf-44d6-eaf9-b612eb04c71a","fieldPos":685,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"f46b406f-6581-4a2d-a6e1-49b6930be274","fieldName":"oLabelAuditType","fieldParent":"54621cc7-e3bf-46c9-c38e-ea8aaf466eb4","fieldPos":686,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit Type Executed:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"d1243b7c-3ab3-41ac-ac4d-319b0c214383","fieldName":"oComboBoxAuditType","fieldParent":"54621cc7-e3bf-46c9-c38e-ea8aaf466eb4","fieldPos":687,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nudpated by : vighnesh\nupdated on: oct 11, 2021\n*/\ng_dataLoss = true;\n\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"565aa66f-b7d3-4538-b5c0-30fa954bc6f6","fieldName":"oVBoxAuditOutcome","fieldParent":"7087d748-a9bf-44d6-eaf9-b612eb04c71a","fieldPos":688,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"559031f4-f367-4ede-f838-84fb11fe290f","fieldName":"oLabelAuditOutcome","fieldParent":"565aa66f-b7d3-4538-b5c0-30fa954bc6f6","fieldPos":689,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit Outcome:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9aa254ab-b564-45b4-f3f4-92ec3e50c3c6","fieldName":"oComboBoxAuditOutcome","fieldParent":"565aa66f-b7d3-4538-b5c0-30fa954bc6f6","fieldPos":690,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nudpated by : vighnesh\nupdated on: oct 11, 2021\n*/\ng_dataLoss = true;\n\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"60d4fde5-f0eb-453c-e3f4-bcd4cc3cac47","fieldName":"oVBoxRefusal","fieldParent":"7087d748-a9bf-44d6-eaf9-b612eb04c71a","fieldPos":691,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"099a9d63-a7e0-4b04-acb3-740753953f40","fieldName":"oLabelRefusal","fieldParent":"60d4fde5-f0eb-453c-e3f4-bcd4cc3cac47","fieldPos":692,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Refusal:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c1ce6776-65b1-4868-aa8f-94baa07d214e","fieldName":"oRadioButtonGroup1AuditRefuseYesNo","fieldParent":"60d4fde5-f0eb-453c-e3f4-bcd4cc3cac47","fieldPos":693,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"radio","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"88ca5e69-bda5-4978-c8e4-a479bcfadd3a","fieldName":"oRadioButtonAuditRefuseYes","fieldParent":"c1ce6776-65b1-4868-aa8f-94baa07d214e","fieldPos":694,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Yes","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f1d2e3f2-1293-4242-d6ae-d73e66c8c736","fieldName":"oRadioButtonAuditRefuseNo","fieldParent":"c1ce6776-65b1-4868-aa8f-94baa07d214e","fieldPos":695,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"No","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"7c515795-7a48-455d-fbd3-684cbec7fbd0","fieldName":"oVBoxDateofAuditCompletion","fieldParent":"7087d748-a9bf-44d6-eaf9-b612eb04c71a","fieldPos":696,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"d9d200f8-005a-429c-848a-b59a89fd5f9d","fieldName":"oLabelDateofAuditCompletion","fieldParent":"7c515795-7a48-455d-fbd3-684cbec7fbd0","fieldPos":697,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date of Audit Completion:","script":"","translation":[{"language":"DE","value":" Kundenauftragsnummer"},{"language":"FR","value":"SO N° "},{"language":"NL","value":"Ordernummer"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"a8e0352a-ac9d-483f-f34c-fdc2353a5631","fieldName":"oDatePicker1Audit","fieldParent":"7c515795-7a48-455d-fbd3-684cbec7fbd0","fieldPos":698,"fieldType":"sap.m.DatePicker","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"50%","script":"","translation":[]},{"attribute":"valueFormat","grouping":"Properties","value":"MM/dd/yyyy","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/audit_auditCompletionDate}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"reqTiming","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MM/dd/yyyy","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;\n\nlet pickedDate = this.getDateValue().getTime();\nlet currentDate = new Date().getTime();\nif (pickedDate > currentDate) {\n    showMessageToast(\"Date of Audit Completion cannot be greater than today's Date\")\n    this.setDateValue();\n}\n\nthis.removeStyleClass(\"error\");\nthis.addStyleClass(\"reqTiming\");","translation":[]}]},{"fieldNo":"030b44bc-5fdc-448b-de3a-2038caee038b","fieldName":"oHBoxAuditStatus","fieldParent":"ad9cef97-373b-4032-8526-e17d1eead426","fieldPos":699,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"0f653051-bd35-4a6f-8ab6-2c612d1ac310","fieldName":"oVBoxxAuditStatus","fieldParent":"030b44bc-5fdc-448b-de3a-2038caee038b","fieldPos":700,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"01d7bcb5-fda6-4bfa-fe3d-5c3ac42f3be5","fieldName":"oLabelxAuditStatus","fieldParent":"0f653051-bd35-4a6f-8ab6-2c612d1ac310","fieldPos":701,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Status:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c4103e2d-dcda-4cd9-9dbe-126a7db75aea","fieldName":"oComboBoxAuditStatus","fieldParent":"0f653051-bd35-4a6f-8ab6-2c612d1ac310","fieldPos":702,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nudpated by : vighnesh\nupdated on: oct 11, 2021\n*/\ng_dataLoss = true;\n\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\n","translation":[]}]},{"fieldNo":"d48fc6f3-7999-4219-d9b1-25b69c373241","fieldName":"oVBoxxAuditRecordNumber","fieldParent":"030b44bc-5fdc-448b-de3a-2038caee038b","fieldPos":703,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]}]},{"fieldNo":"a61a0281-e0bd-4d38-9410-d9d07ff2f219","fieldName":"oLabelxAuditRecordNumber","fieldParent":"d48fc6f3-7999-4219-d9b1-25b69c373241","fieldPos":704,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Reference Number:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"de104aaf-97a7-486e-ae89-50ca45f72c57","fieldName":"oInputxAuditRecordNumber","fieldParent":"d48fc6f3-7999-4219-d9b1-25b69c373241","fieldPos":705,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"40","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\")\n    this.addStyleClass(\"inputfield\")\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"ffb19655-7e05-45d0-d268-e2d550d2e783","fieldName":"oVBoxxAuditSystemStored","fieldParent":"030b44bc-5fdc-448b-de3a-2038caee038b","fieldPos":706,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"f225ea25-bd27-46bc-825b-95e7fbd41bd0","fieldName":"oLabelAuditSystemStored","fieldParent":"ffb19655-7e05-45d0-d268-e2d550d2e783","fieldPos":707,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"System Stored:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"0b072c81-b334-4f86-cb9c-a1a4d1d14a35","fieldName":"oInputxAuditSystemStored","fieldParent":"ffb19655-7e05-45d0-d268-e2d550d2e783","fieldPos":708,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"40","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\nif (this.getValue().trim() !== \"\") {\n    this.removeStyleClass(\"error\")\n    this.addStyleClass(\"inputfield\")\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"7555c0d2-d0e5-40b8-b777-8a78ee7e71e6","fieldName":"oHBoxAddTableAudit","fieldParent":"030b44bc-5fdc-448b-de3a-2038caee038b","fieldPos":709,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"alignbtn","script":"","translation":[]}]},{"fieldNo":"89bc57d2-af6e-4024-aec4-373b008e9dd5","fieldName":"btnAddRelationAudit","fieldParent":"7555c0d2-d0e5-40b8-b777-8a78ee7e71e6","fieldPos":710,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"ADD","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"addAuditRelations()","translation":[]}]},{"fieldNo":"2949e870-5ecf-4842-964d-26c401937e0e","fieldName":"btnViewRelationAudit","fieldParent":"7555c0d2-d0e5-40b8-b777-8a78ee7e71e6","fieldPos":711,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"icon","grouping":"Properties","value":"sap-icon://fa-solid/align-justify","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"diaViewAUDIT.open();","translation":[]}]},{"fieldNo":"77afe829-2e38-4bc8-8c75-99141a95b833","fieldName":"oHBoxAuditComments","fieldParent":"ad9cef97-373b-4032-8526-e17d1eead426","fieldPos":712,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"ea9d16e2-6616-41e6-a58e-a1b58a514f9a","fieldName":"oVBoxxAuditComments","fieldParent":"77afe829-2e38-4bc8-8c75-99141a95b833","fieldPos":713,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]}]},{"fieldNo":"b56457c0-104f-466e-e1a6-f15142a8a631","fieldName":"oHBoxxAuditCommentsLength","fieldParent":"ea9d16e2-6616-41e6-a58e-a1b58a514f9a","fieldPos":714,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"a8ebe719-acfd-48ab-8158-8f5e7bbd96ef","fieldName":"oLabelxAuditComments","fieldParent":"b56457c0-104f-466e-e1a6-f15142a8a631","fieldPos":715,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit Comments (500 Characters Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"8e58cd60-73fb-4753-ef57-8d5073ae8af6","fieldName":"labRemCountAudit","fieldParent":"b56457c0-104f-466e-e1a6-f15142a8a631","fieldPos":716,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"17cf513e-ef65-4926-aadb-ffd2bcaeb96b","fieldName":"oTextAreaxAuditComments","fieldParent":"ea9d16e2-6616-41e6-a58e-a1b58a514f9a","fieldPos":717,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/audit_auditComments}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\nupdated by: VIGHNESH\nupdated on: SEPT 16, 2021\n2021ENHANCEMENTS\n*/\nthis.removeStyleClass(\"error\")\n\nlabRemCountAudit.setText();\n\nlet auditComLen = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 (nothing is entered) else show the label\nauditComLen === 500 ? labRemCountAudit.setText() : labRemCountAudit.setText(\"Characters Left : \" + auditComLen);\n\n//what if maximum character limit is reached\nif (auditComLen === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"58f6d8c3-51e9-4215-b5bc-8318a819f863","fieldName":"oHBoxAuditConfirmation","fieldParent":"ad9cef97-373b-4032-8526-e17d1eead426","fieldPos":718,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"a6959cc7-576b-4e72-9d8f-5fb6949bbc35","fieldName":"oVBoxAuditConfirmation","fieldParent":"58f6d8c3-51e9-4215-b5bc-8318a819f863","fieldPos":719,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"afc6eecd-ec80-4bda-bff7-fb0b408e679a","fieldName":"oLabelxAuditconfirmation","fieldParent":"a6959cc7-576b-4e72-9d8f-5fb6949bbc35","fieldPos":720,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"03090f21-63c0-4120-a00e-141097b28807","fieldName":"oRadioButtonxAuditGroupconfirmation","fieldParent":"a6959cc7-576b-4e72-9d8f-5fb6949bbc35","fieldPos":721,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on: oct 11, 2021\nrefactored the code\n*/\ng_dataLoss = true;\n\n//common code block to set email, name & date when approve/reject\noInputConfirmedDateAudit.setText(setDateTime());\noInputCreatedByAudit.setText(g_users.email);\noInputCreatedNameAudit.setText(g_users.full_name);\noInputQualityContactAudit.setText();\n\n\n//if block -- making fields mandatory\nif (this.getSelectedIndex() === 0) {\n\n    let manFlag = true;\n\n    //different audit fields\n    oLabelAuditType.setRequired(manFlag);\n    oLabelAuditOutcome.setRequired(manFlag);\n    oLabelxAuditStatus.setRequired(manFlag);\n    oLabelRefusal.setRequired(manFlag);\n\n    oLabelxAuditRecordNumber.setRequired(manFlag);\n    oLabelAuditSystemStored.setRequired(manFlag);\n\n    oLabelDateofAuditCompletion.setRequired(manFlag);\n\n    oTextAreaxAuditComments.removeStyleClass(\"error\");\n    oTextAreaxAuditComments.addStyleClass(\"textbox\");\n\n\n} else if (this.getSelectedIndex() === 1) {\n\n    //else block -- making fields mandatory\n    let manFlag = false;\n\n    //different audit fields \n    //comments since its mandatory when reject\n    labRemCountAudit.setText();\n    oTextAreaxAuditComments.setValue();\n    oTextAreaxAuditComments.removeStyleClass(\"error\");\n    oTextAreaxAuditComments.addStyleClass(\"textbox\");\n    oTextAreaxAuditComments.removeStyleClass(\"warning\");\n    oTextAreaxAuditComments.setValueStateText();\n    oTextAreaxAuditComments.setValueState(\"None\");\n\n\n    //audit type\n    oComboBoxAuditType.setSelectedKey();\n    oLabelAuditType.setRequired(manFlag);\n    oComboBoxAuditType.removeStyleClass(\"error\");\n    oComboBoxAuditType.addStyleClass(\"combobox\");\n\n\n    //audit outcome\n    oComboBoxAuditOutcome.setSelectedKey();\n    oLabelAuditOutcome.setRequired(manFlag);\n    oComboBoxAuditOutcome.removeStyleClass(\"error\");\n    oComboBoxAuditOutcome.addStyleClass(\"combobox\");\n\n    //date\n    oLabelDateofAuditCompletion.setRequired(manFlag);\n    oDatePicker1Audit.setDateValue();\n    oDatePicker1Audit.removeStyleClass(\"error\");\n    oDatePicker1Audit.addStyleClass(\"reqTiming\");\n\n\n    //record number\n    oLabelxAuditRecordNumber.setRequired(manFlag);\n    oInputxAuditRecordNumber.setValue();\n    oInputxAuditRecordNumber.removeStyleClass(\"error\");\n    oInputxAuditRecordNumber.addStyleClass(\"inputfield\");\n\n    //system stored\n    oLabelAuditSystemStored.setRequired(manFlag);\n    oInputxAuditSystemStored.setValue();\n    oInputxAuditSystemStored.removeStyleClass(\"error\");\n    oInputxAuditSystemStored.addStyleClass(\"inputfield\");\n\n    //status\n    oComboBoxAuditStatus.setSelectedKey();\n    oLabelxAuditStatus.setRequired(manFlag);\n    oComboBoxAuditStatus.removeStyleClass(\"error\");\n    oComboBoxAuditStatus.addStyleClass(\"combobox\");\n\n    oDatePicker1Audit.setDateValue();\n\n    oLabelRefusal.setRequired(manFlag);\n    oRadioButtonGroup1AuditRefuseYesNo.setSelectedIndex(-1);\n\n    //audit relation table\n    if (oTableAudit.getModel().oData.length !== 0) {\n        oTableAudit.getBinding().oModel.setData([]);\n    }\n    btnViewRelationAudit.setText(oTableAudit.getModel().getData().length);\n\n}\n\nonPressConfAudit(true);\n","translation":[]}]},{"fieldNo":"64b731fe-c9a1-48db-e4d6-269c20c126c1","fieldName":"oRadioxAuditconfirmationYes","fieldParent":"03090f21-63c0-4120-a00e-141097b28807","fieldPos":722,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"textDirection","grouping":"Properties","value":"LTR","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"Confirm","script":"","translation":[]}]},{"fieldNo":"ab367b5c-80dd-467c-94d9-517f4c8d7053","fieldName":"oRadioxAuditconfirmationNo","fieldParent":"03090f21-63c0-4120-a00e-141097b28807","fieldPos":723,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Return to Source Quality","script":"","translation":[]}]},{"fieldNo":"745317c2-d1dc-4f79-ba8d-7cbee42343b8","fieldName":"oVBoxAuditCreatedBy","fieldParent":"58f6d8c3-51e9-4215-b5bc-8318a819f863","fieldPos":724,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"baab8ddf-6406-4dc2-8ddc-d9e8c9f00b7e","fieldName":"oLabelCreatedByAudit","fieldParent":"745317c2-d1dc-4f79-ba8d-7cbee42343b8","fieldPos":725,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"6ef5f81c-1038-41fa-8842-9dc6dec12044","fieldName":"oInputCreatedByAudit","fieldParent":"745317c2-d1dc-4f79-ba8d-7cbee42343b8","fieldPos":726,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/audit_confirmedByEmail}","script":"","translation":[]}]},{"fieldNo":"6c7e1a56-727b-4f7c-8fe7-4d6958cd2eed","fieldName":"oVBoxCreatedNameAudit","fieldParent":"58f6d8c3-51e9-4215-b5bc-8318a819f863","fieldPos":727,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"f770886e-6812-4a2d-ce86-eef7d7a414a8","fieldName":"oLabelCreatedNameAudit","fieldParent":"6c7e1a56-727b-4f7c-8fe7-4d6958cd2eed","fieldPos":728,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Name:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"c9cfbc08-ca86-49d7-d831-6036b3543bf7","fieldName":"oInputCreatedNameAudit","fieldParent":"6c7e1a56-727b-4f7c-8fe7-4d6958cd2eed","fieldPos":729,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/audit_confirmedByName}","script":"","translation":[]}]},{"fieldNo":"d725abf4-f9e8-4edd-90c6-b0c7d8ed7a2b","fieldName":"oVBoxCreatedDateAudit","fieldParent":"58f6d8c3-51e9-4215-b5bc-8318a819f863","fieldPos":730,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"6145150d-7d77-409d-e19b-db154edd1818","fieldName":"oLabelConfirmedDateAudit","fieldParent":"d725abf4-f9e8-4edd-90c6-b0c7d8ed7a2b","fieldPos":731,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"a9819580-eadf-46be-ae90-aaff2d5b99db","fieldName":"oInputConfirmedDateAudit","fieldParent":"d725abf4-f9e8-4edd-90c6-b0c7d8ed7a2b","fieldPos":732,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/audit_confirmedDate}","script":"","translation":[]}]},{"fieldNo":"bd75b7f7-bcec-4848-e860-d2a859257b14","fieldName":"oVBoxQualityContactAudit","fieldParent":"58f6d8c3-51e9-4215-b5bc-8318a819f863","fieldPos":733,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"5f4d6c71-95e2-4360-da8b-d76332b18e2f","fieldName":"oLabelQualityContactAudit","fieldParent":"bd75b7f7-bcec-4848-e860-d2a859257b14","fieldPos":734,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Supplier Quality Contact:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"f30d0650-fa2e-4d7f-c568-aec0c2f0b80b","fieldName":"oInputQualityContactAudit","fieldParent":"bd75b7f7-bcec-4848-e860-d2a859257b14","fieldPos":735,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/audit_supplierQualityContact}","script":"","translation":[]}]},{"fieldNo":"45976ede-9e27-43f8-8a48-09f0d122368b","fieldName":"oIconTabFilterSQAESign","fieldParent":"baa19060-54d5-4ddf-d920-e4d8dc06766a","fieldPos":736,"fieldType":"sap.m.IconTabFilter","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"Source Quality Approval","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"SQAESIGN","script":"","translation":[]}]},{"fieldNo":"093d366f-fbae-494f-9af0-35410c55a914","fieldName":"oPanelSQASupQualApproval","fieldParent":"45976ede-9e27-43f8-8a48-09f0d122368b","fieldPos":737,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]}]},{"fieldNo":"30972439-dc2d-4751-dd05-de33dfd8f8ff","fieldName":"oTextSQASupQualApproval","fieldParent":"093d366f-fbae-494f-9af0-35410c55a914","fieldPos":738,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"SUPPLIER QUALIFICATION PACKAGE APPROVAL","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"formHeader","script":"","translation":[]}]},{"fieldNo":"b53111c6-2162-42ec-ff5a-1c8ee9b54cfd","fieldName":"oVBoxSQAPanel1","fieldParent":"093d366f-fbae-494f-9af0-35410c55a914","fieldPos":739,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"9fcc4083-00ba-4615-b54b-9f8086b363e9","fieldName":"oHBoxSQAQualstRation","fieldParent":"b53111c6-2162-42ec-ff5a-1c8ee9b54cfd","fieldPos":740,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceAround","script":"","translation":[]}]},{"fieldNo":"ac8668e6-b10d-4243-b5f6-617dd6236fa5","fieldName":"oVBoxQualificationStatus","fieldParent":"9fcc4083-00ba-4615-b54b-9f8086b363e9","fieldPos":741,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"aa2984f7-cfeb-45aa-d17e-9410d6065b2c","fieldName":"lblQualificationStatus","fieldParent":"ac8668e6-b10d-4243-b5f6-617dd6236fa5","fieldPos":742,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Qualification Status:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"8d35b26b-5833-4c37-fc8a-3e7315bf3439","fieldName":"oComboQualificationStatus","fieldParent":"ac8668e6-b10d-4243-b5f6-617dd6236fa5","fieldPos":743,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"50%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by: vighnesh\nupdated on: oct 11, 2021\nrefactored & removed unwanted comments\n*/\ng_dataLoss = true;\n\nif (this.getSelectedKey() !== \"\") {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}\n\n\n//second approver contact\noVBoxQAEmailSendValues.setVisible(true);\noMultiComboElevatedApp.setSelectedKeys();\noMultiComboElevatedApp.removeStyleClass(\"error\");\noMultiComboElevatedApp.addStyleClass(\"combobox\");\n\n\n//qualification rationale\nlabQualRationRemCount.setText();\ntxtAreaQualificationRationale.setValue();\ntxtAreaQualificationRationale.removeStyleClass(\"error\");\ntxtAreaQualificationRationale.addStyleClass(\"textbox\");\n\n\nlet date = setDateTime();\noTextSQAConfirmedDate.setText(date);\noTextSQAConfirmBy.setText(g_users.email);\noTextASLQAOfUser.setText(g_users.full_name);\n\nbtnApproverConfirm.setEnabled(true);\nbtnReset.setEnabled(true);\n\n\nonPressconfESign(true);","translation":[]}]},{"fieldNo":"d776ecbf-78e1-4c42-df3a-9874d83ecd67","fieldName":"oVBoxQualificationRationale","fieldParent":"9fcc4083-00ba-4615-b54b-9f8086b363e9","fieldPos":744,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"ff14250c-35d8-45f2-a65e-53411beb2ab0","fieldName":"oHBoxSQAQualRation","fieldParent":"d776ecbf-78e1-4c42-df3a-9874d83ecd67","fieldPos":745,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"6d7ac522-efb6-4e09-a89b-129560d97801","fieldName":"lblQualificationRationale","fieldParent":"ff14250c-35d8-45f2-a65e-53411beb2ab0","fieldPos":746,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Qualification Rationale / Summary(500 Characters):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"0bb0c923-6a8d-4737-9c76-d6450f8122f8","fieldName":"labQualRationRemCount","fieldParent":"ff14250c-35d8-45f2-a65e-53411beb2ab0","fieldPos":747,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"8399162b-c922-4ca5-c3c6-a785d3e50d31","fieldName":"txtAreaQualificationRationale","fieldParent":"d776ecbf-78e1-4c42-df3a-9874d83ecd67","fieldPos":748,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\nupdated by: VIGHNESH\nupdated on: SEPT 16, 2021\n2021ENHANCEMENTS\n*/\nthis.removeStyleClass(\"error\");\n\nlabQualRationRemCount.setText();\n\nlet qualRationLen = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 (nothing is entered) else show the label\nqualRationLen === 500 ? labQualRationRemCount.setText() : labQualRationRemCount.setText(\"Characters Left : \" + qualRationLen);\n\n//what if maximum character limit is reached\nif (qualRationLen === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"69107a66-c51a-4892-a565-767ac3dbf351","fieldName":"oHBoxSQAQualPckConfNameEmailDate","fieldParent":"b53111c6-2162-42ec-ff5a-1c8ee9b54cfd","fieldPos":749,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"a145a62e-07ea-44e6-f1e7-974a4a0e8e13","fieldName":"oVBoxSQAConfirmedBy","fieldParent":"69107a66-c51a-4892-a565-767ac3dbf351","fieldPos":750,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"c1b8b888-fb56-4b6d-d986-3e634d1a7d3e","fieldName":"oLabelQAConfirmedBy","fieldParent":"a145a62e-07ea-44e6-f1e7-974a4a0e8e13","fieldPos":751,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"0d123021-8df7-446e-c7b6-033c3be2efe6","fieldName":"oTextSQAConfirmBy","fieldParent":"a145a62e-07ea-44e6-f1e7-974a4a0e8e13","fieldPos":752,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"65ecb6dd-246f-4147-bd0c-541da95ba687","fieldName":"oVBoxSQANameOfUser","fieldParent":"69107a66-c51a-4892-a565-767ac3dbf351","fieldPos":753,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"2a33a010-afaa-449b-d4ea-c3cfa53e5828","fieldName":"oLabelASLQAOfUser","fieldParent":"65ecb6dd-246f-4147-bd0c-541da95ba687","fieldPos":754,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Name:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"ff598b38-c93b-447e-c570-161be71a4839","fieldName":"oTextASLQAOfUser","fieldParent":"65ecb6dd-246f-4147-bd0c-541da95ba687","fieldPos":755,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"63e93dd9-2a51-4525-a903-07b7b9a4a2a2","fieldName":"oVBoxSQAConfirmedDate","fieldParent":"69107a66-c51a-4892-a565-767ac3dbf351","fieldPos":756,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"2071dbbd-b2ce-4480-aec9-0b4deb4890fe","fieldName":"oLabelQAConfirmedDate","fieldParent":"63e93dd9-2a51-4525-a903-07b7b9a4a2a2","fieldPos":757,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"bd80c0f0-9524-4228-8dd4-bb54139f83c2","fieldName":"oTextSQAConfirmedDate","fieldParent":"63e93dd9-2a51-4525-a903-07b7b9a4a2a2","fieldPos":758,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"ff10e22a-cb66-4578-cc31-16d0ce5923ce","fieldName":"oVBoxQAEmailSendValues","fieldParent":"69107a66-c51a-4892-a565-767ac3dbf351","fieldPos":759,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"9ff3782c-7e9c-4d7e-fa56-cb5fb225cb97","fieldName":"oLabelQAEmailValues","fieldParent":"ff10e22a-cb66-4578-cc31-16d0ce5923ce","fieldPos":760,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Second Approver:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"00ebebfe-69a8-4803-e0fd-fa3c6c0cd82c","fieldName":"oMultiComboElevatedApp","fieldParent":"ff10e22a-cb66-4578-cc31-16d0ce5923ce","fieldPos":761,"fieldType":"sap.m.MultiComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"75%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"selectionChange","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\nif (this.getSelectedKeys().length !== 0) {\n    this.removeStyleClass(\"error\");\n    this.addStyleClass(\"combobox\");\n}","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\ng_dataLoss = true;\nif (oEvent.mParameters.value === \"All\") {\n    var a = [];\n    if (this.getSelectedKeys().length > 0 && this.getSelectedKeys().includes('All')) { } else {\n        a = this.getKeys();\n\n    }\n\n    this.setSelectedKeys(a);\n} else {\n    if (this.getSelectedKeys().includes('All')) {\n        this.removeSelectedKeys(['All'])\n    }\n\n}","translation":[]}]},{"fieldNo":"6ae42661-b65e-404c-abd7-8ff9d8e724bf","fieldName":"oHBoxSQAAttachment","fieldParent":"093d366f-fbae-494f-9af0-35410c55a914","fieldPos":762,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]}]},{"fieldNo":"8337c03a-e35a-49fa-fdd4-9ff18d62bdc8","fieldName":"oVBoxSQAAttachments","fieldParent":"6ae42661-b65e-404c-abd7-8ff9d8e724bf","fieldPos":763,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"2c499f55-e7b9-4ec6-f300-04e13bfcc2b3","fieldName":"oHBoxSQAAttachments","fieldParent":"8337c03a-e35a-49fa-fdd4-9ff18d62bdc8","fieldPos":764,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"e434e6ac-2f8e-46af-e093-b9a40f331277","fieldName":"lblSQAAttachments","fieldParent":"2c499f55-e7b9-4ec6-f300-04e13bfcc2b3","fieldPos":765,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Attachments:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"14b7a537-6738-4189-a69d-eac75a68e70f","fieldName":"oFileUploaderSQ","fieldParent":"2c499f55-e7b9-4ec6-f300-04e13bfcc2b3","fieldPos":766,"fieldType":"sap.ui.unified.FileUploader","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"fileType","grouping":"Properties","value":"[\"pdf\",\"xls\",\"xlsx\",\"csv\",\"docx\",\"doc\",\"dot\",\"txt\",\"wbk\",\"docm\",\"dotx\",\"docb\",\"xlt\",\"xlm\",\"xlsm\",\"xltm\",\"xltx\",\"xlsb\",\"xla\",\"xlam\",\"xll\",\"xlw\",\"ppt\",\"pptx\",\"pot\",\"pps\",\"pptm\",\"potx\",\"potm\",\"ppsx\",\"ppam\",\"ppsm\",\"sldx\",\"sldm\",\"one\",\"pub\",\"xps\",\"msg\"]","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_a_editable}","script":"","translation":[]}]},{"fieldNo":"954b70bb-595b-43c3-b681-955444d181cb","fieldName":"oButtonAttachSQA","fieldParent":"2c499f55-e7b9-4ec6-f300-04e13bfcc2b3","fieldPos":767,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"7rem","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"ATTACH FILES","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_sqa_editable}","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2022ENHANCEMENTS\nupdated by : vighnesh\nupdated on : april 18, 2022\n\nAGHP-2555\n*/\nsap.ui.core.BusyIndicator.show(0);\n\nlet fieldId;\nsap.n ? fieldId = sap.n.currentView.byId('oFileUploaderSQ') : fieldId = this.getParent().mAggregations.fields[0].sId;\n\n\n//to check whether at least 1 file is selected for attachment\nlet isSelected = is_fileSelected(fieldId);\n\nif (isSelected && isSelected.errFlag) {\n    //error - no files are selected\n\n    showMessageToast(isSelected.noFileErrMsg);\n    sap.ui.core.BusyIndicator.hide();\n    return;\n\n} else {\n\n    //files are selected\n    /*\n    function to check if the to be attached file obeys all the technical criterias.\n    level is SQA\n    fieldId is the id of the field\n    */\n    checkFile('SQA', fieldId);\n\n}","translation":[]}]},{"fieldNo":"fdd90963-b383-4151-8b7f-51e7aadff425","fieldName":"oTableSQAAttachments","fieldParent":"093d366f-fbae-494f-9af0-35410c55a914","fieldPos":768,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingValue":"API Materail_Service_Questions>asl_questionnaireconfig","bindingType":"h","bindingSource":"API","bindingParentID":"1fb6679f-27a9-49ba-be51-a685dde1a2b6","bindingPathID":"8816db65-feae-4269-f0ca-955138b5d1a3","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"5","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]}]},{"fieldNo":"88e9fd85-4429-4bdf-9735-9facafbf3fca","fieldName":"oColumnSQADelAttach","fieldParent":"fdd90963-b383-4151-8b7f-51e7aadff425","fieldPos":769,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"b3249479-45ff-412e-fbe7-3075bdf3f054","fieldName":"oButtonAttachmentSQA","fieldParent":"88e9fd85-4429-4bdf-9735-9facafbf3fca","fieldPos":770,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/trash-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on : April 18, 2022\n\nSQA level attachment delete\nAGHP-2555\n*/\nsap.ui.core.BusyIndicator.show(0);\nlet file_uuid = oEvent.oSource.getBindingContext().getObject().file_id; //unique p9 id of the file\n\n/*\nfunction to first check whether system has grabbed the file ID or not\n*/\ncheck_for_file_deletion(file_uuid, 'SQA', this);","translation":[]}]},{"fieldNo":"ada1ec86-7361-47f4-9cff-b94bedad41ac","fieldName":"oColumnSQAttachment","fieldParent":"fdd90963-b383-4151-8b7f-51e7aadff425","fieldPos":771,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"File Name","script":"","translation":[]}]},{"fieldNo":"c5582f71-16b5-4d58-bda9-22391846a922","fieldName":"oLinkSQAAttFileName","fieldParent":"ada1ec86-7361-47f4-9cff-b94bedad41ac","fieldPos":772,"fieldType":"sap.m.Link","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{file_fileName}","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCMENTS\nupdated by : vighnesh\nupdated on : april 19, 2022\n\nAGHP-2556\n\ncommon function to download supplier/material level file attachments\n*/\ndownloadFileAttachments(oEvent);","translation":[]}]},{"fieldNo":"8606f462-5ddd-4408-de81-d624126592c9","fieldName":"oIconTabFilterElevated","fieldParent":"baa19060-54d5-4ddf-d920-e4d8dc06766a","fieldPos":773,"fieldType":"sap.m.IconTabFilter","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Second Approver","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"ELEVATED","script":"","translation":[]}]},{"fieldNo":"6aea350c-e691-495e-9727-57c7ce36f0e8","fieldName":"oPanelElevated","fieldParent":"8606f462-5ddd-4408-de81-d624126592c9","fieldPos":774,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"approversPanel","script":"","translation":[]}]},{"fieldNo":"cbb4592d-c8ee-482d-ebc0-a1a53b9c9716","fieldName":"oHBoxElevatedConfNameDateEmail","fieldParent":"6aea350c-e691-495e-9727-57c7ce36f0e8","fieldPos":775,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"b4611080-3d4b-447a-b67b-1e5fcf647619","fieldName":"oVBoxElevatedConf","fieldParent":"cbb4592d-c8ee-482d-ebc0-a1a53b9c9716","fieldPos":776,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"228e631f-aaa4-4aaf-f88f-2a875c7db36c","fieldName":"oLabelConfirmElevated","fieldParent":"b4611080-3d4b-447a-b67b-1e5fcf647619","fieldPos":777,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Second Approver:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f4b468b2-eedc-467d-dee0-ec9530e2cca7","fieldName":"oRadioButtonGroupElevatedApproverConfirmation","fieldParent":"b4611080-3d4b-447a-b67b-1e5fcf647619","fieldPos":778,"fieldType":"sap.m.RadioButtonGroup","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_elevated_editable}","script":"","translation":[]},{"attribute":"columns","grouping":"Properties","value":"2","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by: vighnesh\nupdated on : oct 11, 2021\n*/\ng_dataLoss = true;\nif (g_selectedRole === \"ELEVATED\") {\n    oInput4ConfirmedDate.setText(setDateTime());\n    oInputConfirmedByEmail.setText(g_users.email);\n    oInputConfirmedByName.setText(g_users.full_name);\n\n}\nonPressConfElevated(true);","translation":[]}]},{"fieldNo":"7ac664f2-69f8-42a1-def3-a17d554f4211","fieldName":"oRadioButtonElevConfYes","fieldParent":"f4b468b2-eedc-467d-dee0-ec9530e2cca7","fieldPos":779,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"textDirection","grouping":"Properties","value":"LTR","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"Approve","script":"","translation":[]}]},{"fieldNo":"2cd79b8b-9427-41be-fe72-345f6253a07e","fieldName":"oRadioButtonElevConfNo","fieldParent":"f4b468b2-eedc-467d-dee0-ec9530e2cca7","fieldPos":780,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Reject","script":"","translation":[]}]},{"fieldNo":"755f288a-f5cc-4e04-999e-9cc977980607","fieldName":"oVBoxElevConfirmedByEmail","fieldParent":"cbb4592d-c8ee-482d-ebc0-a1a53b9c9716","fieldPos":781,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"45bcc56a-5528-4a25-9b3b-8077f2f87513","fieldName":"oLabel4ConfirmedByEmail","fieldParent":"755f288a-f5cc-4e04-999e-9cc977980607","fieldPos":782,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Email:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"e22a3d9c-689c-4465-f176-94dc5d25ddf2","fieldName":"oInputConfirmedByEmail","fieldParent":"755f288a-f5cc-4e04-999e-9cc977980607","fieldPos":783,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/elevated_confirmedByEmail}","script":"","translation":[]}]},{"fieldNo":"e3f8e241-1288-4881-8e79-5902a3dc9c91","fieldName":"oVBoxElevConfirmedByName","fieldParent":"cbb4592d-c8ee-482d-ebc0-a1a53b9c9716","fieldPos":784,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"afd1953c-a87e-4c92-9dd8-af69b1f57cf7","fieldName":"oLabel3ConfirmedByName","fieldParent":"e3f8e241-1288-4881-8e79-5902a3dc9c91","fieldPos":785,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Name:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"6fe63f03-b484-4632-ec3c-129357a80ca0","fieldName":"oInputConfirmedByName","fieldParent":"e3f8e241-1288-4881-8e79-5902a3dc9c91","fieldPos":786,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/elevated_confirmBy}","script":"","translation":[]}]},{"fieldNo":"20218b0e-903b-4bd2-fe43-cfb774400a6e","fieldName":"oVBoxElevConfirmedDate","fieldParent":"cbb4592d-c8ee-482d-ebc0-a1a53b9c9716","fieldPos":787,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"d62c5f51-fce7-4336-b28f-b876351d4baf","fieldName":"oLabel5ConfirmedDate","fieldParent":"20218b0e-903b-4bd2-fe43-cfb774400a6e","fieldPos":788,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"8ffb259f-e11e-4e32-c402-e9fbeb3841f6","fieldName":"oInput4ConfirmedDate","fieldParent":"20218b0e-903b-4bd2-fe43-cfb774400a6e","fieldPos":789,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{/elevated_confirmDt}","script":"","translation":[]}]},{"fieldNo":"b2381c18-a7f8-4501-c9a1-603a47fa92f6","fieldName":"oHBoxElevComments","fieldParent":"6aea350c-e691-495e-9727-57c7ce36f0e8","fieldPos":790,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"b19ed8f3-c85b-400b-a0a1-fda1f2824a60","fieldName":"oVBoxElevComments","fieldParent":"b2381c18-a7f8-4501-c9a1-603a47fa92f6","fieldPos":791,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBottom","script":"","translation":[]}]},{"fieldNo":"8fef87e7-ae31-4537-c5e9-be532f6fd15c","fieldName":"oHBoxElevComments1","fieldParent":"b19ed8f3-c85b-400b-a0a1-fda1f2824a60","fieldPos":792,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"e0ba985e-fadc-4c95-d4bb-a5b65380cd13","fieldName":"oLabelElevatorComments","fieldParent":"8fef87e7-ae31-4537-c5e9-be532f6fd15c","fieldPos":793,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Second Approver Comments (500 Characters Max):","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"fd1c86f5-6fb0-458c-cbd0-40d562e220d6","fieldName":"labRemCountSecApp","fieldParent":"8fef87e7-ae31-4537-c5e9-be532f6fd15c","fieldPos":794,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]}]},{"fieldNo":"63e68f69-ef15-4d48-fe9f-2e3573e6f849","fieldName":"oTextAreaCommentsElevated","fieldParent":"b19ed8f3-c85b-400b-a0a1-fda1f2824a60","fieldPos":795,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/elevated_comment}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"editable","grouping":"Properties","value":"{/custom_field_elevated_editable}","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this block of code will trigger at live change event to update the remaining character text \n& to highlight in yellow the text area with warning if character limit exceeds\n& highlight in red if empty\nupdated by: VIGHNESH\nupdated on: SEPT 16, 2021\n2021ENHANCEMENTS\n*/\nthis.removeStyleClass(\"error\");\n\nlabRemCountSecApp.setText();\n\nlet secAppComLen = 500 - this.getValue().length;\n\n//do not show the remaining character label if len is 500 (nothing is entered) else show the label\nsecAppComLen === 500 ? labRemCountSecApp.setText() : labRemCountSecApp.setText(\"Characters Left : \" + secAppComLen);\n\n//what if maximum character limit is reached\nif (secAppComLen === 0) {\n    this.setValueState(\"Warning\");\n    this.setValueStateText(\"Maximum Character Limit Reached, Please limit upto 500 Characters only\");\n    this.removeStyleClass(\"textbox\");\n    this.addStyleClass(\"warning\");\n} else {\n    this.setValueState(\"None\");\n    this.removeStyleClass(\"warning\");\n    this.addStyleClass(\"textbox\");\n    this.setValueStateText();\n}\n\n","translation":[]},{"attribute":"change","grouping":"Events","value":"g_dataLoss = true;","script":"g_dataLoss = true;","translation":[]}]},{"fieldNo":"90ab0684-eab3-4b62-9e0b-2b815c6bc241","fieldName":"oBarFooter","fieldParent":"f703ee42-ad81-4baa-df9a-d91b14765f9c","fieldPos":796,"fieldType":"sap.m.Bar","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]},{"attribute":"design","grouping":"Properties","value":"Footer","script":"","translation":[]},{"attribute":"position","grouping":"Parent","value":"setFooter","script":"","translation":[]}]},{"fieldNo":"fa6f74a0-be64-4c45-aa6f-52ef0f2192b1","fieldName":"Left","fieldParent":"90ab0684-eab3-4b62-9e0b-2b815c6bc241","fieldPos":797,"fieldType":"neptune.BarContent","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentLeft","script":"","translation":[]}]},{"fieldNo":"eda2a07f-7c6f-4d04-a251-c696991a45d7","fieldName":"btnReset","fieldParent":"fa6f74a0-be64-4c45-aa6f-52ef0f2192b1","fieldPos":798,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"RESET","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"if (oIconTabBarSupplierInfo.getSelectedKey() === oIconTabFilterSupplierInfo.getKey()) {\n    if (\n        oInputReqTime.getValue().trim() === \"\" &&\n        /*supplier tab panel 1 reset*/\n        oInputSupplierName.getValue().trim() === \"\" &&\n        oInputDUNS.getValue().trim() === \"\" &&\n        txtSupReaAddMod.getValue().trim() === \"\" &&\n\n        /*selection rationale reset*/\n        txtSelRationale.getValue().trim() === \"\" &&\n\n        /*supplier address reset*/\n        oInputSupplierStreet.getValue().trim() === \"\" &&\n        oInputSupplierCountry.getValue().trim() === \"\" &&\n        oInputSupplierCity.getValue().trim() === \"\" &&\n        oInputSupplierPIN.getValue().trim() === \"\" &&\n        oInputSupplieRegion.getValue().trim() === \"\" &&\n\n        /*location type reset*/\n        oComboBoxLocationType.getSelectedKeys().length === 0 &&\n        /*Supplier contact reset*/\n        oInputSupplierContactInfofName.getValue().trim() === \"\" &&\n        oInputSupplierContactInfoWlink.getValue().trim() === \"\" &&\n        oInputSupplierContactInfoLName.getValue().trim() === \"\" &&\n        oInputSupplierContactInfoPhNum.getValue().trim() === \"\" &&\n        oInputSupplierContactInfoemail.getValue().trim() === \"\" &&\n        /*selection rationale reset*/\n        txtSelRationale.getValue().trim() === \"\") {\n        showMessageToast(\"Please enter atleast one supplier information field to reset\")\n    } else {\n        dialogResetConfirm();\n    }\n} else if (oIconTabBarSupplierInfo.getSelectedKey() === oIconTabFilterMaterialnfo.getKey()) {\n    if (oInputMatReqTime.getValue() === \"\" &&\n        oComboBoxSupplierType.getSelectedKey() === \"\" &&\n        oComboBoxRiskCatgGroup.getSelectedKey() === \"\" &&\n        oComboBoxCriticalityLevel.getSelectedKey() === \"\" &&\n        txtMatReaAddMod.getValue().trim() === \"\" && //2021ENHANCEMENTS\n        txtCLRationale.getValue().trim() === \"\" &&\n        oComboBoxOEM.getSelectedKey() === \"\" &&\n        txtPrdPartDesc.getValue().trim() === \"\" &&\n\n        /*questionnaire*/\n        g_questions.Q0 === \"\" &&\n        g_questions.Q1 === \"\" &&\n        g_questions.Q2 === \"\" &&\n        g_questions.Q3 === \"\" &&\n        g_questions.Q4 === \"\" &&\n        g_questions.Q5 === \"\" &&\n        g_questions.Q6 === \"\" &&\n        g_questions.Q7 === \"\" &&\n        g_questions.Q8 === \"\" &&\n        g_questions.Q9 === \"\" &&\n        g_questions.Q10 === \"\" &&\n        g_questions.Q11 === \"\" &&\n        g_questions.Q12 === \"\" &&\n        g_questions.Q13 === \"\" &&\n        g_questions.Q14 === \"\" &&\n        g_questions.Q15 === \"\" &&\n        g_questions.Q16 === \"\" &&\n        g_questions.Q17 === \"\" &&\n\n        /*critical/crucial status*/\n        oComboBoxCrucialSupplierStatus.getSelectedKey() === \"\" &&\n        oComboBoxCriticalSubContStatus.getSelectedKey() === \"\" &&\n        txtOverrideCom.getVisible() && txtOverrideCom.getValue().trim() === \"\" &&\n\n        /*jnjinfo*/\n        oComboBoxOpComp.getSelectedKey() === \"\" &&\n        oComboBoxjnjSite.getSelectedKey() === \"\" &&\n        oComboBoxSegment.getSelectedKey() === \"\" &&\n        oComboBoxQualOrg.getSelectedKey() === \"\" &&\n        oComboBoxRiskCatgGroup.getSelectedKey() === \"\" &&\n        oComboBoxjnjRegion.getSelectedKey() === \"\" &&\n\n        /*contacts*/\n        oMultiInputQualContact.getTokens().length === 0 &&\n        oMultiInputProContactM.getTokens().length === 0 &&\n        oMultiInputSrcContact.getTokens().length === 0 &&\n\n        /*purchasing*/\n        txtPurchaseSysID.getVisible() && txtPurchaseSysID.getValue().trim() === \"\" &&\n        txtPurSysName.getVisible() && txtPurSysName.getValue().trim() === \"\" &&\n        txtLocationAddress.getVisible() && txtLocationAddress.getValue().trim() === \"\"\n    ) {\n        showMessageToast(\"Please enter atleast one material/service information field to reset\")\n    } else {\n        dialogResetConfirm();\n    }\n} else {\n    dialogResetConfirm();\n}","translation":[]}]},{"fieldNo":"c3034461-1c75-4fcc-d20a-d2fd97566bba","fieldName":"btnSaveAsDraft","fieldParent":"fa6f74a0-be64-4c45-aa6f-52ef0f2192b1","fieldPos":799,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"type","grouping":"Properties","value":"Emphasized","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"SAVE AS DRAFT","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on : march 24, 2022\n\nbased on the PROD INC000025053162, it was observed that when user copies multiple materials, \nSAVE AS DRAFT / SUBMIT was visible (due to AGHP-2198 implementation --> without having user close the current opened material)\n\nSAVE AS DRAFT / SUBMIT button is enabled & user submitted the materials without validating for duplicates.\n\nRemediation: additional check for material duplicate has been added that will not allow the user to save as draft / submit the materials without validation \n*/\nsap.ui.core.BusyIndicator.show(0);\n\n/*\nfunction to check the material duplicates before saving as DRAFT\nif at least 1 duplicate material exist, will flag an error message and force the user to edit the material/alter it\n*/\nlet matDupes = checkMatDupes();\n\nif (matDupes) {\n    let errTxt = 'Duplicate Material(s) exist.\\n Please edit & change material details & click on ' + btnUpdMaterial.getText().trim() + ' & try again';\n    showMessageToast(errTxt);\n    sap.ui.core.BusyIndicator.hide();\n    return;\n\n}\n\n\ng_actionButton = \"SAVE\";\nvalidateDunsNo(oInputDUNS.getValue());","translation":[]},{"attribute":"validateFieldGroup","grouping":"Events","value":"Anonymous Function","script":"","translation":[]}]},{"fieldNo":"a9921cee-b0ea-43a6-8a51-35c260dc2f13","fieldName":"btnSaveMaterial","fieldParent":"fa6f74a0-be64-4c45-aa6f-52ef0f2192b1","fieldPos":800,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"type","grouping":"Properties","value":"Emphasized","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"SAVE MATERIAL","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\nupdate_saveMaterial();","translation":[]}]},{"fieldNo":"2ddd08a2-c6f3-47bc-d2e3-2cc5f77354fe","fieldName":"btnUpdMaterial","fieldParent":"fa6f74a0-be64-4c45-aa6f-52ef0f2192b1","fieldPos":801,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"170px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"type","grouping":"Properties","value":"Emphasized","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"VALIDATE MATERIAL","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"update_saveMaterial();","translation":[]}]},{"fieldNo":"ea16d0f4-fcf2-459f-8ec0-ff5c1126949b","fieldName":"Right","fieldParent":"90ab0684-eab3-4b62-9e0b-2b815c6bc241","fieldPos":802,"fieldType":"neptune.BarContent","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"position","grouping":"Parent","value":"ContentRight","script":"","translation":[]}]},{"fieldNo":"a8d74892-1b86-4e8c-c514-c3c59a88122e","fieldName":"btnBatchSave","fieldParent":"ea16d0f4-fcf2-459f-8ec0-ff5c1126949b","fieldPos":803,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"UPDATE BATCH RECORD","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"validateBatchRecord();","translation":[]}]},{"fieldNo":"48d01028-0b2e-42cd-d19c-1efe6ba30d4b","fieldName":"btnCancel","fieldParent":"ea16d0f4-fcf2-459f-8ec0-ff5c1126949b","fieldPos":804,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"170px","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"GO TO DASHBOARD","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: system will not ask the save confirmation every time when user does not make any changes\nUPDATED BY: VIGHNESH\nUPDATED ON: OCT 4, 2021, nov 14, 2021\n2021ENHANCEMENTS\n*/\nif (g_action !== 'VIEW') {\n    if (g_action === \"BATCHUPLOAD\") {\n\n        g_goToBatchDashClicked = true;\n\n        //2198 -- to check whether material is validate & closed under material tab -- first level of check\n        if (isMatEdited(g_selectedRole)) {\n            return;\n        }\n\n        //2198 -- added this code to check whether user clicked on UPDATE/SUBMIT to push data to DB -- second level check\n        if (checkMatDataLoss(g_selectedRole)) {\n            return;\n        }\n\n        if (checkGlobalDataLoss(g_selectedRole)) {\n            return;\n        } else {\n            AppCache.Load('oneasl_batch_upload', { //2021ENH\n                startParams: {\n                    selectedFilterKey: g_batchupload_selectedFilter_key\n                }\n            });\n            g_goToBatchDashClicked = false;\n\n        }\n\n    } else {\n\n        g_goToDashClicked = true;\n\n        //2198 -- to check whether material is validate & closed under material tab -- first level of check\n        if (isMatEdited(g_selectedRole)) {\n            return;\n        }\n\n        //2198 -- added this code to check whether user clicked on UPDATE/SUBMIT to push data to DB -- second level check\n        if (checkMatDataLoss(g_selectedRole)) {\n            return;\n        }\n\n        if (checkGlobalDataLoss(g_selectedRole)) {\n            return;\n        } else {\n            goBackToDashboard();\n        }\n    }\n} else {\n    goBackToDashboard();\n}","translation":[]}]},{"fieldNo":"b76db058-1156-4193-b318-0d5dcc278a91","fieldName":"btnApproverConfirm","fieldParent":"ea16d0f4-fcf2-459f-8ec0-ff5c1126949b","fieldPos":805,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"SUBMIT","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: \nINCIDENT: INC000024105261\nRCA: it was observed that users are performing multiple clicks on the confirm button just to approve as ASL Onwer.\nthis causes the API calls to happen twice and inserting two records in the asl_aslOwner_approvals table \nand \nwhen it comes to set the delete flag as true, system updates for only one material and not other causing the ASL owner not to confirm the material again since for record, isDeleted flag is still false\n\n\nremediation: busy indicator will get added once user clicks on the confirm button and will block the user from clicking it twice\nthis will fix for all the actions (related to other approvers) happening on the confirm button\n*/\nsap.ui.core.BusyIndicator.show(0);\n\n//switch case to navigate within the different validations based on role selected\nswitch (g_selectedRole) {\n\n    case 'ASL':\n        aslValidation();\n        break;\n\n    case 'SQA':\n        sqaValidation();\n        break;\n\n    case 'AUDIT':\n        auditValidation();\n        break;\n\n    case 'RQC':\n        rqcValidation();\n        break;\n\n    case 'SQAA':\n        sqaaValidation();\n        break;\n\n    case 'ELEVATED':\n        elevatedValidation();\n        break;\n\n    default:\n        showMessageToast('Invalid role selection. \\n Please select a role & try again.');\n        sap.ui.core.BusyIndicator.hide(); //multiple click\n        break;\n\n}","translation":[]}]},{"fieldNo":"e4affc9f-1a9b-4a41-da52-079c18255141","fieldName":"btnSubmit","fieldParent":"ea16d0f4-fcf2-459f-8ec0-ff5c1126949b","fieldPos":806,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"SUBMIT","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: this busy indicator was added to fix the incident #INC000023868411\nit was indentified that multiple clicks would have been happened if we did not get the data from match book the system will show no signs of operations\n*/\nsap.ui.core.BusyIndicator.show(0); //VIGHNESHJULY28\n\n\n/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on : march 26, 2022\n\nbased on the PROD INC000025053162, it was observed that when user copies multiple materials, \nsubmit was visisble (due to AGHP-2198 implementation --> without having user close the current opened material)\n\nSUBMIT button is enabled & user submitted the materials without validating for duplicates.\n\nRemediation: additional check for material duplicate has been added that will not allow the user to submit the materials without validation \n*/\nlet matDupes = checkMatDupes();\n\nif (matDupes) {\n\n    let errTxt = 'Duplicate Material(s) exist.\\n Please edit & change material details & click on ' + btnUpdMaterial.getText().trim() + ' & try again';\n    showMessageToast(errTxt);\n    sap.ui.core.BusyIndicator.hide();\n    return;\n}\n\ng_actionButton = \"SUBMIT\";\nvar dunsNo = oInputDUNS.getValue();\nvalidateDunsNo(dunsNo);\n","translation":[]}]},{"fieldNo":"b0861248-705e-475c-9412-07e5a9dea19e","fieldName":"btnUpdate","fieldParent":"ea16d0f4-fcf2-459f-8ec0-ff5c1126949b","fieldPos":807,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"UPDATE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS SPRINT2*/\nif (isMatEdited(g_selectedRole)) {\n    return;\n}\n\ng_actionButton = \"UPDATE\";\nvalidateDunsNo(oInputDUNS.getValue());","translation":[]}]},{"fieldNo":"fcfd4d9f-714f-40db-b818-ae867505b57d","fieldName":"ERRORMESSAGES","fieldParent":99999,"fieldPos":808,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"7a2704ba-1bc9-4d3f-b3df-f8a96f508b85","fieldName":"JSCODE","fieldParent":"fcfd4d9f-714f-40db-b818-ae867505b57d","fieldPos":809,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"5c44f8b5-1b49-4f15-e30f-32d8e347ae10","fieldName":"JS","fieldParent":"7a2704ba-1bc9-4d3f-b3df-f8a96f508b85","fieldPos":810,"fieldType":"neptune.Script","script":"/*\r\nudpated by : vighnesh \r\nupdated on : may 25, 2022\r\nAGHP-2553\r\n\r\nupdated on : june 2, 2022\r\n*/\r\n\r\n/*----GLOBAL VARIABLES----*/\r\nlet g_discard_check_submit = false; //material file attachment discard global variable\r\n\r\n\r\n/*---ATTACHMENTS ERROR GLOBALS---*/\r\nlet g_min_one_file;\r\nlet g_max_file_size;\r\nlet g_max_file_count;\r\nlet g_invalid_file_name;\r\nlet g_unknown_file;\r\nlet g_invalid_fileId;\r\nlet g_invalid_file_uploadType;\r\nlet g_invalid_file_saveRes;\r\nlet g_invalid_fileId_deletion;\r\nlet g_invalid_fileDetails_deletion;\r\n\r\nlet g_unkwown_type_ajax_file_deletion;\r\nlet g_unkwown_matId_ajax_file_deletion;\r\nlet g_unkwown_para_ajax_file_deletion;\r\n\r\n\r\n/*\r\nglobals for material file attachments error messages\r\n*/\r\nlet g_missing_matId;\r\nlet g_invalid_matDetails_deletion;\r\nlet g_err_txt_matFileAtt_warn1; //hold the actual warning message\r\nlet g_err_txt_matFileAtt_warn2; //hold common warning message\r\n\r\n\r\n\r\n\r\n/*\r\nfunction to call the API for fetching all oneasl error messages\r\n\r\nTECH TEAM NOTE:\r\nfetched based on application\r\nsee table asl_errorMessages\r\n*/\r\nfunction fetch_err_msgs() {\r\n\r\n    sap.ui.core.BusyIndicator.show(0);\r\n\r\n    let options = {\r\n        data: {\r\n            'appName': 'SUPPLIER'\r\n        }\r\n    };\r\n\r\n    apifetchErrorMessages(options);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\ncommon global function to intialize all the err message global variables\r\nthis function to run only once during app init.\r\nerr_response holds all the error messages\r\n\r\nTECH TEAM NOTE:\r\nswitch case to classify the messages & avoid running all conditions\r\nsee table asl_errorMessages.\r\n\r\nfunctionality --> overall functionality for which system is working\r\ntechName --> actual labels to differentiate err messages\r\n*/\r\nfunction display_err_messages(err_response) {\r\n\r\n    sap.ui.core.BusyIndicator.show(0);\r\n\r\n    err_response.forEach(data => {\r\n\r\n        switch (data.functionality) {\r\n\r\n            case 'ATTACHMENTS':\r\n\r\n                switch (data.techName) {\r\n\r\n                    /*\r\n                    common messages across all file attachments level\r\n                    */\r\n                    case 'MIN_ONE_FILE':\r\n                        g_min_one_file = data.errMessage;\r\n                        break;\r\n\r\n                    case 'MAX_FILE_SIZE':\r\n                        g_max_file_size = data.errMessage;\r\n                        break;\r\n\r\n                    case 'MAX_FILE_COUNT':\r\n                        g_max_file_count = data.errMessage;\r\n                        break;\r\n\r\n                    case 'INVALID_FILE_NAME':\r\n                        g_invalid_file_name = data.errMessage;\r\n                        break;\r\n\r\n                    case 'UNKNOWN_FILE':\r\n                        g_unknown_file = data.errMessage;\r\n                        break;\r\n\r\n                    case 'INVALID_ATTACH_OR_FILEID':\r\n                        g_invalid_fileId = data.errMessage;\r\n                        break;\r\n\r\n                    case 'INVALID_UPLOAD_TYPE':\r\n                        g_invalid_file_uploadType = data.errMessage;\r\n                        break;\r\n\r\n                    case 'EMPTY_AJAX_FILE_RESPONSE':\r\n                        g_invalid_file_saveRes = data.errMessage;\r\n                        break;\r\n\r\n                    case 'INVALID_FILEID_DELETION':\r\n                        g_invalid_fileId_deletion = data.errMessage;\r\n                        break;\r\n\r\n                    case 'INVALID_FILEDETAILS_DELETION':\r\n                        g_invalid_fileDetails_deletion = data.errMessage;\r\n                        break;\r\n\r\n                    /*\r\n                    AJAX RESPONSE FILE DELETION\r\n                    */\r\n                    case 'UNKNOWN_MATID_AJAX_FILE_DELETE':\r\n                        g_unkwown_matId_ajax_file_deletion = data.errMessage;\r\n                        break;\r\n\r\n                    case 'UNKNOWN_TYPE_AJAX_FILE_DELETE':\r\n                        g_unkwown_type_ajax_file_deletion = data.errMessage;\r\n                        break;\r\n\r\n                    case 'UNKNOWN_PARA_AJAX_FILE_DELETE':\r\n                        g_unkwown_para_ajax_file_deletion = data.errMessage;\r\n                        break;\r\n\r\n\r\n                    /*\r\n                    material level file specific errors\r\n                    */\r\n                    case 'MATINFOID_MISSING':\r\n                        g_missing_matId = data.errMessage;\r\n                        break;\r\n\r\n                    case 'INVALID_MATDETAILS_DELETION':\r\n                        g_invalid_matDetails_deletion = data.errMessage;\r\n                        break;\r\n\r\n                    case 'NO_FILES_SUBMIT':\r\n                        g_err_txt_matFileAtt_warn1 = data.errMessage;\r\n                        break;\r\n\r\n                    case 'MATFILEATTCH_DIS_WARNING':\r\n                        g_err_txt_matFileAtt_warn2 = data.errMessage;\r\n                        break;\r\n                }\r\n                break;\r\n        }\r\n    });\r\n\r\n    sap.ui.core.BusyIndicator.hide();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\nfunction to check for missing file attachments when REQUESTER submits to approval workflow.\r\n\r\nwarning dialog will trigger:\r\n-- checks only for DRAFT & IN QUALIFICATION materials\r\n-- either matInfoId is undefined or materialAttachments are 0\r\n-- techName used to fetch the accurate err message & display\r\n-- will return true if no files are found.\r\n\r\n*/\r\nfunction pre_submit_attach_check(matData) {\r\n\r\n    let errStatus = false;\r\n    let matItem;\r\n\r\n    for (let m = 0; m < matData.length; m++) {\r\n\r\n        matItem = matData[m];\r\n\r\n        if (matItem.qualificationStatus && ['DRAFT', 'IN QUALIFICATION'].includes(matItem.qualificationStatus.toUpperCase().trim())) {\r\n\r\n            if (matItem.matInfoId === undefined || (matItem.materialAttachments && matItem.materialAttachments.length === 0)) {\r\n\r\n                errStatus = true;\r\n                txtMatAttachWarn.setText(g_err_txt_matFileAtt_warn1);\r\n                messStripMatAttachWarn.setText(g_err_txt_matFileAtt_warn2);\r\n                dialogMissedMatAttach.open();\r\n                break;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    matItem = undefined;\r\n    return errStatus;\r\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"a45f8439-57ae-4a4a-d73c-90f77eb92564","fieldName":"API","fieldParent":"fcfd4d9f-714f-40db-b818-ae867505b57d","fieldPos":811,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"973978b7-0365-424d-ab7f-42995b92cdfb","fieldName":"fetchErrorMessages","fieldParent":"a45f8439-57ae-4a4a-d73c-90f77eb92564","fieldPos":812,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"DCD9A9CC-FBAC-4714-9AED-B0968F9EBE6F","restOperation":"50574695-1554-446F-B02E-1EB61923B3A4","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"let x = xhr.responseJSON;\r\n\r\nif (x.statusFlag &&\r\n    x.formattedResponse &&\r\n    x.formattedResponse.length > 0) {\r\n    /*\r\n    function to assign all the error messages to designated global variables based on functionality && technicalName\r\n    tech team :\r\n    see table asl_errorMessages\r\n    */\r\n    display_err_messages(x.formattedResponse);\r\n\r\n} else {\r\n\r\n    let err_txt = 'Unable to fetch OneASL Error Messages. \\n Please navigate back to the previous dashboard and try again.';\r\n    showMessageToast(err_txt);\r\n}\r\n\r\nsap.ui.core.BusyIndicator.hide();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"handleErrors(xhr);\r\nsap.ui.core.BusyIndicator.hide();","translation":[]}]},{"fieldNo":"d11585d5-572d-40c1-8f29-ecc2ae31521a","fieldName":"FILEATTACHMENTS","fieldParent":99999,"fieldPos":813,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"90da1d98-aba9-43b7-c6ae-c0fe55bcb377","fieldName":"JS","fieldParent":"d11585d5-572d-40c1-8f29-ecc2ae31521a","fieldPos":814,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"6408b5aa-d62b-4ec9-f594-6add7d2e5b3b","fieldName":"FileAttachmentJS","fieldParent":"90da1d98-aba9-43b7-c6ae-c0fe55bcb377","fieldPos":815,"fieldType":"neptune.Script","script":"/*\r\n2022ENHANCEMENTS\r\nudpated by : vighnesh\r\nupdated on : April 18, 2022\r\n\r\nfunction to check whether at least 1 file is selected for proceeding to attach\r\nwill return true if no files are selected\r\n*/\r\nfunction is_fileSelected(fieldId) {\r\n\r\n    let errObj = {};\r\n    errObj.errFlag = false;\r\n\r\n    if (fieldId.oFileUpload.files.length === 0) {\r\n        errObj.errFlag = true;\r\n        errObj.noFileErrMsg = g_min_one_file;\r\n    }\r\n\r\n    return errObj;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\nfunction to check whether the file is valid for upload\r\n\r\nDEV TEAM CHEAT SHEET:\r\nvalidations made are following:\r\n1. No special symbols allowed\r\n2. file size must be < 10\r\n3. maximum of 10 attachments are allowed\r\n\r\ninput parameters are:\r\nlevel -- can be supplier, material or SQ approval\r\nif material then 'm' would be defined else undefined\r\nfieldId -- respective file uploader field Id\r\n\r\n2022ENHANCEMENTS\r\nupdated by : vighnesh on april 18, 2022\r\nupdated on may 2, 2022\r\nAGHP-2553, 2555, 2556\r\n\r\n*/\r\nfunction checkFile(level, fieldId, m) {\r\n\r\n    if (level && fieldId) {\r\n\r\n        let invalidCh = [\"+\", \" #\", \" %\", \" *\", \" /\", \" :\", \" ?\", \" <\", \" >\", \" |\"];\r\n        let is_max_count = false;\r\n        let invalidSymbols = g_invalid_file_name + \"\\n\" + \"\\n\" + invalidCh.toString();\r\n\r\n\r\n        /*\r\n        switch case to check for maximum attachment count based on levels\r\n        will return true if max count is reached\r\n        may 2, 2022\r\n        */\r\n        switch (level) {\r\n\r\n            case 'SRATIONALE':\r\n                if (oTableAttachmentSupplier.getModel().getData().length >= 10) {\r\n                    is_max_count = true;\r\n                }\r\n                break;\r\n\r\n            case 'MATERIAL':\r\n                if (tableMatFiles.getModel().getData().length >= 10) {\r\n                    is_max_count = true;\r\n                }\r\n\r\n                break;\r\n\r\n            case 'SQA':\r\n                if (g_action === 'BATCHUPLOAD' && g_selectedRole === 'ADMIN') {\r\n                    /*\r\n                    batch upload / ADMIN attachment\r\n                    */\r\n                    if (oTableSQAAttachmentsBU.getModel().getData().length >= 10) {\r\n                        is_max_count = true;\r\n                    }\r\n                } else {\r\n                    /*\r\n                    SQ approval attachment\r\n                    */\r\n                    if (oTableSQAAttachments.getModel().getData().length >= 10) {\r\n                        is_max_count = true;\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n\r\n\r\n\r\n\r\n        /*\r\n        check maximum file attachment limit is not exceeding count of 10\r\n        variable is_max_count will be true if the files at particular levels are more than 10\r\n        may 2, 2022\r\n        */\r\n        if (is_max_count) {\r\n\r\n            showMessageToast(g_max_file_count);\r\n            fieldId.setValue();\r\n            sap.ui.core.BusyIndicator.hide();\r\n            return;\r\n\r\n        }\r\n\r\n\r\n        //check if file name has special symbols\r\n        let is_Invalid = invalidCh.some(i => fieldId.getValue().includes(i));\r\n\r\n        if (is_Invalid) {\r\n\r\n            //file in invalid\r\n            showMessageToast(invalidSymbols);\r\n            fieldId.setValue();\r\n            sap.ui.core.BusyIndicator.hide();\r\n            return;\r\n\r\n        }\r\n\r\n\r\n        //check if size is less than 10 MB \r\n        if (fieldId.oFileUpload.files[0].size > 10000000) {\r\n            showMessageToast(g_max_file_size);\r\n            fieldId.setValue();\r\n            sap.ui.core.BusyIndicator.hide();\r\n            return;\r\n        }\r\n\r\n\r\n\r\n        //function to prepare the distince file URL and call file upload API\r\n        if (fieldId && fieldId.oFileUpload.files[0]) {\r\n            /*\r\n            if the file is defined\r\n\r\n            function to prepare the file object for saving in table\r\n            */\r\n            prepFileUpload(fieldId.oFileUpload.files[0], level, m);\r\n        } else {\r\n            fieldId.setValue();\r\n            showMessageToast(g_unknown_file);\r\n            sap.ui.core.BusyIndicator.hide();\r\n            return;\r\n        }\r\n\r\n    } else {\r\n        showMessageToast(g_invalid_fileId);\r\n        fieldId.setValue();\r\n        sap.ui.core.BusyIndicator.hide();\r\n        return;\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/*\r\n2022ENHANCEMENTS\r\nupdated by : vighnesh\r\nudpated on : april 18, 2022\r\nAGHP-2553, 2555, 2556\r\n\r\nfunction to prepare the file URL and call API to save the file information under asl_file_attachments table\r\n\r\nTech team note:\r\nmaterial level -- material ID is included in the file URL.\r\nsupplier/SQ approval level -- no material ID is included in the file URL.\r\n*/\r\nfunction prepFileUpload(currentFile, level, m) {\r\n\r\n\r\n    let baseFolder;\r\n    let objKey;\r\n\r\n    let serverLocation = window.location.host;\r\n\r\n    let suppInfo = oPanelSupplierInfo.getModel().getData();\r\n\r\n    /*\r\n    the below model will have data & be used only when level is SQA\r\n    since only for SQA level attachments the model has data\r\n    */\r\n    let appTab = oIconTabBarApproversList.getModel().getData();\r\n\r\n    switch (level) {\r\n\r\n        case 'MATERIAL':\r\n\r\n            if (m &&\r\n                m.matInfoId &&\r\n                m.matInfoId.trim() !== '' &&\r\n                m.materialRecordId &&\r\n                m.materialRecordId.trim() !== '') {\r\n\r\n                if (serverLocation.includes(\"dev\")) {\r\n                    baseFolder = \"ONEASL\" + \"/\" + \"DEV\" + \"/\" + g_supplierId + '/' + m.matInfoId;\r\n                } else if (serverLocation.includes(\"qa\")) {\r\n                    baseFolder = \"ONEASL\" + \"/\" + \"QA\" + \"/\" + g_supplierId + '/' + m.matInfoId;\r\n                } else if (serverLocation.includes(\"sbx\")) {\r\n                    baseFolder = \"ONEASL\" + \"/\" + \"SBX\" + \"/\" + g_supplierId + '/' + m.matInfoId;\r\n                } else {\r\n                    baseFolder = \"ONEASL\" + \"/\" + \"PROD\" + \"/\" + g_supplierId + '/' + m.matInfoId;\r\n                }\r\n\r\n                objKey = baseFolder + '/' + currentFile.name;\r\n\r\n\r\n\r\n\r\n            } else {\r\n                showMessageToast(g_missing_matId);\r\n                sap.ui.core.BusyIndicator.hide();\r\n                return;\r\n            }\r\n            break;\r\n\r\n\r\n        case 'SRATIONALE':\r\n        case 'SQA':\r\n\r\n            if (serverLocation.includes(\"dev\")) {\r\n                baseFolder = \"ONEASL\" + \"/\" + \"DEV\" + \"/\" + g_supplierId;\r\n            } else if (serverLocation.includes(\"qa\")) {\r\n                baseFolder = \"ONEASL\" + \"/\" + \"QA\" + \"/\" + g_supplierId;\r\n            } else if (serverLocation.includes(\"sbx\")) {\r\n                baseFolder = \"ONEASL\" + \"/\" + \"SBX\" + \"/\" + g_supplierId;\r\n            } else {\r\n                baseFolder = \"ONEASL\" + \"/\" + \"PROD\" + \"/\" + g_supplierId;\r\n            }\r\n\r\n            objKey = baseFolder + '/' + currentFile.name;\r\n            break;\r\n\r\n    }\r\n\r\n\r\n\r\n    let params = {\r\n        Key: objKey,\r\n        ContentType: currentFile.type,\r\n        ContentDisposition: 'attachment',\r\n        Body: currentFile,\r\n        ServerSideEncryption: \"AES256\"\r\n\r\n    };\r\n\r\n    bucket.putObject(params, function (err) {\r\n        if (err) {\r\n            console.log('ERROR while constructing File URL at ' + level + ' level : ' + err);\r\n            sap.ui.core.BusyIndicator.hide(); //may 31, 2022\r\n        } else {\r\n\r\n            let fileUrl = \"https://s3.amazonaws.com/\" + g_s3BucketName + \"/\" + objKey;\r\n            let fileName = currentFile.name;\r\n\r\n            let attachmentLabel = {\r\n                \"fileName\": \"File Name\",\r\n                \"fileURL\": \"File URL\"\r\n            };\r\n\r\n\r\n            /*\r\n            distribution of parent ID and request Type\r\n\r\n            TECH TEAM NOTE:\r\n            --PARENT ID--\r\n            for supplier level -- get the parent supplier ID\r\n            for material/SQ level --- get the parent mateiral ID\r\n\r\n            --REQUEST TYPE--\r\n            for supplier level -- supplier type of request\r\n            for material/SQ level -- material type of request\r\n            */\r\n            let parentID;\r\n            let requestType = '';\r\n\r\n            if (level) {\r\n\r\n                switch (level) {\r\n\r\n                    case 'MATERIAL':\r\n                        requestType = m.materialTypeOfRequest;\r\n                        parentID = m.parentMaterialInfoId;\r\n                        break;\r\n\r\n                    case 'SQA':\r\n                        requestType = appTab.material_materialTypeOfRequest;\r\n                        parentID = appTab.material_parentMaterialInfoId;\r\n                        break;\r\n\r\n                    case 'SRATIONALE':\r\n                        requestType = suppInfo.typeOfRequest;\r\n                        parentID = suppInfo.parentSupplierInfoId;\r\n                        break;\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n\r\n            /*\r\n            dev note:\r\n            since this is the object prepared to be inserted in the file attachment table &\r\n            is common for all levels of attachments\r\n            for supplier when saved as draft with no materials, material level information can be empty\r\n\r\n\r\n            for Supplier level attachments : SRATIONALE\r\n            matInfoId\r\n            parentMaterialInfoId\r\n            materialRecordId\r\n            qualificationStatus\r\n\r\n            would be undefined\r\n\r\n            parentID can be undefined if there the material is not child\r\n\r\n            */\r\n            let fileUploadObj = {\r\n\r\n                supplierInfoId: g_supplierId, //supplier ID\r\n                supplierRecordId: suppInfo.supplierRecordId, //static supplier ID\r\n\r\n                matInfoId: (level && level.toUpperCase().trim() === 'MATERIAL') ? m.matInfoId : appTab.material_matInfoId, //material ID\r\n                materialRecordId: (level && level.toUpperCase().trim() === 'MATERIAL') ? m.materialRecordId : appTab.material_materialRecordId, //static material ID\r\n\r\n                parentID: parentID, //supplier / parent material ID based on level\r\n\r\n\r\n                groupId: level, //types of level\r\n\r\n                fileURL: fileUrl,\r\n                fileName: fileName,\r\n                isDeleted: false,\r\n                qualificationStatus: (level && level.toUpperCase().trim() === 'MATERIAL') ? m.qualificationStatus : appTab.material_qualificationStatus,\r\n                typeofRequest: requestType,\r\n                labelObj: attachmentLabel,\r\n\r\n                userName: g_users.full_name,\r\n                userId: g_users.userId,\r\n                role: g_selectedRole\r\n\r\n            };\r\n\r\n\r\n            if (g_action === 'BATCHUPLOAD' && g_selectedRole === 'ADMIN') {\r\n\r\n\r\n                /*\r\n                udpated by : vighnesh\r\n                updated on : april 19, 2022\r\n\r\n                it was observed that the above object was used for BU SQ attachment\r\n                not a mandate to use the same.\r\n\r\n                new object created with respective key names according to other levels of attachments\r\n\r\n                IMPORTANT TECH NOTE : no API calls for file attachments/deletion is called for batch upload level attachments\r\n                all the file attachments save/audit logs are triggering when user saves the valid data into system.\r\n\r\n                below are the keys used mere to render the files in the UI\r\n                batch_excel_Savedata script has been updated too.\r\n                */\r\n                let batchfileObj = {\r\n\r\n                    fileName: fileName,\r\n                    fileURL: fileUrl,\r\n                    groupId: level,\r\n                    id: new Date().valueOf() //file id for deleting just in the UI\r\n\r\n                }\r\n\r\n\r\n                if (level === 'SQA') {\r\n                    batchfileObj.matInfoId = approverBatchMaterialInfo.getModel().getData().matInfoId;\r\n                }\r\n\r\n                saveBatchAttachments(batchfileObj);\r\n\r\n            } else {\r\n\r\n                ajaxSaveFile(fileUploadObj); //function to trigger an API call to save in file_attachments table\r\n            }\r\n\r\n        }\r\n\r\n    });\r\n}\r\n\r\n\r\n\r\n/*\r\n2021ENHANCEMENTS\r\nupdated by : vighnesh\r\nupdated on : april 18, 2022\r\n\r\nAGHP-2553, 2555, 2556\r\n\r\nfunction to call file upload API to insert data (save file URLs) into the asl_file_attachments table\r\n*/\r\nfunction ajaxSaveFile(objToBeUpdated) {\r\n\r\n    let options = {\r\n        data: objToBeUpdated,\r\n    };\r\n\r\n    apisaveUploadedFiles(options);\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n2021ENHANCEMENTS\r\nupdated by : vighnesh\r\nupdated on : april 19, 2022\r\n\r\n2553, 2555, 2556\r\n\r\ncommon function to download file attachments\r\n*/\r\nfunction downloadFileAttachments(oEvent) {\r\n\r\n    let file_URL = oEvent.oSource.getBindingContext().getObject().file_fileURL;\r\n\r\n    let params = {\r\n        Bucket: g_s3BucketName,\r\n        Key: file_URL.replace(\"https://s3.amazonaws.com/\" + g_s3BucketName + \"/\", \"\"),\r\n        Expires: 604800\r\n    };\r\n\r\n    new Promise((resolve, reject) => {\r\n        let url = bucket.getSignedUrl(\"getObject\", params);\r\n        window.location.href = url;\r\n        resolve(url);\r\n    });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**************************FILE DELETION CODE****************************/\r\n/*\r\n2022ENANCEMENTS\r\nupdated by : vighnesh\r\nupdated on : april 18, 2022\r\n\r\ncommon function to check for file deletion \r\ncheck whether unique file Id has been passed to the delete function\r\n*/\r\nfunction check_for_file_deletion(file_uuid, type, s, mData) {\r\n\r\n    if (file_uuid) {\r\n        attachmentTableDelete(file_uuid, type, s, mData);\r\n    } else {\r\n        sap.ui.core.BusyIndicator.hide();\r\n        showMessageToast(g_invalid_fileId_deletion);\r\n    }\r\n}\r\n\r\n\r\n/*\r\n2021ENHANCEMENTS -- sprint 3\r\nupdated by : vighnesh on nov28, 2021\r\nremoved comments\r\n\r\n2022ENANCEMENTS\r\nupdated by : vighnesh\r\nupdated on : april 18, 2022\r\n\r\nfunction to delete the corresponding file from model data only.\r\n*/\r\nfunction attachmentTableDelete(fileId, attachType, sel, mData) {\r\n\r\n    /*\r\n    check whether file ID, attachment level & file data object is present or not.\r\n    */\r\n    if (fileId && attachType && sel) {\r\n\r\n        dialogDelConfirm('Are you sure want delete this Attachment?', sel, () => {\r\n\r\n            let s = sel.getBindingContext().getObject();\r\n\r\n            switch (attachType) {\r\n\r\n                case 'SRATIONALE':\r\n                    ModelData.Delete(oTableAttachmentSupplier, \"file_id\", fileId);\r\n                    break;\r\n\r\n\r\n                case 'MATERIAL':\r\n                    ModelData.Delete(tableMatFiles, \"file_id\", fileId);\r\n                    break;\r\n\r\n\r\n                case 'SQA':\r\n                    if (g_action === 'BATCHUPLOAD') {\r\n                        ModelData.Delete(oTableSQAAttachmentsBU, \"file_id\", fileId);\r\n                    } else if (g_action !== 'BATCHUPLOAD') {\r\n                        ModelData.Delete(oTableSQAAttachments, \"file_id\", fileId);\r\n                    }\r\n                    break;\r\n\r\n            }\r\n\r\n            if (g_action !== 'BATCHUPLOAD' && g_selectedRole !== 'ADMIN') {\r\n\r\n                sap.ui.core.BusyIndicator.show(0);\r\n                /*\r\n                calling API to delete file & add record in AUDIT TRAIL\r\n                */\r\n                deleteAttachedFiles(fileId, 'asl_file_attachments', s, attachType, mData);\r\n\r\n            }\r\n\r\n            attachmentTableCount(); //refresh the table count/visibility\r\n\r\n            g_dialog.close();\r\n            sap.ui.core.BusyIndicator.hide();\r\n\r\n        }, (oEvent) => {\r\n            g_dialog.close();\r\n            sap.ui.core.BusyIndicator.hide();\r\n\r\n        });\r\n\r\n    } else {\r\n\r\n        showMessageToast(g_invalid_fileDetails_deletion);\r\n        sap.ui.core.BusyIndicator.hide();\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n/*\r\n2021ENHANCEMENTS -- sprint 3\r\nupdated by : vighnesh on nov28, 2021\r\nremoved comments\r\n\r\nupdated by : vighnesh\r\nupdated on : april 18, 2022\r\n\r\nfunction to call API for deleting the files\r\nAPI will set isDeleted as false under asl_file_attachments table &\r\nadd entry in AUDIT TRAIL \r\n\r\n*/\r\nfunction deleteAttachedFiles(file_uuid, tableName, fileObj, attachType, mData) {\r\n\r\n    sap.ui.core.BusyIndicator.show(0);\r\n\r\n    let attachmentLabel = {\r\n        \"fileName\": \"File Name\",\r\n        \"fileURL\": \"File URL\"\r\n    };\r\n\r\n    let appTabObj = oIconTabBarApproversList.getModel().getData();\r\n    let supObj = oPanelSupplierInfo.getModel().getData();\r\n\r\n    /*\r\n    distribution of parent ID and request Type\r\n\r\n    TECH TEAM NOTE:\r\n    --PARENT ID--\r\n    for supplier level -- get the parent supplier ID\r\n    for material/SQ level --- get the parent mateiral ID\r\n\r\n    --REQUEST TYPE--\r\n    for supplier level -- supplier type of request\r\n    for material/SQ level -- material type of request\r\n    */\r\n    let parentID;\r\n    let requestType = '';\r\n\r\n    switch (attachType) {\r\n\r\n        case 'SRATIONALE':\r\n            requestType = supObj.typeOfRequest;\r\n            parentID = supObj.parentSupplierInfoId;\r\n            break;\r\n\r\n        case 'MATERIAL':\r\n            requestType = mData.materialTypeOfRequest;\r\n            parentID = mData.parentMaterialInfoId;\r\n            break;\r\n\r\n        case 'SQA':\r\n            requestType = appTabObj.material_materialTypeOfRequest;\r\n            parentID = appTabObj.material_parentMaterialInfoId;\r\n            break;\r\n\r\n\r\n    }\r\n\r\n\r\n    /*\r\n    the values will be defined based on the level of attachment\r\n\r\n    for SRATIONALE:\r\n\r\n    qualification status,\r\n    matInfoId,\r\n    materialRecordId,\r\n    parent material ID would be undefined\r\n\r\n    */\r\n    let options = {\r\n        data: {\r\n            \"tableRowId\": file_uuid, // this is unique p9 id assigned to each file, used to delete that specific file in asl_file_attachment table\r\n            //\"isDeleted\": false,\r\n\r\n            /*\r\n            data required for Audit Trail table insertion\r\n            */\r\n            \"tableName\": tableName, // always be 'asl_file_attachments'\r\n\r\n            \"supplierInfoId\": g_supplierId,\r\n            \"supplierRecordId\": supObj.supplierRecordId,\r\n            \"matInfoId\": (attachType && attachType === 'MATERIAL') ? fileObj.file_matInfoId : appTabObj.material_matInfoId, //empty/undefined when supplier level attachments\r\n            \"materialRecordId\": (attachType && attachType === 'MATERIAL') ? mData.materialRecordId : appTabObj.material_materialRecordId, //empty/undefined when supplier level attachments\r\n\r\n            \"parentID\": parentID, //empty/undefined when supplier level attachments\r\n\r\n            \"fileURL\": fileObj.file_fileURL,\r\n            \"fileName\": fileObj.file_fileName,\r\n\r\n            \"userName\": g_users.full_name,\r\n            \"userId\": g_users.userId,\r\n            \"groupId\": attachType,\r\n            \"role\": g_selectedRole,\r\n            \"qualificationStatus\": (attachType && attachType === 'MATERIAL') ? mData.qualificationStatus : appTabObj.material_qualificationStatus,\r\n            \"typeofRequest\": requestType,\r\n\r\n            \"labelObj\": attachmentLabel\r\n\r\n        }\r\n    };\r\n\r\n    apifileAttachmentsDelete(options);\r\n\r\n\r\n}\r\n\r\n\r\n\r\n/*\r\nupdated by : vighnesh\r\nupdated on : may 18, 2022\r\n\r\nfunction to check whether user has attached file to material prior SUBMITTING to ASL Owner\r\n\r\nTECH TEAM note: \r\nfor each material check whether file has been attached or not.\r\n*/\r\nfunction pre_Submit_mat_file_Check() {\r\n\r\n    let matData = oTableAddMaterial.getModel().getData();\r\n\r\n    if (matData && matData.length > 0) {\r\n\r\n    }\r\n\r\n\r\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"64b93fe2-21f7-4703-c5a6-571a3c2b7cef","fieldName":"API","fieldParent":"d11585d5-572d-40c1-8f29-ecc2ae31521a","fieldPos":816,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"648e4d5e-4c61-40fa-af1e-3c189a5e6d7b","fieldName":"saveUploadedFiles","fieldParent":"64b93fe2-21f7-4703-c5a6-571a3c2b7cef","fieldPos":817,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"304D8240-E146-4374-AC2D-4306DF26DF74","restOperation":"27816E67-0E30-4317-FF99-73CDA1130E24","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"\n//*****************NEW CODE**********************\n\nlet filesData = []; //hold the file output data\n\nlet x = xhr.responseJSON;\nfilesData = x.fileResponse;\n\n/*\nupdated by : vighnesh\nupdated on : april 18, 2022\n\nAGHP-2553, 2555, 2556\n\nThe API response will fetch the files based on the upload Type.\nif files are uploaded via MATERIAL/SQA then system will bring updated files only using matInfoId & level\nif files are uploaded via SRATIONALE then system will bring updated files only for that supplierInfoId & level\n\n*/\nif (filesData && filesData.length > 0 && x.uploadType) {\n\n    switch (x.uploadType) {\n\n        case 'SRATIONALE':\n            oTableAttachmentSupplier.getModel().setData(filesData); //supplier level attachment\n            let s = oPanelSupplierInfo.getModel().getData();\n            s.attachments = filesData;\n\n            oPanelSupplierInfo.getModel().setData(s);\n\n            oPanelSupplierInfo.getModel().refresh();\n            break;\n\n        case 'MATERIAL':\n            tableMatFiles.getModel().setData(filesData);\n\n            //finding the correct material under the page supplier model\n            let matData = oTableAddMaterial.getModel().getData();\n            let ind = matData.findIndex(m => m.matInfoId.trim().toUpperCase() === x.material_ID_used.trim().toUpperCase());\n\n            matData[ind].materialAttachments = filesData;\n            oTableAddMaterial.getModel().setData(matData);\n\n            oTableAddMaterial.getModel().refresh();\n            break;\n\n\n        case 'SQA':\n            oTableSQAAttachments.getModel().setData(filesData); //SQ approvals level attachment\n\n            if (g_action === 'BATCHUPLOAD' && g_selectedRole === 'ADMIN') {\n                oTableSQAAttachmentsBU.getModel().setData(filesData); //batch upload attachement\n                oFileUploaderSQBU.setValue();\n            }\n            break;\n\n\n        default:\n            showMessageToast(g_invalid_file_uploadType);\n            break;\n\n    }\n\n    /*\n    common function to get all the counts of file attachment tables in OneASL\n    */\n    attachmentTableCount();\n\n\n} else {\n    showMessageToast(g_invalid_file_saveRes);\n}\n\n//*****************NEW CODE ENDS*****************\n\n\n/*\nsetting the file uploader empty on UI\n*/\noFileUploaderSelectRationale.setValue();\nfileUploadMat.setValue(); //-- code commented may 2, 2022 since not included in QA CR #CHG000010825314\noFileUploaderSQ.setValue();\n\n\nsap.ui.core.BusyIndicator.hide();\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr); //april 18, 2022","script":"handleErrors(xhr); //april 18, 2022","translation":[]}]},{"fieldNo":"71712c47-6cab-4a3e-8d5c-57bcd0d328a1","fieldName":"onInit","fieldParent":99999,"fieldPos":818,"fieldType":"neptune.event.oninit","script":"sap.ui.core.BusyIndicator.show(0);\nvar val; // do not remove, think its global\nif (sap.n) {\n    g_supplierId = data.supplierInfoId;\n    g_materialId = data.matInfoId;\n    g_action = (data.action).toUpperCase();\n    g_selectedRole = data.role ? (data.role).toUpperCase() : \"\";\n    g_dashboard_navItem = data.navItem;\n    g_dashboard_dashboardName = data.dashboardName;\n    g_qualificationStatus = data.qualificationStatus;\n    g_batchupload_clicked_record = data.batchData;\n    g_batchupload_selectedFilter_key = data.selectedFilterKey;\n    g_dashboard_refreshMethod = data.refreshTable\n} else {\n    /*\n    NOTE: by VIGHNESH\n    oct 10, 2021\n    if developers wants to run the supplier application on stand-alone use this block to hardcode supplier IDs & material IDS\n    */\n}\n\n\napiadGroupApprovers({}); //app process starts on ajax success of this","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"c0b5c166-acf9-49be-aeaf-9db90b2c25a2","fieldName":"DataLossConfirmation","fieldParent":99999,"fieldPos":819,"fieldType":"neptune.Script","script":"/*\r\n2021ENHANCEMENTS -- sprint 2\r\nupdated by: vighnesh\r\nupdated on: oct 28, 2021, nov 14, 2021\r\nworks for REQ, ASL, SQA & ADMIN (batch upload)\r\nfunction to check whether user has clicked on validate material to check for errors & to soft save at the material level table\r\n*/\r\nfunction isMatEdited(role) {\r\n\r\n    let buttonTxt = \"save/submit/update\";\r\n\r\n    switch (role) {\r\n\r\n        case 'REQ':\r\n            if (g_isMatEdited && btnSaveMaterial.getVisible() && btnSaveMaterial.getEnabled()) {\r\n                buttonTxt = btnSaveMaterial.getText().trim();\r\n                txtIsMatEdited.setText(\"click on \" + buttonTxt + \" to save the changes in the Material/Services Information Table \\n Any unsaved changes will be lost\");\r\n\r\n                dialogEditedMaterial.open();\r\n                return true;\r\n\r\n            } else if (g_isMatEdited && btnUpdMaterial.getVisible() && btnUpdMaterial.getEnabled()) {\r\n                buttonTxt = btnUpdMaterial.getText().trim();\r\n                txtIsMatEdited.setText(\"click on \" + buttonTxt + \" to save the udpated changes in the Material/Services Information Table \\n Any unsaved changes will be lost\");\r\n\r\n                dialogEditedMaterial.open();\r\n                return true;\r\n            }\r\n            break;\r\n\r\n        case 'ASL':\r\n        case 'SQA':\r\n        case 'ADMIN':\r\n            buttonTxt = btnUpdMaterial.getText().trim();\r\n            if (g_isMatEdited && btnUpdMaterial.getVisible() && btnUpdMaterial.getEnabled()) {\r\n                txtIsMatEdited.setText(\"click on \" + buttonTxt + \" to save the udpated changes in the Material/Services Information Table \\n Any unsaved changes will be lost\");\r\n\r\n                dialogEditedMaterial.open();\r\n                return true;\r\n            }\r\n            break;\r\n\r\n        default:\r\n            break;\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n/*\r\nfunction to check whether user has clicked on the UPDATE button once the material is validated\r\nupdated by : vighnesh\r\nupdated on: nov 3, 2021, nov 14, 2021\r\n2021ENHANCEMENTS -- 2198\r\nimplemented for batch upload as well since ADMIN can edit/update for batch upload records\r\n*/\r\nfunction checkMatDataLoss(role) {\r\n\r\n    let buttonTxt = \"save/submit/update\";\r\n    let statTxt = \"saved/submitted/updated\";\r\n\r\n    switch (role) {\r\n        case 'REQ':\r\n            if (g_matDataLoss) {\r\n                buttonTxt = btnSaveAsDraft.getText().trim() + \" / \" + btnSubmit.getText().trim();\r\n                statTxt = 'saved/submitted';\r\n                txtMatDataLoss.setText(\"Click on \" + buttonTxt + \" to save the changes \\n Any change that has been made and not \" + statTxt + \" will be lost.\");\r\n                diaMatDataLoss.open();\r\n                return true;\r\n            }\r\n            break;\r\n\r\n        case 'ASL':\r\n        case 'SQA':\r\n            if (g_matDataLoss) {\r\n                buttonTxt = btnUpdate.getText().trim();\r\n                statTxt = buttonTxt.toLowerCase() + 'd';\r\n                txtMatDataLoss.setText(\"Click on \" + buttonTxt + \" to save the changes \\n Any change that has been made and not \" + statTxt + \" will be lost.\");\r\n                diaMatDataLoss.open();\r\n                return true;\r\n            }\r\n            break;\r\n\r\n        case 'ADMIN':\r\n            if (g_matDataLoss) {\r\n                buttonTxt = btnBatchSave.getText().trim();\r\n                statTxt = 'updated';\r\n                txtMatDataLoss.setText(\"Click on \" + buttonTxt + \" to save the changes \\n Any change that has been made and not \" + statTxt + \" will be lost.\");\r\n                diaMatDataLoss.open();\r\n                return true;\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n/*\r\nfunction to check data loss on supplier & approval pages\r\nupdated by : vighnesh\r\nupdated on: nov 3, 2021, nov 14, 2021\r\n2021ENHANCEMENTS -- 2198\r\nimplemented for batch upload as well since ADMIN can edit/update for batch upload records\r\nsprint 3\r\n*/\r\nfunction checkGlobalDataLoss(role) {\r\n\r\n    let buttonTxt = \"save/submit/update\";\r\n    let statTxt = \"saved/submitted/updated\";\r\n\r\n    switch (role) {\r\n\r\n        case 'REQ':\r\n            buttonTxt = btnSaveAsDraft.getText().trim() + \" / \" + btnSubmit.getText().trim();\r\n            statTxt = 'saved/submitted';\r\n            break;\r\n\r\n\r\n        case 'ASL':\r\n        case 'SQA':\r\n            buttonTxt = btnUpdate.getText().trim();\r\n            statTxt = buttonTxt.toLowerCase() + 'd';\r\n            break;\r\n\r\n\r\n\r\n        case 'ADMIN':\r\n            buttonTxt = btnBatchSave.getText().trim();\r\n            statTxt = 'updated';\r\n            break;\r\n\r\n    }\r\n\r\n    if (g_dataLoss) {\r\n        oDialogCancel.open();\r\n        oTextDialogCancel.setText(\"Please \" + buttonTxt + \" or close this record before leaving.\" + \"\\n\" + \"Any change that has been made and not \" + statTxt + \" will be lost.\");\r\n        return true;\r\n    }\r\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"788d9826-7d26-4084-c0e5-ee64cde55513","fieldName":"Globals","fieldParent":99999,"fieldPos":820,"fieldType":"neptune.Script","script":"var parentSupplierInfoId;\nlet g_searchMatchBookToken;\n\nlet g_dialog;\nlet g_selectedRole = 'ADMIN';\nlet g_action = 'BATCHUPLOAD';\nlet g_supplierId = \"\"\nlet g_materialId = \"\"\nlet g_qualificationStatus = [];\nlet g_userSegmentQualOrg;\n\n\n/*\ndata loss global variables for supplier page, material page & confirmatio page\nglobal variable for dashboard click & batch dashboard click\nupdated by : vighnesh\nupdated on : nov 22, 2021\n2021 ENHANCEMENTS\nsprint 3\n*/\nlet g_dataLoss = false;\nlet g_isMatEdited = false;\nlet g_matDataLoss = false;\nlet g_goToDashClicked = false;\nlet g_goToBatchDashClicked = false;\n\n\n\n\nlet g_actionButton;\nlet g_mat_copybutton_pressed = false;\nlet g_mat_modified_pressed = false;\nlet g_update_approver_material_table = false;\nlet g_click_view_icon_approval = false;\nlet g_dashboard_refreshpage = new Function();\nlet g_batchupload_clicked_record;\nlet g_batchupload_selectedFilter_key;\n\n\nconst g_qualStatSQA = \"CONDITIONALLY QUALIFIED\";\nconst g_qualStatQualified = \"QUALIFIED\";\nconst g_qualStatInactive = \"QUALIFIED INACTIVE\";\nconst g_qualStatDisqualified = \"DISQUALIFIED\";\n\n\nconst g_roleNameSqa = 'SQA';\nconst g_roleNameRqc = 'RQC';\nconst g_roleNameSqaa = 'SQAA';\nconst g_roleNameAudit = 'AUDIT';\nconst g_roleNameAsl = 'ASL';\nconst g_roleNameRequester = 'REQ';\nconst g_roleNameElevated = 'ELEVATED';\n\n\nlet g_dashboard_navItem = \"\";\nlet g_dashboard_dashboardName = \"\";\n\n\nlet g_approver_before_resending_sqadata = {\n    sqaBlock: [],\n    oldData: undefined\n}\n\n\n\nvar g_users;\nif (!sap.n) {\n    g_users = {\n        email: \"systemuser@its.jnj.com\", //EMAIL\n        full_name: \"System User \", // FULL NAME\n        userId: 'systemuser' //UserID\n    };\n} else {\n    var a = AppCache.userInfo.name.split(\" [\");\n    g_users = {\n        email: AppCache.userInfo.username + \"@its.jnj.com\",\n        full_name: a.length ? a[0] : \"\",\n        userId: AppCache.userInfo.username\n    };\n}\n\n/*\nudpated by vighnesh on APRIL 8, 2022\nINC : INC000025322024\n\nwas observed that for modification at the material level due to some rendering issues, the code to make the date picker fields read only did not trigger.\n\nremediation: calling a function where we have requested Timing date picker fields ready only\n*/\nreadOnlyFields();\n\n\n/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on : nov 14, 2021\nfunction for going back to dashboard\nsprint 3 AGHP-2198\n*/\nfunction goBackToDashboard() {\n    if (sap.n) {\n\n        sap.ui.getCore().byId('AppCacheNav').back();\n\n        if (AppCache.View[\"ONEASL_SUPPLIER\"]) {\n            delete AppCache.View.ONEASL_SUPPLIER;\n        }\n\n        g_dashboard_refreshMethod();\n\n        g_matDataLoss = false;\n        g_isMatEdited = false;\n        g_dataLoss = false;\n        g_goToDashClicked = false;\n    }\n}\n\n\n\nfunction highlightSelectedRow(tabName, item) {\n    tabName.setSelectedIndex(-1);\n    if (!item) {\n        return;\n    } else if (typeof (item) === \"number\") {\n        tabName.setSelectedIndex(item);\n        return;\n    }\n\n    var rowId = item.getBindingContext().getPath().slice(1);\n    tabName.setSelectedIndex(parseInt(rowId));\n\n}\n\n\n\nfunction showMessageToast(strTitle, strMsg) {\n    oDialogShowMessageToast.setTitle(strTitle);\n    showMessageToast(strMsg);\n}\n\n\n\nfunction showMessageToast(strMsg) {\n    oDialogShowMessageToast.open();\n    if (strMsg.indexOf(\"[\") !== -1) {\n        var optText = strMsg.substring(strMsg.indexOf(\"[\") + 1, strMsg.indexOf(\"]\"));\n        var fieldsText = optText.split(\",\");\n        var strNextPart = strMsg.lastIndexOf(\"Please\") !== 0 ? strMsg.substring(strMsg.lastIndexOf(\"Please\")) : \"\";\n        strMsg = strMsg.substring(0, strMsg.indexOf(\"[\"));\n        strMsg += fieldsText.join(\"\\n\");\n        strMsg += \"\\n\\n\" + strNextPart;\n    }\n    oTextShowMessageToast.setText(strMsg);\n}\n\n\n\nfunction emailValidation(emailText, emailPatternRequired) {\n    const semiColonDelimiterPattern = /;/i;\n    const delimiter = semiColonDelimiterPattern.test(emailText) ? \";\" : \",\";\n    const emails = emailText.split(delimiter);\n    let isValidEmail = false;\n    let errorMessage = '* Invalid Email/Emails at: \\n';\n    let counter = emails.length;\n    for (let i = 0; i < emails.length; i++) {\n        const email = emails[i];\n        const emailPattern = new RegExp(emailPatternRequired, 'i');\n        const JnJEmailArray = email.split('@');\n        const validJnJEmail = emailPattern.test(email);\n        let isValidExtArray = email.split(emailPatternRequired);\n        if (JnJEmailArray[1] && validJnJEmail && isValidExtArray[1] === '') {\n            counter -= 1;\n            isValidEmail = true;\n        } else {\n            errorMessage += email;\n            isValidEmail = false;\n            break;\n        }\n    }\n    if (counter === 0) {\n        errorMessage = '';\n    } else {\n        errorMessage += '\\n';\n    }\n    const emailMessageObj = {\n        errorMessage,\n        validEmail: isValidEmail\n    }\n    return emailMessageObj;\n}\n\n\n/*\nNOTE: function to reset fields on supplier page\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 16, 2021; OCT 17, 2021, nov 22, 2021\nremoved unwanted comments, refactored the code & set the data loss to true since user cleared off existing values\n*/\nfunction resetEntries() {\n\n    //supplier tab \n    if (oIconTabBarSupplierInfo.getSelectedKey() === oIconTabFilterSupplierInfo.getKey()) {\n        //req time sup ASL\n        oInputReqTime.setDateValue();\n        oInputReqTime.setValueState(\"None\");\n        oInputReqTime.removeStyleClass(\"error\");\n        oInputReqTime.addStyleClass(\"reqTiming\");\n\n\n        //supplier name\n        oInputSupplierName.setValue();\n        oInputSupplierName.setValueState(\"None\");\n        oInputSupplierName.removeStyleClass(\"error\");\n        oInputSupplierName.addStyleClass(\"inputfield\");\n\n        oInputDUNS.setValue();\n\n        //supplier reason for ADD\n        txtSupReaAddMod.setValue();\n        labRemSupResAddMod.setText();\n        txtSupReaAddMod.setValueState(\"None\");\n        txtSupReaAddMod.removeStyleClass(\"error\");\n        txtSupReaAddMod.removeStyleClass(\"warning\");\n        txtSupReaAddMod.addStyleClass(\"textbox\");\n        txtSupReaAddMod.setValueStateText();\n\n        //selection rationale\n        txtSelRationale.setValue();\n        labRemCountSelRationale.setText();\n        txtSelRationale.setValueState(\"None\");\n        txtSelRationale.removeStyleClass(\"warning\");\n        txtSelRationale.addStyleClass(\"textbox\");\n        txtSelRationale.setValueStateText();\n\n\n        //street\n        oInputSupplierStreet.setValue();\n        oInputSupplierStreet.setValueState(\"None\");\n        oInputSupplierStreet.removeStyleClass(\"error\");\n        oInputSupplierStreet.addStyleClass(\"inputfield\");\n\n        //country\n        oInputSupplierCountry.setValue();\n        oInputSupplierCountry.setValueState(\"None\");\n        oInputSupplierCountry.removeStyleClass(\"error\");\n        oInputSupplierCountry.addStyleClass(\"inputfield\");\n\n        //city\n        oInputSupplierCity.setValue();\n        oInputSupplierCity.setValueState(\"None\");\n        oInputSupplierCity.removeStyleClass(\"error\");\n        oInputSupplierCity.addStyleClass(\"inputfield\");\n\n        //PIN\n        oInputSupplierPIN.setValue();\n        oInputSupplierPIN.setValueState(\"None\");\n        oInputSupplierPIN.removeStyleClass(\"error\");\n        oInputSupplierPIN.addStyleClass(\"inputfield\");\n\n        //region\n        oInputSupplieRegion.setValue();\n\n        //location type\n        oComboBoxLocationType.setSelectedKeys();\n\n        //supplier contact\n        supplierClearInput();\n    }\n\n    /*when reset button in material tab is clicked**/\n    else if (oIconTabBarSupplierInfo.getSelectedKey() === oIconTabFilterMaterialnfo.getKey()) {\n\n        resetMaterialFields();\n\n        //approval tab reset\n    } else if (oIconTabBarSupplierInfo.getSelectedKey() === oIconTabFilterApprovers.getKey()) {\n\n        resetApproverTab();\n    }\n}\n\n\n\n\n/*function to handle Errors throughout the application*/\nfunction handleErrors(xhr, status) {\n    var statusCode = xhr.status;\n    if (statusCode === 401) {\n        showMessageToast(\"You are not authorized to perform. Possible reasons: Session timed out.\");\n        setTimeout(function () {\n            location.reload();\n        }, 3000);\n    } else if (statusCode === 500) {\n        showMessageToast(\"Internal Server Error. Please contact system admin.\");\n    } else if (statusCode === 502) {\n        showMessageToast(\"Bad Gateway. Invalid response received. Please contact system admin.\");\n    } else if (statusCode === 503) {\n        showMessageToast(\"Service Unavailable. Please contact system admin.\");\n    } else if (statusCode === 504) {\n        showMessageToast(\"Gateway Timedout. Please contact system admin.\");\n    } else if (statusCode > 401 && statusCode < 512) {\n        showMessageToast(\"Generic Error. Please contact system admin.\");\n    }\n\n    sap.ui.core.BusyIndicator.hide();\n\n\n}\n\n\n\nfunction afterGetADGroups() {\n\n    readOnlyComboBoxes(); //2021ENHANCEMENTS -- added jan 5, 2022 -- read only drop downs\n\n    getRolesDemo();\n    apiquestionDescription();\n    apiadminConfig();\n\n    /*\n    updated by : vighnesh on may 25, 2022\n    */\n    fetch_err_msgs(); //global function to call API to fetch all OneASL error messages\n\n    ajaxGetS3ConfigDetails();\n    apioRestAPIHelpTexts({});\n    multiInputEmailVal();\n\n}\n\n\n/*\nNOTE: function to set date & time in GMT format for confirmed date fields at approval level\nUPDATED : VIGHNESH\nUPDATED ON: SEPT 16, 2021\n*/\nfunction setDateTime() {\n    let rawGMT = new Date().toUTCString();\n    rawGMT = rawGMT.substring(\"5\");\n    return rawGMT;\n}\n\n\n/**function to clear character remaining count*/\nfunction clearRemCountLabel() {\n    labRemCountAuditStRegSQ.setText();\n    labRemCountAuditComSQ.setText();\n    labQualRationRemCount.setText();\n    labRemCountRQCCom.setText();\n    labRemCountSQAACom.setText();\n    labRemCountAudit.setText();\n    labRemCountSecApp.setText();\n}\n\n\n/*\nNOTE: function to set Date on the supplier & Material Requester panel\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 16, 2021\n*/\nfunction setDate() {\n    const d = new Date();\n    return (d.getMonth() + 1 + '/' + d.getDate() + '/' + d.getFullYear());\n}\n\n\n\n/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nudpated on : feb 1, 2022, april 8, 2022\n\nINC INC000024999261 remediation\ndefect AGHP-2506 fix\n\nit was observed that the controls were not switching the read only, so created a function & called them globally & wherever needed\n*/\nfunction readOnlyFields() {\n\n    //REQ TIME ASL\n    oInputReqTime.addEventDelegate({\n        onAfterRendering: function () {\n            oInputReqTime.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //REQ TIME MATERIAL\n    oInputMatReqTime.addEventDelegate({\n        onAfterRendering: function () {\n            oInputMatReqTime.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n}","customComponent":false,"filePath":"globals","request":[],"response":[],"attributes":[]},{"fieldNo":"4c3b9701-bcdc-40c5-8f10-86c2ddd72d56","fieldName":"ApplyData","fieldParent":99999,"fieldPos":821,"fieldType":"neptune.Script","script":"/*\n2021ENHANCEMENTS\nupdated by: Vighnesh\nupdated on: oct 18, 2021\n*/\nfunction applyData(res) {\n    /*Change Model Data values*/\n \n    var flag;\n    var supAttachments = [];\n\n    if (res.finalResponse) {\n        if (g_action === \"VIEW\") {\n            flag = false;\n            oBarFooter.setVisible(false);\n        } else if (g_action === \"MODIFY\") {\n            flag = flag = g_materialId === \"\" ? true : false;\n            oBarFooter.setVisible(true);\n            /*when the requester selects ADD SUPPLIER button on the dashboard page*/\n        } else if (g_action === \"COPY\") {\n            flag = g_materialId === \"\" ? true : false;\n            oBarFooter.setVisible(true);\n        } else if (g_action === \"EDIT\") {\n            flag = true;\n            oBarFooter.setVisible(true);\n        } else if (g_action === \"BATCHUPLOAD\") {\n            flag = true;\n            btnBatchSave.setVisible(true);\n            colMatIdA.setVisible(true);\n            colMatId.setVisible(true);\n        } else if (g_action === \"ADD\") {\n            resetEntries();\n            supplierEnableFields(true);\n            supplierTableCount();\n            attachmentTableCount();\n            countMaterial();\n            hboxSupAttachment.setVisible(false);\n\n            oTextReqName.setText(g_users.full_name);\n            oTextReqEmail.setText(g_users.email);\n            oTextReqDate.setText(setDate());\n            oTextReqType.setText('ADD');\n            oTextReqSupID.setText();\n            txtReqSupStaticID.setText(); //2021ENHANCEMENTS -- sprint 2\n            oBarFooter.setVisible(true);\n\n            oIconTabBarSupplierInfo.fireSelect();\n            sap.ui.core.BusyIndicator.hide();\n            if (sap.n) {\n                AppCacheNav.setBusy(false);\n            }\n\n            return;\n            /*******************Exits the below code from here if action is ADD **********************************/\n        }\n    }\n\n\n\n    OriginalData.getModel().setData(JSON.parse(JSON.stringify(res.finalResponse)));\n\n    if (g_supplierId === \"\") {\n        g_supplierId = res.finalResponse.supplierInfoId;\n    }\n\n\n    //over ride requesterName on copy modify only at supplier level\n    if ((res.finalResponse.requesterName === \"\" || res.finalResponse.requestDate === \"\") &&\n        ((g_action === \"COPY\" || g_action === \"MODIFY\") && g_materialId === \"\")) {\n\n        if (sap.n) {\n            res.finalResponse.requesterName = g_users.full_name; //AppCache.userInfo.username;\n            res.finalResponse.requesterEmail = AppCache.userInfo.username + \"@its.jnj.com\";\n\n        } else {\n            res.finalResponse.requesterName = g_users.name;\n            res.finalResponse.requesterEmail = g_users.email;\n        }\n        res.finalResponse.requestDate = setDate();\n    }\n\n    if ((g_action === 'MODIFY' || g_action === 'COPY')) { // && g_materialId === \"\") {\n\n        //If supplierInfoId is not defined. Clear the global supplier Id value\n        if (!res.finalResponse.supplierInfoId) {\n            g_supplierId = \"\";\n        }\n\n        res.finalResponse.Materials.forEach(mRec => {\n            if ((!mRec.materialRequesterName || mRec.materialRequesterName === \"\")) {\n                mRec.materialRequesterName = g_users.full_name;\n                mRec.materialRequesterEmail = g_users.email;\n                mRec.materialRequestDate = setDate();\n                mRec.materialTypeOfRequest = g_action === 'COPY' ? 'ADD' : 'MODIFY';\n                mRec.materialRequestedTimeOnASL = setDate();\n               // mRec.materialRequestedTimeOnASL = new Date().toLocaleDateString();\n            }\n        });\n\n    }\n\n    /*\n    SUPPLIER INFORMATION TAB FIELDS SHOULD BE DISABLED FOR FOLLOWING CONDITIONS\n    - VIEW MODE \n    - FOR ALL ROLES EXCEPT REQ AND ASL\n    - IF MATERIAL ID IS PASSED ON COPY/MODIFY \n    - FOR QUALIFIED MATERIALS \n    - IF APPROVER CONFIRMS ANY ONE OF THE MATERIAL\n    - IF RETURN TO REQ IS DONE\n   //Logic is transferred to server-script from 05/27 onwards \n   */\n\n\n    res.finalResponse.custom_field_editable = res.finalResponse.supplierFieldsEditFlag;\n    flag = res.finalResponse.custom_field_editable;\n\n\n\n    /*Buttons on table visibility*/\n    if (g_action !== 'BATCHUPLOAD') {\n\n        for (var i = 0; i < res.finalResponse.Materials.length; i++) {\n\n            if (g_action !== 'VIEW') {\n\n\n                res.finalResponse.Materials[i].custom_field_t_editable = true;\n\n                if (g_selectedRole !== 'REQ') {\n                    // res.finalResponse.editFlag\n                    var jnjtext = res.finalResponse.Materials[i].jnjSegment + res.finalResponse.Materials[i].jnjOrg;\n                    if ((g_userSegmentQualOrg.includes(jnjtext)) &&\n                        res.finalResponse.Materials[i].editFlag &&\n                        g_action !== 'VIEW') {\n                        res.finalResponse.Materials[i].editFlag = true;\n                    } else if ((g_userSegmentQualOrg.includes(jnjtext)) &&\n                        res.finalResponse.Materials[i].selectionFlag &&\n                        g_action !== 'VIEW') {\n                        res.finalResponse.Materials[i].selectionFlag = true;\n                    } else {\n                        res.finalResponse.Materials[i].editFlag = false;\n                        res.finalResponse.Materials[i].selectionFlag = false;\n                    }\n                }\n            } else {\n                res.finalResponse.Materials[i].custom_field_t_editable = false;\n            }\n\n            res.finalResponse.Materials[i].custom_field_t_userrole = g_selectedRole;\n\n\n        }\n    }\n\n    /*\n    2022ENHANCEMENTS\n    updated by : vighnesh on april 18, 2022\n\n    AGHP-2556\n\n    changed the key name since updated in the script.\n    */\n    for (var i = 0; i < res.finalResponse.attachments.length; i++) {\n        if (res.finalResponse.attachments[i].file_groupId === 'SRATIONALE') {\n            supAttachments.push(res.finalResponse.attachments[i]);\n        }\n    }\n\n    if (res.finalResponse.locationType && typeof (res.finalResponse.locationType) === \"string\") {\n        res.finalResponse.locationType = res.finalResponse.locationType.split(',');\n    }\n\n    oComboBoxLocationType.setSelectedKeys(res.finalResponse.locationType);\n\n\n    /*Storing Model data in temp object. This will not Clear/Change the HEADER entries \n    on reset\n    */\n    var tempData = JSON.parse(JSON.stringify(res.finalResponse));\n    var tempModel = new sap.ui.model.json.JSONModel(tempData);\n    oPanelReqInfo.setModel(tempModel);\n\n    /*Model Data*/\n    pageSupplier.getModel().setData(tempData);\n\n    oPanelSupplierInfo.getModel().setData(res.finalResponse);\n    oPanelSupplierAddress.getModel().setData(res.finalResponse);\n    oPanelSupplierLocationTyp.getModel().setData(res.finalResponse);\n    oPanelSelectionRationale.getModel().setData(res.finalResponse);\n\n    //Model for tables is set in Designer\n    oTableAddMaterial.getModel().setData(res.finalResponse.Materials);\n    oTableSupplierContactInfo.getModel().setData(res.finalResponse.supplierContact);\n    oTableAttachmentSupplier.getModel().setData(supAttachments);\n\n\n    /*Removing DRAFT records from material response to set it on approvers tab */\n    var approverData = JSON.parse(JSON.stringify(res.finalResponse.Materials));\n\n    for (var a = 0; a < approverData.length; a++) {\n        if (approverData[a].qualificationStatus === 'DRAFT') {\n            approverData.splice(a, 1);\n        }\n    }\n\n    oTableApprovers.getModel().setData(approverData);\n\n    //Count \n    countMaterial();\n    attachmentTableCount();\n    supplierTableCount();\n    approverMatCount();\n\n    /*If material Item is selected Jump to Material Tab and open the first default Item*/\n    if (g_materialId !== \"\" && (g_action === \"COPY\" || g_action === \"MODIFY\")) {\n\n        var mData = oTableAddMaterial.getModel().getData();\n        for (var i = 0; i < mData.length; i++) {\n            if (mData[i].copiedRecordFlag && mData[i].copiedRecordFlag === true) {\n\n                if (g_action === 'COPY') {\n                    g_mat_copybutton_pressed = true;\n                } else if (g_action === 'MODIFY') {\n                    g_mat_modified_pressed = true;\n                }\n                materialTableEdit_View(mData[i], true, g_action, i);\n                break;\n            }\n        }\n\n        oIconTabBarSupplierInfo.setSelectedKey('MATTAB');\n\n    } else if (g_materialId !== \"\" && g_action === \"BATCHUPLOAD\") {\n\n        var mData = ModelData.FindFirst(oTableAddMaterial, \"matInfoId\", g_materialId);\n        if (mData) {\n            setTimeout(function () {\n                materialTableEdit_View(mData, true, 'EDIT', i);\n            }, 500);\n        }\n        oIconTabBarSupplierInfo.setSelectedKey('MATTAB');\n\n\n    } else if (oIconTabBarSupplierInfo.getSelectedKey() !== \"\") {\n        oIconTabBarSupplierInfo.setSelectedKey(oIconTabBarSupplierInfo.getSelectedKey());\n    } else {\n        oIconTabBarSupplierInfo.setSelectedKey('SUPPTAB');\n    }\n\n    oIconTabBarSupplierInfo.fireSelect();\n\n    /*UI modifications*/\n    oColumnDelAttach.setVisible(flag);\n    supplierEnableFields(flag);\n\n\n    if (res.finalResponse.supplierInfoId && res.finalResponse.supplierInfoId !== \"\" && (g_action !== \"COPY\" || g_action !== \"MODIFY\")) {\n        hboxSupAttachment.setVisible(flag);\n    } else {\n        hboxSupAttachment.setVisible(false);\n    }\n\n    if (res.modifiedFields) {\n        highlightChangedFieldsSupplier(res.modifiedFields);\n        ChangedFields.getModel().setData(res.modifiedFields);\n    }\n\n\n    //Refresh All models\n    /*Model Data*/\n    pageSupplier.getModel().refresh();\n\n    oPanelSupplierInfo.getModel().refresh();\n    oPanelSupplierAddress.getModel().refresh();\n    oPanelSupplierLocationTyp.getModel().refresh();\n    oPanelSelectionRationale.getModel().refresh();\n\n    //Model for tables is set in Designer\n    // oTablePurchaseSys.getModel().refresh()05/01 PREM\n    oTableAddMaterial.getModel().refresh();\n    // oTableLinkLocations.getModel().refresh()  05/01 - VIGHNESH\n    oTableSupplierContactInfo.getModel().refresh()\n    oTableAttachmentSupplier.getModel().refresh()\n\n    oTableApprovers.getModel().refresh()\n\n\n\n    //Show Busy - a bit longer\n    setTimeout(function () {\n        sap.ui.core.BusyIndicator.hide();\n        if (sap.n) {\n            AppCacheNav.setBusy(false);\n        }\n    }, 500);\n\n\n\n}","customComponent":false,"filePath":"ojavascript","request":[],"response":[],"attributes":[]},{"fieldNo":"375a2fb8-01ac-4c7e-a58a-945c4c44575f","fieldName":"HighlightChangedFields","fieldParent":99999,"fieldPos":822,"fieldType":"neptune.Script","script":"let g_current_highlightedFields = [];\n\nconst g_referenceForInputs_S = {\n    //Supplier tab\n    'requestedTimeOnASL': oInputReqTime,\n    'supplierName': oInputSupplierName,\n    'dunsNumber': oInputDUNS,\n    'reasonForAddModi': txtSupReaAddMod,\n    'supplierAddressStreet': oInputSupplierStreet,\n    'supplierAddressCountry': oInputSupplierCountry,\n    'supplierAddressCity': oInputSupplierCity,\n    'supplierAddressPIN': oInputSupplierPIN,\n    'supplierAddressState': oInputSupplieRegion,\n    'locationType': oComboBoxLocationType,\n    'firstName': oInputSupplierContactInfofName,\n    'websiteLink': oInputSupplierContactInfoWlink,\n    'lastName': oInputSupplierContactInfoLName,\n    'phone': oInputSupplierContactInfoPhNum,\n    'email': oInputSupplierContactInfoemail,\n    'selectionRationale': txtSelRationale\n};\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nudpated by: vighnesh\nupdated on: nov 1, 2021\n*/\nconst g_referenceForInputs_M = {\n    //Material Tab\n    'supplierType': oComboBoxSupplierType,\n    'riskCatgGroup': oComboBoxRiskCatgGroup,\n    'criticalityLevel': oComboBoxCriticalityLevel,\n    'OemSupplier': oComboBoxOEM,\n    'reasonForAddModi': txtMatReaAddMod,\n    'clRationale': txtCLRationale,\n    'productPartDesc': txtPrdPartDesc,\n    'crucialSupplierStatus': oComboBoxCrucialSupplierStatus,\n    'criticalSubContStatus': oComboBoxCriticalSubContStatus,\n    'overrideComment': txtOverrideCom,\n    'jnjSegment': oComboBoxSegment,\n    'jnjOrg': oComboBoxQualOrg,\n    'jnjOpComp': oComboBoxOpComp,\n    'jnjSite': oComboBoxjnjSite,\n    'jnjRegion': oComboBoxjnjRegion,\n    'jnjSourcingContact': oMultiInputSrcContact,\n    'jnjSupplierLiason': oMultiInputProContactM,\n    'jnjQualityContact': oMultiInputQualContact,\n    'materialRequestedTimeOnASL': oInputMatReqTime\n    // 'purchasingSysId': txtPurchaseSysID,\n    // 'purchasingSysName': txtPurSysName,\n    // 'locationAddress': txtLocationAddress\n};\n\nfunction highlightChangedFieldsSupplier(changedData) {\n\n    if (!changedData.supplierFields) {\n        return;\n    }\n\n    //Clear All Supplier Fields\n    for (var s in g_referenceForInputs_S) {\n        if (g_referenceForInputs_S[s]) {\n            g_referenceForInputs_S[s].removeStyleClass('highlightInnerInput');\n        }\n    }\n\n\n\n    var cFields = changedData.supplierFields || [];\n    cFields.forEach((inp) => {\n        if (g_referenceForInputs_S[inp]) {\n            g_referenceForInputs_S[inp].addStyleClass('highlightInnerInput');\n        }\n    });\n}\n\nfunction highlightChangedFieldsMaterial(mat) {\n    clearHighlightedFields();\n\n    var changedData = ChangedFields.getModel().getData();\n\n    if (changedData.modifiedFields && !changedData.modifiedFields.Materials) {\n        return;\n    }\n    var cMats = changedData.Materials || [];\n    var cFields = [];\n    for (var keyData of cMats) {\n        if (keyData.matInfoId === mat) {\n            cFields = keyData.changedMaterialFields;\n            break;\n        }\n    }\n    cFields.forEach((inp) => {\n        if (g_referenceForInputs_M[inp]) {\n            g_referenceForInputs_M[inp].addStyleClass('highlightInnerInput');\n        }\n    });\n\n    g_current_highlightedFields = cFields;\n}\n\nfunction clearHighlightedFields() {\n\n    if (!g_current_highlightedFields) {\n        return;\n    }\n\n    g_current_highlightedFields.forEach((inp) => {\n        if (g_referenceForInputs_M[inp]) {\n            g_referenceForInputs_M[inp].removeStyleClass('highlightInnerInput');\n        }\n    });\n    g_current_highlightedFields = [];\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"1b4221d6-d55d-49ce-b316-a3d7c4190fe7","fieldName":"Roles","fieldParent":99999,"fieldPos":823,"fieldType":"neptune.Script","script":"let g_currentUserRoles = [];\n\nfunction getRolesDemo() {\n\n    // /*05/25 TEMP DISABLED\n    let dbADApprovers = modelADGroupApprovers.getData().records;\n    for (var i in dbADApprovers) {\n\n        if (dbADApprovers[i].userEmails !== \"\") {\n            var adEmail = JSON.parse(dbADApprovers[i].userEmails);\n            var hasUserEmail = adEmail.find(element => ((element.email).toUpperCase()) === (g_users.email).toUpperCase());\n\n            if (hasUserEmail) {\n                var o = {\n                    role: dbADApprovers[i].role_key,\n                    segment: dbADApprovers[i].segment,\n                    qualOrg: dbADApprovers[i].qualityOrg\n                }\n                g_currentUserRoles.push(o);\n            }\n        }\n    }\n    var userActiveRole = [];\n\n    if (g_currentUserRoles) {\n        for (var j = 0; j < g_currentUserRoles.length; j++) {\n            if (g_selectedRole !== \"REQ\" && g_currentUserRoles[j].role === g_selectedRole) {\n\n                var s = g_currentUserRoles[j].segment + g_currentUserRoles[j].qualOrg;\n                userActiveRole.push(s);\n\n            }\n        }\n    }\n\n    g_userSegmentQualOrg = userActiveRole.toString();\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"a45052cf-3076-41ea-b21b-ab5e54c86a53","fieldName":"BatchUpload","fieldParent":99999,"fieldPos":824,"fieldType":"neptune.Script","script":"function validateBatchRecord() {\n\n    var ErrFlag = true;\n\n    if (g_action !== 'BATCHUPLOAD' && g_selectedRole !== 'ADMIN') {\n        return;\n    }\n\n    var Supplier_errorObj = {\n        ...checkMandatoryFieldsSupplierSubmit()\n    };\n    if (Supplier_errorObj.errorStatus === true) {\n        return;\n    }\n\n\n\n    updateBatchSupplierRecord();\n    let myBatchData = JSON.parse(JSON.stringify(g_batchupload_clicked_record.finalResponse));\n\n    var errorMsg = [];\n\n\n    //Prepare Error Messages \n    if (myBatchData.custom_missingfields_data.length > 0) {\n        errorMsg.push(\"\\n Supplier Information\");\n        myBatchData.custom_missingfields_data.forEach((lineItem, ind) => {\n            errorMsg.push(\"\\n\" + (ind + 1) + '. ' + lineItem.cellName + ' - ' + lineItem.message);\n        });\n        errorMsg.push(\"\\n\");\n    }\n\n\n    for (var m = 0; m < myBatchData.Materials.length; m++) {\n\n        var mData = myBatchData.Materials[m];\n\n        if (mData.custom_missingfields_data.length > 0) {\n            errorMsg.push(\"\\n\" + mData.matInfoId);\n            mData.custom_missingfields_data.forEach((lineItem, ind) => {\n\n                errorMsg.push(\"\\n\" + (ind + 1) + '. ' + lineItem.cellName + ' - ' + lineItem.message);\n            });\n\n            errorMsg.push(\"\\n\");\n        }\n\n    }\n\n    if (errorMsg.length > 0) {\n        let err = \"\";\n        errorMsg = (errorMsg.toString()).replace(/,/g, \" \");\n        err += \"Please address the following fields : \\n \" + errorMsg + \"\\n\" + \"\\n\" + \" to update completely the batch record \\n\";\n        showMessageToast(err);\n\n    } else {\n        var options = {\n            data: {\n                action: 'UPDATE',\n                record: g_batchupload_clicked_record.finalResponse,\n                userId: 'batchsystem'//g_users.userId\n            }\n        };\n\n        apiupdateBatchStagingItems(options);\n    }\n\n}\n\n/*\n2021ENHANCEMENTS sprint 3\nupdated by : vighnesh\nupdated on : nov 14, 2021\nremoved unwanted comments\n*/\nfunction saveBatchAttachments(attachObj) {\n\n    if (!attachObj) {\n        return;\n    }\n\n    let myBatchData = JSON.parse(JSON.stringify(g_batchupload_clicked_record.finalResponse));\n\n\n    if (attachObj.matInfoId) {\n\n        var materialData = myBatchData.Materials.find(element => element.matInfoId === attachObj.matInfoId);\n        var materialToBeChangedIndex = myBatchData.Materials.findIndex(element => element.matInfoId === attachObj.matInfoId);\n\n        materialData.attachments.push(attachObj);\n\n        myBatchData.Materials[materialToBeChangedIndex].attachments = JSON.parse(JSON.stringify(materialData.attachments));\n\n        oFileUploaderSQBU.setValue();\n        oTableSQAAttachmentsBU.getModel().setData(materialData.attachments);\n\n    } else {\n\n        myBatchData.attachments.push(attachObj);\n\n\n        oTableAttachmentSupplier.getModel().setData(myBatchData.attachments);\n        oFileUploaderSelectRationale.setValue();\n        oFileUploaderSQ.setValue();\n\n    }\n\n    attachmentTableCount(); //april 19, 2022\n\n\n    sap.ui.core.BusyIndicator.hide();\n\n\n    g_batchupload_clicked_record.finalResponse = JSON.parse(JSON.stringify(myBatchData));\n    oTableSQAAttachmentsBU.setVisible(true);\n\n}\n\n\n/*\n2021ENHANCEMENTS sprint 3\nupdated by : vighnesh\nupdated on : nov 14, 2021\nremoved unwanted comments\n*/\nfunction updateBatchSupplierRecord() {\n    if (g_action !== 'BATCHUPLOAD' && g_selectedRole !== 'ADMIN') {\n        return;\n    }\n\n    let myBatchData = JSON.parse(JSON.stringify(g_batchupload_clicked_record.finalResponse));\n    var newSupplierData = oPanelSupplierInfo.getModel().getData();\n\n\n    for (var s in newSupplierData) {\n        if (myBatchData.hasOwnProperty(s)) {\n            if (s !== 'Materials' && s != 'attachments' && s !== 'supplierContact') {\n                myBatchData[s] = newSupplierData[s];\n            }\n        }\n    }\n\n    //Delete all error messages for supplier\n    myBatchData.custom_validation_status = 'VALID';\n    myBatchData.custom_validation_ui = \"sap-icon://accept\";\n    myBatchData.custom_validation_count = 0;\n    myBatchData.custom_missingfields_data = [];\n\n    g_batchupload_clicked_record.finalResponse = JSON.parse(JSON.stringify(myBatchData));\n\n\n}\n\n\n\n/*\n2021ENHANCEMENTS sprint 3\nupdated by : vighnesh\nupdated on : nov 14, 2021\nremoved unwanted comments\n*/\nfunction updateBatchMaterialRecord(tabName, newMData) {\n    if (g_action !== 'BATCHUPLOAD' && g_selectedRole !== 'ADMIN') {\n        return;\n    }\n    let myBatchData = JSON.parse(JSON.stringify(g_batchupload_clicked_record.finalResponse));\n    let myTreeMatData;\n    let filteredErrorMessage;\n    let tableToUpdate;\n    let materialToBeChangedIndex;\n\n\n    if (tabName === 'APPROVERTAB' && !newMData) {\n        let newApproverData = oDialogBU.getModel().getData();\n        let errFlagApprover = false;\n        let errorApprovers = [];\n\n\n        //Missing entries valitation\n        newApproverData.audit_auditConfirm = newApproverData.sqagroup_auditRequired;\n        newApproverData.sqagreement_sqaaConfirmation = (newApproverData.sqagroup_sqaaRequired && !(newApproverData.sqagroup_existForSegment));\n        newApproverData.regulatory_regulConf = newApproverData.sqagroup_rqcContact;\n        newApproverData.elevated_elevatedApprovConf = true; //Always Mandatory\n\n\n        newMData = approverBatchMaterialInfo.getModel().getData();\n\n        myTreeMatData = myBatchData.Materials.find(element => element.matInfoId === newMData.matInfoId);\n        materialToBeChangedIndex = myBatchData.Materials.findIndex(element => element.matInfoId === newMData.matInfoId);\n        //ADD ALL MATERIALTAB ERROR FIELDS HERE\n        filteredErrorMessage = myTreeMatData.custom_missingfields_data.filter(element => element.messageFor === 'MATERIALTAB');\n\n\n        myTreeMatData.qualificationStatus = newApproverData.sqagroup_qualificationStatus;\n\n        myTreeMatData.approvalData = newApproverData;\n        myTreeMatData.attachments = oTableSQAAttachmentsBU.getModel().getData();\n\n        tableToUpdate = oTableAddMaterial;\n    } else {\n        myTreeMatData = JSON.parse(JSON.stringify(myBatchData.Materials.find(element => element.matInfoId === newMData.matInfoId)));\n        materialToBeChangedIndex = myBatchData.Materials.findIndex(element => element.matInfoId === newMData.matInfoId);\n\n        //Replace batch tree Materials Data with updated material data and \n        if (myTreeMatData) {\n            for (let keyNames in myTreeMatData) {\n                if (newMData.hasOwnProperty(keyNames)) {\n                    myTreeMatData[keyNames] = newMData[keyNames];\n                }\n            }\n\n            //delete all the error messages for this material under MATERIALTAB key \n            filteredErrorMessage = (JSON.parse(JSON.stringify(myTreeMatData.custom_missingfields_data)));\n            filteredErrorMessage = filteredErrorMessage.filter(element => element.messageFor === 'APPROVERTAB');\n\n        }\n        tableToUpdate = oTableApprovers;\n\n    }\n\n    myTreeMatData.custom_missingfields_data = filteredErrorMessage;\n    myTreeMatData.custom_validation_count = filteredErrorMessage.length;\n\n    if (filteredErrorMessage.length === 0) {\n        myTreeMatData.custom_validation_status = 'VALID';\n        myTreeMatData.custom_validation_ui = \"sap-icon://accept\";\n    }\n\n\n    g_batchupload_clicked_record.finalResponse.Materials[materialToBeChangedIndex] = JSON.parse(JSON.stringify(myTreeMatData));\n\n    ModelData.Update(oTableAddMaterial, \"matInfoId\", myTreeMatData.matInfoId, myTreeMatData);\n    ModelData.Update(oTableApprovers, \"matInfoId\", myTreeMatData.matInfoId, myTreeMatData);\n\n\n    oDialogBU.close()\n\n}\n\n\n/*\n2021ENHANCEMENTS sprint 3\nupdated by : vighnesh\nupdated on : nov 14, 2021\nremoved unwanted comments\n*/\nfunction saveSupplierBatchRecord() {\n    sap.ui.core.BusyIndicator.show(0);\n    var options;\n    if (g_batchupload_clicked_record.Materials.length === 0) {\n\n        options = {\n            data: {\n                action: 'CLEAR',\n                record: g_batchupload_clicked_record,\n                userId: g_users.userId\n            }\n        };\n\n    } else {\n        options = {\n            data: {\n                action: 'UPDATE',\n                record: g_batchupload_clicked_record,\n                userId: g_users.userId\n            }\n        };\n    }\n\n\n\n\n    apiupdateStagingItems(options);\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"272005f6-9f2b-4468-c476-ce829a4a3162","fieldName":"TablesJS","fieldParent":99999,"fieldPos":825,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"c9261571-5ee3-4d49-e837-86a3a10a9af7","fieldName":"DeleteTableData","fieldParent":"272005f6-9f2b-4468-c476-ce829a4a3162","fieldPos":826,"fieldType":"neptune.Script","script":"function ajaxDeleteExistingRowId(tableId, tableName, rowData, matData) {\n\n    var sData = pageSupplier.getModel().getData();\n\n    var options = {\n        data: {\n            \"tableRowId\": tableId,\n            \"tableName\": tableName,\n            \"rowData\": rowData,\n            \"matInfoId\": matData && matData.matInfoId ? matData.matInfoId : \"\",\n            \"materialRecordId\": matData && matData.materialRecordId ? matData.materialRecordId : \"\",\n            \"parentMaterialInfoId\": matData && matData.parentMaterialInfoId ? matData.parentMaterialInfoId : \"\",\n            \"qualificationStatus\": matData && matData.qualificationStatus ? matData.qualificationStatus : \"\",\n            \"typeofRequest\": sData.typeOfRequest,\n            \"supplierInfoId\": sData.supplierInfoId,\n            \"supplierRecordId\": sData.supplierRecordId,\n            \"parentSupplierInfoId\": sData.parentSupplierInfoId,\n            \"userId\": g_users.userId,\n            \"userName\": g_users.full_name,\n            \"role\": g_selectedRole,\n            \"labelObj\": {\n                purchasingSysName: oColumnPurchaseSysName.getLabel().getText(),\n                purchasingSysId: oColumnPurchaseSysId.getLabel().getText(),\n                locationAddress: oColumnLOCATION.getLabel().getText(),\n                firstName: oColumnSupContactFName.getLabel().getText(),\n                lastName: oColumnSupContactLName.getLabel().getText(),\n                phone: oColumnSupContactPhone.getLabel().getText(),\n                email: oColumnSupContactEmail.getLabel().getText(),\n                websiteLink: oColumnSupContactWeb.getLabel().getText(),\n            }\n        }\n\n    };\n\n\n    sap.ui.core.BusyIndicator.show(0)\n\n    apioRestAPIDeleteSupplierInfoTables(options);\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"301d84a7-80d6-430b-b40f-3754875852a9","fieldName":"ApproverTableJS","fieldParent":"272005f6-9f2b-4468-c476-ce829a4a3162","fieldPos":827,"fieldType":"neptune.Script","script":"const txt_amcount = \"MATERIALS / SERVICES INFORMATION: \";\n\nfunction approverMatCount() {\n    var rowsCount = oTableApprovers.getModel().getData();\n\n    if (rowsCount) {\n        rowsCount = rowsCount.length;\n    } else {\n        rowsCount = 0;\n    }\n\n    if (rowsCount === 0) {\n        oTableApprovers.setVisible(false);\n    } else {\n        oTableApprovers.setVisible(true);\n    }\n    oTextApproverHeader.setText(txt_amcount + rowsCount);\n    rowsCount = rowsCount <= 5 ? rowsCount : 5;\n\n    oTableApprovers.setVisibleRowCount(rowsCount);\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"5e2e31c3-1fdc-4a2a-ba20-6b0b8278f456","fieldName":"AttachmentTableJS","fieldParent":"272005f6-9f2b-4468-c476-ce829a4a3162","fieldPos":828,"fieldType":"neptune.Script","script":"var g_s3BucketName;\nvar g_s3IdentityPoolId;\nAWS.config.region = 'us-east-1';\n\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by : vighnesh on nov28, 2021, april 18, 2022\n2553, 2555, 2556\nremoved comments\n*/\nfunction ajaxGetS3ConfigDetails() {\n    apigetS3UploadDetails();\n}\n\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by : vighnesh on nov28, 2021\nremoved comments\n\nudpated on : april 18, 2022\n\nAGHP-2553, 2555, 2556\n*/\nfunction attachmentTableCount() {\n\n    /*\n    SUPPLIER LEVEL\n    */\n    let lenSupAtch = oTableAttachmentSupplier.getModel().getData().length || 0;\n    lenSupAtch = lenSupAtch <= 5 ? lenSupAtch : 5;\n    oTableAttachmentSupplier.setVisibleRowCount(lenSupAtch);\n    lenSupAtch === 0 ? oTableAttachmentSupplier.setVisible(false) : oTableAttachmentSupplier.setVisible(true);\n\n\n    /*\n    MATERIAL LEVEL\n    */\n    /* -- code commented may 2, 2022 since not included in QA CR #CHG000010825314*/\n    let mat_tab_attach_len = tableMatFiles.getModel().getData().length || 0;\n    mat_tab_attach_len = mat_tab_attach_len <= 5 ? mat_tab_attach_len : 5;\n    tableMatFiles.setVisibleRowCount(mat_tab_attach_len);\n\n    mat_tab_attach_len === 0 ? tableMatFiles.setVisible(false) : tableMatFiles.setVisible(true);\n\n    if (mat_tab_attach_len === 0 && !hboxMatUpload.getVisible()) {\n        panelMatUpload.setVisible(false);\n    }\n    \n\n\n    /*\n    SQ APPROVAL LEVEL\n    */\n    let lenSQAAtch = oTableSQAAttachments.getModel().getData().length || 0;\n    lenSQAAtch = lenSQAAtch <= 5 ? lenSQAAtch : 5;\n    oTableSQAAttachments.setVisibleRowCount(lenSQAAtch);\n\n    lenSQAAtch === 0 ? oTableSQAAttachments.setVisible(false) : oTableSQAAttachments.setVisible(true);\n\n\n    /*\n    updated by : vighnesh on april 19, 2022\n    newly added table row visibility for batch upload SQA attachments\n    it was observed that row visisbility code was missing \n    */\n    if (g_selectedRole === 'ADMIN' && g_action === 'BATCHUPLOAD') {\n        let len_BU_SQ_attach = oTableSQAAttachmentsBU.getModel().getData().length || 0;\n        len_BU_SQ_attach = len_BU_SQ_attach <= 5 ? len_BU_SQ_attach : 5;\n        oTableSQAAttachmentsBU.setVisibleRowCount(len_BU_SQ_attach);\n\n        len_BU_SQ_attach === 0 ? oTableSQAAttachmentsBU.setVisible(false) : oTableSQAAttachmentsBU.setVisible(true);\n    }\n\n\n}\n","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"c15e6981-31d2-42f0-929b-a731a1901fad","fieldName":"PurchasingTableJS","fieldParent":"272005f6-9f2b-4468-c476-ce829a4a3162","fieldPos":829,"fieldType":"neptune.Script","script":"const txt_pubtn = \"UPDATE BUSINESS LINKAGE\",\n    txt_pabtn = \"ADD BUSINESS LINKAGE\",\n    txt_pmsg1 = \"Business Linkage already exist in the table\";\ntxt_pmsg2 = \"Please enter either Purchasing System ID Number or Purchase System Name\"\n\nvar tempPurchModel = new sap.ui.model.json.JSONModel([]);\noTablePurchaseSys.setModel(tempPurchModel);\noTablePurchaseSys.bindAggregation(\"rows\", {\n    path: \"/\",\n    template: oColumnPurchaseSysBtn,\n    templateShareable: false\n});\n\n\nvar tempPOPPurchModel = new sap.ui.model.json.JSONModel([]);\noTablePOPPurch.setModel(tempPOPPurchModel);\noTablePOPPurch.bindAggregation(\"items\", {\n    path: \"/\",\n    template: oColumnListItemN,\n    templateShareable: false\n});\n\n\n\nlet g_purchase_editval;\n\nfunction purchaseTableEdit(sel) {\n    highlightSelectedRow(oTablePurchaseSys, sel);\n    var s = sel.getBindingContext().getObject();\n    s = JSON.parse(JSON.stringify(s));\n\n    txtPurchaseSysID.setValue(s.purchasingSysId);\n    txtPurSysName.setValue(s.purchasingSysName);\n    txtLocationAddress.setValue(s.locationAddress); //05/01 PREM\n    oBtnADDSupBusLink.setText(txt_pubtn);\n    g_purchase_editval = s.purchasingSysDbId || s.uniqueKey;\n\n}\n\nfunction purchaseTableDel(sel) {\n    dialogDelConfirm('Are you sure want delete Purchasing contact?', sel, () => {\n        var s = sel.getBindingContext().getObject();\n\n        if (s.purchasingSysDbId) {\n            ModelData.Delete(oTablePurchaseSys, \"purchasingSysDbId\", s.purchasingSysDbId);\n            ModelData.Add(PurchaseSysDelete, s); //Add Purchasing Systems to be deleted from DB\n        } else {\n            ModelData.Delete(oTablePurchaseSys, \"uniqueKey\", s.uniqueKey);\n        }\n\n        if (s.purchasingSysId && s.purchasingSysId === txtPurchaseSysID.getValue()) {\n            purchaseClearInput();\n        }\n\n        purchaseTableCount();\n        g_dialog.close();\n\n    }, (oEvent) => {\n        g_dialog.close();\n    });\n\n}\n\n\n/*\nfunction to add purchasing sys info in a table\n2021ENHANCEMENTS\n*/\nfunction purchaseTableAdd() {\n    let id = txtPurchaseSysID.getValue().trim();\n    let name = txtPurSysName.getValue().trim();\n    let address = txtLocationAddress.getValue().trim();\n\n\n    let obj = {\n        purchasingSysId: id,\n        purchasingSysName: name,\n        locationAddress: address\n    };\n    let data = ModelData.FindFirst(oTablePurchaseSys, [\"purchasingSysId\", \"purchasingSysName\", \"locationAddress\"], [id, name, address]);\n    let errFlag = false;\n\n    /*Check whether same id exist in table or not*/\n    if (data && !g_purchase_editval) {\n        errFlag = true;\n    } else if (data && g_purchase_editval) {\n        if (data.uniqueKey && data.uniqueKey !== g_purchase_editval) {\n            errFlag = true;\n        } else if (data.purchasingSysDbId && data.purchasingSysDbId !== g_purchase_editval) {\n            errFlag = true;\n        }\n    }\n\n    if (errFlag) {\n        showMessageToast(txt_pmsg1);\n        return;\n    }\n    if (g_purchase_editval && !g_purchase_editval.includes('P')) { //Update\n        ModelData.UpdateField(oTablePurchaseSys, \"purchasingSysDbId\", g_purchase_editval, [\"purchasingSysId\", \"purchasingSysName\", \"locationAddress\"], [id, name, address]);\n    } else if (g_purchase_editval && g_purchase_editval.includes('P')) {\n        ModelData.UpdateField(oTablePurchaseSys, \"uniqueKey\", g_purchase_editval, [\"purchasingSysId\", \"purchasingSysName\", \"locationAddress\"], [id, name, address]);\n    } else { //Add\n        obj.uniqueKey = 'P_' + new Date().getTime();\n        ModelData.Add(oTablePurchaseSys, obj);\n    }\n\n    purchaseClearInput();\n\n    oBtnADDSupBusLink.setText(txt_pabtn);\n    purchaseTableCount();\n    highlightSelectedRow(oTablePurchaseSys);\n\n}\n\nfunction purchaseClearInput() {\n    txtPurchaseSysID.setValue();\n    txtPurSysName.setValue();\n    txtLocationAddress.setValue();\n    oBtnADDSupBusLink.setText(txt_pabtn);\n    g_purchase_editval = undefined;\n    clearPurchaseSystemHighlightfields();\n    highlightSelectedRow(oTablePurchaseSys);\n}\n\n\n/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on : nov 29, 2021\nrefactored\n*/\nfunction purchaseTableCount() {\n\n    let len = oTablePurchaseSys.getModel().getData().length || 0;\n    len = len <= 5 ? len : 5;\n    oTablePurchaseSys.setVisibleRowCount(len);\n\n    if (len === 0) {\n        var mode = oPanelMaterialInformation.getModel().getData();\n\n        oPanelSupplierPurchaseSys.setVisible(mode.custom_mat_enabled);\n\n        oTablePurchaseSys.setVisible(false);\n    } else {\n        oPanelSupplierPurchaseSys.setVisible(true); //added this code line to have the panel visible when there is purchasing info present\n        oTablePurchaseSys.setVisible(true);\n    }\n\n}\n\nfunction deletePurchasingFromDB(matData) {\n\n    var allPurchase = JSON.parse(JSON.stringify(PurchaseSysDelete.getModel().getData()));\n\n\n    for (var i = 0; i < allPurchase.length; i++) {\n        var item = allPurchase[i].purchasingSysDbId\n        ajaxDeleteExistingRowId(item, \"asl_purchasing_systems\", allPurchase, matData);\n\n        ModelData.Delete(PurchaseSysDelete, \"purchasingSysDbId\", item);\n    }\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"55e115fc-a084-4f48-b8af-0327c7cc52c7","fieldName":"MaterialTableJS","fieldParent":"272005f6-9f2b-4468-c476-ce829a4a3162","fieldPos":830,"fieldType":"neptune.Script","script":"const txt_mcount = \"MATERIAL / SERVICES INFORMATION: \";\nlet g_selected_material_ev;\nlet g_cri_cru_flag = false;\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by : vighnesh on nov28, 2021\nremoved comments\n*/\nfunction isMatRecordEditable(sel, edit) {\n\n    if (oPanelMaterialInformation.getVisible() === true) {\n\n        showMessageToast(\"Please cancel or delete the material to proceed further\");\n        return false;\n\n    }\n}\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by : vighnesh on nov28, 2021\nremoved comments and modified as per AGHP-2198 implementation\n*/\nfunction materialTableEdit_View(sel, edit, action, hIndex) {\n\n    var s;\n    if (sel.supplierType) {\n        s = sel;\n\n        highlightSelectedRow(oTableAddMaterial, Number(hIndex));\n    } else {\n\n        /* -- commented code since AGHP-2198 is implemented\n        var check = isMatRecordEditable(s, edit);\n        if (check === false) {\n            return;\n        }\n        */\n\n        s = sel.getBindingContext().getObject();\n        highlightSelectedRow(oTableAddMaterial, sel);\n    }\n\n    s = JSON.parse(JSON.stringify(s));\n\n    g_selected_material_ev = s.matDbId || s.uniqueKey;\n\n    s.custom_mat_enabled = edit; //Toggle Visibility For Panels of selected material\n\n\n\n    /* -- code commented may 2, 2022 since not included in QA CR #CHG000010825314*/\n    s.custom_file_enabled = edit;\n    s.matFileVisibility = s.material_attach_flag; //vis of mat file attach panel\n    if (s.custom_file_enabled) {\n        s.material_attach_flag ? s.custom_file_enabled = true : s.custom_file_enabled = false;\n    }\n    \n\n\n\n    /*Populate UI*/\n    setMaterialDataOnPanels(s, edit);\n\n    materialTableBtnToggle(action);\n\n    highlightChangedFieldsMaterial(s.matInfoId);\n\n\n    /*Contact Buttons*/\n    btnResetMaterialJJ.setVisible(false);\n    oButtonAddJnjInfo.setVisible(false);\n\n    jnjContactTableCount();\n\n    /*\n    april 20, 2022\n    AGHP-2553\n    */\n    attachmentTableCount(); //-- code commented may 2, 2022 since not included in QA CR #CHG000010825314\n}\n\n\n\nfunction toggleSubContBoxes(status) {\n    oTextSubContractor.setVisible(status);\n    oVBoxCrucialSupStatus.setVisible(status);\n    oVBoxSubCont.setVisible(status);\n}\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremoved unwanted comments\n*/\nfunction collapse_expandMaterialForm(status) {\n    oPanelMaterialInformation.setVisible(status);\n    oPanelSupplierQuestionsPannel.setVisible(status);\n    oPanelSubcontractor.setVisible(status);\n    oPanelMatReqInfo.setVisible(status);\n\n\n    /*\n    udpated by vighnesh on APRIL 8, 2022\n    INC : INC000025322024\n\n    was observed that for modification at the material level due to some rendering issues, the code to make the date picker fields read only did not trigger.\n\n    remediation: calling a function where we have requested Timing date picker fields ready only\n    */\n    if (oPanelMatReqInfo.getVisible()) {\n        readOnlyFields();\n    }\n\n    /*\n    updated by : vighnesh on april 20, 2022\n    AGHP-2553\n    */\n    /* -- code commented may 2, 2022 since not included in QA CR #CHG000010825314*/\n    panelMatUpload.setVisible(status); //april 20 2553\n    if (status) {\n        attachmentTableCount(); //april 20 2553\n    }\n    \n\n\n\n    toggleSubContBoxes(true);\n\n    oPanelJnJInfo.setVisible(status);\n\n    if (status === false) {\n        btnCloseMaterial.setVisible(false);\n    }\n}\n\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremoved unwanted comments\n*/\nfunction setMaterialDataOnPanels(data, edit) {\n    oPanelMaterialInformation.getModel().setData(data);\n    oPanelSubcontractor.getModel().setData(data);\n    oPanelMatReqInfo.getModel().setData(data);\n    oPanelJnJInfo.getModel().setData(data);\n    oTablePurchaseSys.getModel().setData(data.purchasingSys);\n\n    /*\n    updated by : vighnesh\n    updated on : April 20, 2022\n    AGHP-2553\n\n    code commented may 2, 2022 since not included in QA CR #CHG000010825314*/\n    \n    data && data.materialAttachments ? tableMatFiles.getModel().setData(data.materialAttachments) : tableMatFiles.getModel().setData([]);\n    \n\n\n\n    /*\n    for ADD new material only\n    */\n    /* -- code commented may 2, 2022 since not included in QA CR #CHG000010825314*/\n    if (data && JSON.stringify(data) === '{}') {\n        panelMatUpload.setVisible(false);\n        hboxMatUpload.setVisible(false);\n        colMatFileDel.setVisible(false);\n    } else {\n        panelMatUpload.setVisible(data.matFileVisibility);\n        hboxMatUpload.setVisible(data.custom_file_enabled);\n        colMatFileDel.setVisible(data.custom_file_enabled);\n    }\n    \n\n\n    createQandA(data.questionnaire, edit);\n\n    oMultiInputQualContact.setEditable(edit);\n    oMultiInputProContactM.setEditable(edit);\n    oMultiInputSrcContact.setEditable(edit);\n\n    /*New Requirement Sprint 6 - \n    When REQ clicks on VIEW mode of \n    material which is QUALIFIED OR CONDITIONALLY QUALIFIED\n    Display MODIFY/CANCEL Buttons.\n    */\n\n    if (edit === false &&\n        data.custom_field_t_userrole === 'REQ' &&\n\n        g_dashboard_navItem !== \"ASL\" &&\n        (data.qualificationStatus === g_qualStatQualified || data.qualificationStatus === g_qualStatSQA)) {\n        oHBoxModEmail.setVisible(true);\n        btnModify.setText('MODIFY');\n        btnCancelMdf.setVisible(false);\n    } else {\n        oHBoxModEmail.setVisible(false);\n    }\n\n    clearMaterialHighlightedfields();\n\n    // . If Material Data doesn't exist \n    if (Object.keys(data).length === 0) {\n        resetMaterialFields();\n        oTableJnJInfoData.getModel().setData([]);\n    } else {\n        // /*Populate dependent Comboboxes*/\n        fillcomboboxRiskCatgGroup(data.supplierType);\n\n        oComboBoxSupplierType.setSelectedKey(data.supplierType);\n        oComboBoxRiskCatgGroup.setSelectedKey(data.riskCatgGroup); //temporary solution to populate drop downs\n        oComboBoxCriticalityLevel.setSelectedKey(data.criticalityLevel); //temporary solution to populate drop downs\n        oComboBoxCrucialSupplierStatus.setSelectedKey(data.crucialSupplierStatus);\n        oComboBoxCriticalSubContStatus.setSelectedKey(data.criticalSubContStatus);\n\n        oComboBoxOEM.setSelectedKey(data.OemSupplier);\n\n        fillcomboboxjnjQualOrg(data.jnjSegment);\n\n\n        oComboBoxSegment.setSelectedKey(data.jnjSegment);\n        oComboBoxQualOrg.setSelectedKey(data.jnjOrg);\n\n\n        fillcomboboxjnjSite(data.jnjOpComp);\n        oComboBoxOpComp.setSelectedKey(data.jnjOpComp);\n        oComboBoxjnjSite.setSelectedKey(data.jnjSite);\n        oComboBoxjnjRegion.setSelectedKey(data.jnjRegion);\n\n\n        oComboBoxRiskCatgGroup.setBlocked(false);\n        oComboBoxQualOrg.setBlocked(false);\n        oComboBoxjnjSite.setBlocked(false);\n\n\n        createTokensFromString(oMultiInputQualContact, data.jnjQualityContact);\n        createTokensFromString(oMultiInputProContactM, data.jnjSupplierLiason);\n        createTokensFromString(oMultiInputSrcContact, data.jnjSourcingContact);\n\n        oHBoxOverride.setVisible(data.overrideComment && data.overrideComment !== \"\" ? true : false);\n    }\n    jnjContactTableCount();\n\n}\n\nfunction toggleOverrideComment(data) {\n    var crucialStatus = getCrucialSupplierStatus();\n    var criticalStatus = getCriticalSubContStatus();\n    if ((oComboBoxCrucialSupplierStatus.getSelectedKey() !== crucialStatus) ||\n        (oComboBoxCriticalSubContStatus.getSelectedKey() !== criticalStatus)) {\n        oHBoxOverride.setVisible(true);\n    } else {\n        oHBoxOverride.setVisible(false);\n    }\n    if (!oHBoxOverride.getVisible()) {\n        txtOverrideCom.setValue();\n        labRemCountOverride.setText();\n    }\n    txtOverrideCom.removeStyleClass(\"error\");\n    txtOverrideCom.addStyleClass(\"combobox\");\n\n    txtOverrideCom.setValueState(\"None\");\n}\n\n\n/*\n2021 ENHANCEMENTS sprint 3\nupdated by : vighnesh\nupdated on : nov 23, 2021\n*/\nfunction materialTableBtnToggle(flag) { //NEED TO GET RID OF THIS\n    if (flag === 'ADD') {\n\n        btnUpdMaterial.setVisible(false);\n        btnReset.setVisible(true);\n        btnReset.setEnabled(true);\n        btnAddMaterial.setVisible(false);\n        btnCloseMaterial.setVisible(true);\n        btnSaveMaterial.setVisible(true);\n        btnUpdate.setVisible(false);\n        btnSaveAsDraft.setEnabled(false);\n        btnSubmit.setEnabled(false);\n\n        setMaterialDataOnPanels({}, true); //Clear Data\n        collapse_expandMaterialForm(true);\n        //NEW Requirement - 06/11\n        oTextMatReqName.setText(g_users.full_name);\n        oTextMatReqEmail.setText(g_users.email);\n        oTextMatReqDate.setText(setDate());\n        oTextMatReqType.setText('ADD');\n\n        btnResetMaterialJJ.setVisible(true);\n        oButtonAddJnjInfo.setVisible(true);\n        resetJnjContact();\n\n        //New Requirement - 06/26\n        if (g_selectedRole === 'REQ') {\n            //\n            var arr1 = [];\n            var configModel = adminConfigHolder.getModel().getData();\n            oComboBoxQualOrg.removeAllItems();\n            for (var i = 0; i < configModel.length; i++) {\n                if ((configModel[i].dataElement) === 'MD') {\n                    arr1.push(configModel[i].values);\n                }\n            }\n            setComboBox(oComboBoxQualOrg, arr1);\n\n            oComboBoxSegment.setSelectedKey('MD'); //THIS SHOULD ALWAYS BE DEFAULT VALUES FOR REQ\n            oComboBoxQualOrg.setSelectedKey('Supply Chain Source');\n            oComboBoxQualOrg.setBlocked(false);\n        }\n\n        oColumnPurchaseSysBtn.setVisible(true);\n        highlightSelectedRow(oTableAddMaterial);\n        clearMaterialCharacterLimit();\n\n\n    } else if (flag === 'CANCEL') {\n\n        btnCloseMaterial.setVisible(false);\n        btnSaveMaterial.setVisible(false);\n        btnUpdMaterial.setVisible(false);\n        collapse_expandMaterialForm(false);\n\n        if (g_selectedRole === 'ASL' || g_selectedRole === 'SQA') {\n            btnUpdate.setVisible(true);\n            btnUpdate.setEnabled(true);\n            btnReset.setVisible(false);\n            btnAddMaterial.setVisible(false);\n\n        } else if (g_selectedRole === 'REQ' && g_action !== 'VIEW') {\n            btnReset.setVisible(false);\n\n\n            btnAddMaterial.setVisible(disableSupplierPageCheck_1() && isAddMaterialBtnVisible()); //true\n            btnUpdate.setVisible(false);\n            btnSaveAsDraft.setEnabled(true);\n\n            /*\n            2021ENHANCEMENTS - AGHP-2198\n            it was observed that submit was enabled since the start, system must not show the submit button\n            updated by : vighnesh\n            updated on : nov 24, 2021\n            */\n            if (oTableAddMaterial.getModel().getData().length > 0) {\n                btnSubmit.setEnabled(true);\n            }\n\n\n        } else {\n            btnReset.setVisible(false);\n            btnAddMaterial.setVisible(false);\n            btnUpdate.setVisible(false);\n        }\n\n        if (g_action === 'BATCHUPLOAD') {\n            btnBatchSave.setEnabled(true);\n        }\n\n        highlightSelectedRow(oTableAddMaterial);\n        clearMaterialTabGlobals();\n\n    } else if (flag === 'SAVE') {\n\n        btnCloseMaterial.setVisible(false);\n        btnSaveMaterial.setVisible(false);\n        btnUpdMaterial.setVisible(false);\n\n        if (g_selectedRole === 'ASL' || g_selectedRole === 'SQA') {\n            btnUpdate.setVisible(true);\n            btnUpdate.setEnabled(true);\n            btnSubmit.setVisible(false);\n            btnSubmit.setEnabled(false);\n            btnAddMaterial.setVisible(false);\n            btnReset.setVisible(false);\n        } else if (g_selectedRole === 'REQ') {\n            btnUpdate.setVisible(false);\n            btnUpdate.setEnabled(false);\n            btnSubmit.setVisible(true);\n            btnSubmit.setEnabled(true);\n            btnSaveAsDraft.setEnabled(true);\n            //08/10/2020\n            btnAddMaterial.setVisible(disableSupplierPageCheck_1() && isAddMaterialBtnVisible()); //true\n            btnReset.setVisible(false);\n\n        } else {\n            btnUpdate.setVisible(false);\n            btnUpdate.setEnabled(false);\n            btnSubmit.setVisible(false);\n            btnSubmit.setEnabled(false);\n            btnSaveAsDraft.setEnabled(false);\n            btnAddMaterial.setVisible(false);\n            btnReset.setVisible(false);\n        }\n        if (g_action === 'BATCHUPLOAD') {\n            btnBatchSave.setEnabled(true);\n        }\n\n\n        setMaterialDataOnPanels({}, true); //Clear Data\n        collapse_expandMaterialForm(false);\n\n        highlightSelectedRow(oTableAddMaterial);\n        clearMaterialTabGlobals();\n    } else if (flag === 'EDIT') {\n        btnAddMaterial.setVisible(false);\n        btnCloseMaterial.setVisible(true);\n\n        btnSaveMaterial.setVisible(false);\n        btnReset.setVisible(false);\n\n        if (g_selectedRole === 'ASL' || g_selectedRole === 'SQA') {\n            btnUpdate.setVisible(true);\n            btnUpdate.setEnabled(false);\n\n        } else if (g_selectedRole === 'REQ') {\n            btnUpdate.setVisible(false);\n\n        } else {\n            btnUpdate.setVisible(false);\n\n        }\n\n        if (g_action === 'BATCHUPLOAD') {\n            btnBatchSave.setEnabled(false);\n        }\n\n\n        btnUpdMaterial.setVisible(true);\n        btnSubmit.setEnabled(false);\n        btnSaveAsDraft.setEnabled(false);\n        collapse_expandMaterialForm(true);\n        oColumnPurchaseSysBtn.setVisible(true);\n        clearMaterialCharacterLimit();\n\n    } else if (flag === 'VIEW') {\n\n        btnReset.setVisible(false);\n        btnAddMaterial.setVisible(false);\n        btnCloseMaterial.setVisible(true); //-- AGHP-2198 sprint 3\n        btnSaveMaterial.setVisible(false);\n\n        btnUpdate.setVisible(false);\n\n        btnUpdMaterial.setVisible(false);\n        btnSubmit.setEnabled(false);\n        btnSaveAsDraft.setEnabled(false);\n        collapse_expandMaterialForm(true);\n        oColumnPurchaseSysBtn.setVisible(false);\n        clearMaterialCharacterLimit();\n\n    } else if (flag === 'COPY') {\n        //COPY IS ONLY FOR REQ\n\n        btnReset.setVisible(false);\n        btnUpdMaterial.setVisible(false);\n        btnSaveMaterial.setVisible(true);\n\n        btnAddMaterial.setVisible(false);\n        btnCloseMaterial.setVisible(true);\n\n        btnUpdate.setVisible(false);\n        btnSubmit.setEnabled(false);\n        btnSaveAsDraft.setEnabled(false);\n        collapse_expandMaterialForm(true);\n        oColumnPurchaseSysBtn.setVisible(true);\n\n        clearMaterialCharacterLimit();\n\n    } else if (flag === 'MODIFY') {\n        //MODIFY IS ONLY FOR REQ\n\n        btnReset.setVisible(false);\n        btnAddMaterial.setVisible(false);\n        btnCloseMaterial.setVisible(true);\n\n        btnSaveMaterial.setVisible(true);\n        btnUpdate.setVisible(false);\n\n        btnUpdMaterial.setVisible(false);\n        btnSubmit.setEnabled(false);\n        btnSaveAsDraft.setEnabled(false);\n        collapse_expandMaterialForm(true);\n        oColumnPurchaseSysBtn.setVisible(true);\n\n        clearMaterialCharacterLimit();\n    }\n}\n\n/*NOT SURE CODE */\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremoved unwanted comments\n*/\nfunction disableSupplierPageCheck_1() {\n\n    var c = ModelData.FindFirst(oTableAddMaterial, [\"pendingApprover\", \"rejectedBy\", \"custom_field_t_userrole\"], [\"REQ\", \"\", \"REQ\"], [\"Contains\", \"NE\", \"EQ\"]);\n    if (c && c.matInfoId) {\n        return false;\n    } else {\n        return true;\n    }\n}\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremoved unwanted comments\n*/\nfunction materialTableDel(sel) {\n    var s = sel.getBindingContext().getObject();\n    //Satya - 05/07/2021 : Do not allow the users to delete the materials in MODIFY process.\n    // if(s.parentMaterialInfoId && s.parentMaterialInfoId !== \"\" && s.pendingApprover === \",REQ\"){\n    //     showMessageToast(\"In MODIFY process, it is not allowed to delete.\\n  If you want the parent to be unlocked, please connect with Admin.\");\n    //     return;\n    // }//Change end.\n\n    dialogDelConfirm('Are you sure want delete Material?', sel, () => {\n\n        if (s.matDbId) {\n            //ModelData.Delete(oTableAddMaterial, \"matDbId\", s.matDbId);\n            ajaxDeleteExistingRowId(s.matDbId, \"asl_material_master\", s);\n        } else {\n\n            if (g_action === 'BATCHUPLOAD' && g_selectedRole === 'ADMIN') {\n                ModelData.Delete(oTableAddMaterial, \"matInfoId\", s.matInfoId);\n                ModelData.Delete(oTableApprovers, \"matInfoId\", s.matInfoId);\n\n\n                let myBatchData = JSON.parse(JSON.stringify(g_batchupload_clicked_record.finalResponse.Materials));\n\n                var ind = myBatchData.findIndex(element => element.matInfoId === s.matInfoId)\n                if (ind >= 0) {\n                    g_batchupload_clicked_record.finalResponse.Materials.splice(ind, 1);\n                }\n\n                approverMatCount();\n            } else {\n                ModelData.Delete(oTableAddMaterial, \"uniqueKey\", s.uniqueKey);\n                /*If Deleting the Modified record . Unlock the parent id*/\n                if (s.parentMaterialInfoId) {\n                    ModelData.UpdateField(oTableAddMaterial, \"matInfoId\", s.parentMaterialInfoId, [\"lockedBy\", \"lockedDate\", \"editFlag\", \"changeLevel\"], [\"\", \"\", true, \"\"]);\n                }\n            }\n        }\n\n        /*If deleted material is open in panels collapse and clear data*/\n        var m = oPanelMaterialInformation.getModel().getData();\n        if (m && m.matInfoId === s.matInfoId) {\n            setMaterialDataOnPanels({}, true); //Clear data\n            materialTableBtnToggle('CANCEL');\n\n        }\n        countMaterial();\n\n        g_dialog.close();\n\n    }, (oEvent) => {\n        g_dialog.close();\n\n    });\n\n\n}\n\nfunction materialTableGetLock(sel) {\n    var s = sel.getBindingContext().getObject();\n    var lockedBy = s.lockedBy + \"@its.jnj.com\";\n    var lockedMessage = \"This Record is locked by \" + lockedBy + \" on \" + s.lockedDate;\n    showMessageToast(lockedMessage);\n}\n\nfunction countMaterial() {\n    var rowsCount = oTableAddMaterial.getModel().getData().length || 0;\n\n    if (rowsCount === 0) {\n        oTableAddMaterial.setVisible(false);\n        btnSubmit.setEnabled(false);\n    } else {\n        oTableAddMaterial.setVisible(true);\n        btnSubmit.setEnabled(true);\n    }\n    oTextNumberOfMaterial.setText(txt_mcount + rowsCount);\n    rowsCount = rowsCount <= 5 ? rowsCount : 5;\n    oTableAddMaterial.setVisibleRowCount(rowsCount);\n\n}\n\nfunction update_saveMaterial() {\n    var checkMaterialEntry = checkAddMaterialMandatoryFields();\n    if (checkMaterialEntry === false) {\n        return;\n    }\n\n    var comboBoxesSel = {\n        supplierType: oComboBoxSupplierType.getSelectedKey(),\n        riskCatgGroup: oComboBoxRiskCatgGroup.getSelectedKey(),\n        criticalityLevel: oComboBoxCriticalityLevel.getSelectedKey(),\n        crucialSupplierStatus: oComboBoxCrucialSupplierStatus.getSelectedKey(),\n        criticalSubContStatus: oComboBoxCriticalSubContStatus.getSelectedKey(),\n        OemSupplier: oComboBoxOEM.getSelectedKey()\n    };\n\n    var formData = {\n        ...oPanelMaterialInformation.getModel().getData(),\n        ...oPanelSubcontractor.getModel().getData(),\n        ...oPanelMatReqInfo.getModel().getData(),\n        ...oPanelJnJInfo.getModel().getData(),\n        ...comboBoxesSel\n    };\n\n    formData.clRationale = txtCLRationale.getValue();\n    formData.productPartDesc = txtPrdPartDesc.getValue();\n\n    if (g_action !== 'BATCHUPLOAD') {\n        formData.pendingApprover = ',' + g_selectedRole;\n    }\n\n    if (g_mat_copybutton_pressed === true) {\n        formData.copiedRecordFlag = true;\n    }\n\n    var checkQuestionSel = validateQuestions();\n    if (checkQuestionSel === false) {\n        return;\n    }\n\n\n    var questionnaireNew = [];\n    var lists = [\n        oListQuestionNA.getModel().getData(),\n        oListQuestionsScope.getModel().getData(),\n        oListQuestionsTable1.getModel().getData(),\n        oListQuestionsTable2.getModel().getData()\n    ];\n\n    //questionnaire\n    for (var p = 0; p < lists.length; p++) {\n        var l1 = lists[p];\n        for (var c = 0; c < l1.length; c++) {\n\n            if (l1[c].value === 0 || l1[c].value === 'Yes') {\n                l1[c].value = 'Yes';\n            } else if (l1[c].value === 1 || l1[c].value === 'No') {\n                l1[c].value = 'No';\n            } else {\n                l1[c].value = '';\n            }\n\n            questionnaireNew.push(l1[c]);\n        }\n    }\n\n    formData.questionnaire = questionnaireNew;\n\n    var contactInfo = oTableJnJInfoData.getModel().getData();\n    var allRecs = [];\n    var errorFlag = false;\n    var err;\n\n    /*****************ADD NEW MATERIAL********************************************/\n\n    if (contactInfo.length > 0) {\n        for (var j = 0; j < contactInfo.length; j++) {\n            var v1 = contactInfo[j].jnjOpComp;\n            var v2 = contactInfo[j].jnjOrg;\n            var v3 = formData.supplierType;\n            var v4 = contactInfo[j].jnjSegment;\n            var v5 = contactInfo[j].jnjSite;\n            var v6 = contactInfo[j].jnjRegion;\n\n            formData[\"uniqueKey\"] = genKeyForMaterial(contactInfo[j], v3);\n\n            var data = ModelData.FindFirst(oTableAddMaterial, \"uniqueKey\", formData.uniqueKey, \"EQ\");\n\n\n            /*By-pass Validation if the Record is modified.\n            MODIFIED records can be duplicate records in table\n            All MODIFIED records will have parentMaterialInfoId values filled\n            */\n            if (data && Object.keys(data).length > 0) {\n                showMessageToast(\"Material Record Already Exists\");\n                errorFlag = true;\n                continue;\n            }\n\n            formData.qualificationStatus = \"DRAFT\";\n            //Replace questionnaire with new values \n\n            formData.jnjOpComp = v1;\n            formData.jnjOrg = v2;\n            formData.jnjRegion = v6 //contactInfo[j].jnjRegion;\n            formData.jnjSegment = v4;\n            formData.jnjSite = v5;\n            formData.lockedBy = \"\";\n            formData.copyFlag = false;\n            formData.deleteFlag = true;\n\n\n            formData.jnjQualityContact = contactInfo[j].jnjQualityContact;\n            formData.jnjSupplierLiason = contactInfo[j].jnjSupplierLiason;\n            formData.jnjSourcingContact = contactInfo[j].jnjSourcingContact;\n\n            formData.purchasingSys = contactInfo[j].purchasingSys; //05/01 PREM \n\n            allRecs.push(JSON.parse(JSON.stringify(formData)));\n\n        }\n\n        ModelData.AddArray(oTableAddMaterial, allRecs);\n    } else {\n\n        /*****************COPY/EDIT MATERIAL***********************************/\n\n        var checkJnjInfo = checkMaterialJnJSiteMandatoryFields();\n        if (checkJnjInfo === false) {\n            return;\n        }\n        formData.jnjQualityContact = getStringFromTokenQC();\n        formData.jnjSupplierLiason = getStringFromTokenSL();\n        formData.jnjSourcingContact = getStringFromTokenSC();\n        /*\n        If edit is pressed - ignore the combination and directly update the material with ID \n        If edit is pressed and User enters same 5-combination check for the combination of 5 \n        By pass validation if Modify of Material and Edit button pressed*/\n        if (g_selected_material_ev) {\n            var data = checkForDuplicatesMaterialTable(formData);\n\n\n            /*Skip Validation for MODIFIED material*/\n            if (data && Object.keys(data).length > 0 && data.lockedBy === \"\" && !g_mat_modified_pressed) { //!formData.parentMaterialInfoId\n\n                if (data.uniqueKey && data.uniqueKey !== formData.uniqueKey) {\n                    errorFlag = true;\n                } else if (data.matDbId && data.matDbId !== formData.matDbId) {\n                    errorFlag = true;\n                }\n                if (errorFlag) {\n                    showMessageToast(\"Material Record Already Exists\");\n                    return;\n                }\n            }\n\n\n\n            if (g_mat_copybutton_pressed === true && formData.copiedRecordFlag === true) {\n\n                var data = checkForDuplicatesMaterialTable(formData);\n\n\n                if (data && Object.keys(data).length > 0 &&\n                    !formData.parentMaterialInfoId) {\n                    showMessageToast(\"Material Record Already Exists\");\n                    errorFlag = true;\n                    return;\n                }\n            }\n        }\n\n        /*\n        updated by : vighnesh\n        updated on : april 26\n\n        to add material attachment key to the array before saving as draft / submit\n        fetching from material file table model will keep the key udpated\n        */\n        formData.materialAttachments = tableMatFiles.getModel().getData(); //-- code commented may 2, 2022 since not included in QA CR #CHG000010825314\n\n        if (formData.matDbId) { //If material is created in DB\n            //  formData.uniqueKey = g_selected_material_ev;\n            ModelData.Update(oTableAddMaterial, \"matDbId\", g_selected_material_ev, formData);\n        } else { //If material is not yet created in DB\n            formData.uniqueKey = g_selected_material_ev;\n            ModelData.Update(oTableAddMaterial, \"uniqueKey\", g_selected_material_ev, formData);\n        }\n\n    }\n\n    if (errorFlag === false) {\n\n        materialTableBtnToggle('SAVE');\n        clearMaterialTabGlobals();\n\n        deletePurchasingFromDB(formData); //Delete Purchase systems from DB\n\n\n        updateBatchMaterialRecord('MATERIALTAB', formData);\n\n        g_isMatEdited = false; //2021 ENH sprint 3 AGHP-2198\n    }\n    countMaterial();\n\n}\n\nfunction checkForDuplicatesMaterialTable(f) {\n    var duplicates = ModelData.FindFirst(oTableAddMaterial, [\"jnjOpComp\", \"jnjOrg\", \"jnjSegment\", \"jnjSite\", \"jnjRegion\", \"supplierType\", \"riskCatgGroup\", \"criticalityLevel\"], [f.jnjOpComp, f.jnjOrg,\n    f.jnjSegment, f.jnjSite, f.jnjRegion, f.supplierType, f.riskCatgGroup, f.criticalityLevel\n    ]);\n\n    return duplicates;\n}\n\nfunction clearMaterialTabGlobals() {\n    clearGlobalSel(); //Clear Globals\n    g_selected_material_ev = undefined;\n    g_mat_copybutton_pressed = false;\n    g_mat_modified_pressed = false;\n    // g_mat_copybutton_pressed_index = undefined;\n}\n\n/*For COPY - lockedBy,lockeddata, parentMaterialInfoId should be empty\n For EDIT(MODIFY) record - parentMaterialInfoId should be added and the Parent level item should be locked\n/*Creates Copy record of Item Provided */\nfunction addModifyCopyRecord(itemData, hIndex, action) {\n\n\n    hIndex = Number(hIndex);\n\n    var modifiedRec = JSON.parse(JSON.stringify(itemData));\n    modifiedRec.deleteFlag = true;\n    modifiedRec.qualificationStatus = \"DRAFT\";\n    modifiedRec.lockedBy = \"\";\n    modifiedRec.lockedDate = \"\";\n\n    if (action === 'MODIFY') {\n        modifiedRec.parentMaterialInfoId = itemData.matInfoId\n        //Satya - 06/04/2021:If the supplier id is blank then clear it from the material record.\n        let suppData = pageSupplier.getModel().getData();\n        if (suppData && !suppData.supplierInfoId)\n            modifiedRec.supplierInfoId = \"\";\n        //Satya - 06/04/2021:END\n    } else {\n        modifiedRec.parentMaterialInfoId = \"\";\n\n        /*\n        when user is performing copy at material level, system creates new material with blank material static ID,\n        if the static Material Id is blank then once saved as draft or submitted, system will create new static MAterial ID from the script side\n        udpated by : vighnesh\n        updated on: oct 28, 2021\n        2021ENHANCEMENT 2197 sprint 2 dev\n        */\n        modifiedRec.materialRecordId = \"\";\n    }\n\n    modifiedRec.matInfoId = \"\";\n    modifiedRec.matDbId = \"\";\n    modifiedRec.approvedBy = \"\";\n    modifiedRec.rejectedBy = \"\";\n    modifiedRec.editFlag = true;\n    modifiedRec.copyFlag = false;\n    modifiedRec.overrideComment = \"\";\n\n    /*\n    updated by: vighnesh\n    updated on : april 26, 2022\n\n    AGHP-2553 implementation\n    once the material is copied/modified from the material table level, system should not carry forward the material level attachments\n    start with clean slate & do not show the panel untill saved as draft.\n    */\n    modifiedRec.materialAttachments = []; //-- code commented may 2, 2022 since not included in QA CR #CHG000010825314\n\n\n\n\n    /*\n    2021ENHANCEMENTS\n    updated by : vighnesh\n    udpated on : july 12, 2021\n\n    it was observed that for batch records, system was displaying batchadmin as userID & name for copied/modified materials.\n    remediation: pass the current logged in user ID & name\n    */\n    modifiedRec.materialRequesterName = g_users.full_name;\n    modifiedRec.materialRequesterEmail = g_users.email;\n    modifiedRec.materialRequestDate = setDate();\n\n    /*\n    2021ENHANCEMENTS\n    updated by : vighnesh\n    udpated on : feb 8, 2022\n\n    it was observed that when user did the copy/modify from the material table level, for copied/modified material records, \n    system displayed parent record's requested timing date instead of current date. \n    REQ TIMING TO BRING ON ASL must not be old than current date.\n\n    remediation: pass the current date when record is copied/modified\n    */\n    //modifiedRec.materialRequestedTimeOnASL = new Date().toLocaleDateString('en-US',options);\n    modifiedRec.materialRequestedTimeOnASL =  setDate();\n    modifiedRec.materialTypeOfRequest = (action === 'COPY') ? 'ADD' : 'MODIFY';\n\n\n\n    for (var q = 0; q < modifiedRec.questionnaire.length; q++) {\n        modifiedRec.questionnaire[q].questionDbId = \"\";\n        modifiedRec.questionnaire[q].questionInfoId = \"\";\n        modifiedRec.questionnaire[q].matInfoId = \"\";\n    }\n    for (var p = 0; p < modifiedRec.purchasingSys.length; p++) {\n        modifiedRec.purchasingSys[p].purchasingSysInfoId = \"\";\n        modifiedRec.purchasingSys[p].purchasingSysDbId = \"\";\n        modifiedRec.purchasingSys[p].matInfoId = \"\";\n    }\n\n\n\n    modifiedRec.uniqueKey = genKeyForMaterial(modifiedRec, modifiedRec.supplierType);\n    ModelData.Add(oTableAddMaterial, modifiedRec);\n\n\n    sortMTableCopyModify(hIndex);\n\n\n    /*To highlight the child record increment the index by 1*/\n    materialTableEdit_View(modifiedRec, true, action, (Number(hIndex) + 1));\n\n    if (action === 'MODIFY') {\n\n        //Update (apply lock) the Parent record \n        var name = sap.n ? AppCache.userInfo.username : g_users.userId;\n        var date = new Date().toUTCString()\n\n\n        if (itemData.matDbId) { //If material is created in DB\n            ModelData.UpdateField(oTableAddMaterial, \"matDbId\", itemData.matDbId, [\"lockedBy\", \"lockedDate\", \"editFlag\", \"changeLevel\"], [name, date, false, \"material\"]);\n\n        } else { //If material is not yet created in DB\n            ModelData.Update(oTableAddMaterial, \"uniqueKey\", itemData.uniqueKey, itemData);\n        }\n        g_mat_modified_pressed = true;\n    } else {\n        g_mat_copybutton_pressed = true;\n    }\n\n\n    countMaterial();\n}\n\nfunction genKeyForMaterial(data, sType) {\n\n    var v1,\n        v2,\n        v3 = sType,\n        v4,\n        v5,\n        v6;\n    if (data) {\n        v1 = data.jnjOpComp;\n        v2 = data.jnjOrg;\n        v3 = sType;\n        v4 = data.jnjSegment;\n        v5 = data.jnjSite;\n        v6 = data.jnjRegion;\n    } else {\n\n    }\n\n\n    return (new Date().valueOf()) + (v1 + v2 + v3 + v4 + v5 + v6).trim();\n}\n\nfunction clearBusLinkCharacterLimit() {\n    labRemCountPurSysID.setText();\n    labRemCountPurSysName.setText();\n    labRemCountLocAdd.setText();\n}\n//VIGHESH 05/04\nfunction clearMaterialCharacterLimit() {\n    labRemCountCLRat.setText();\n    labRemCountPrdDesc.setText();\n\n    clearBusLinkCharacterLimit();\n}\n\nfunction sortMTableCopyModify(ind) {\n    var tableData = oTableAddMaterial.getModel().getData();\n\n\n    tableData.splice((ind + 1), 0, tableData[tableData.length - 1]);\n    tableData.splice(tableData.length - 1);\n\n\n    oTableAddMaterial.getModel().setData(tableData);\n\n}\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nudpated on: nov 1, 2021\nupdate the reason for add/mod\nfunction to reset the material level fields\n*/\nfunction resetMaterialFields() {\n\n    oInputMatReqTime.setValue();\n\n    oComboBoxSupplierType.setSelectedKey();\n\n    oComboBoxRiskCatgGroup.setSelectedKey();\n    oComboBoxRiskCatgGroup.setBlocked(true);\n    oComboBoxRiskCatgGroup.setPlaceholder(\"Enter Supplier Type first\");\n\n    oComboBoxCriticalityLevel.setSelectedKey();\n\n    txtMatReaAddMod.setValue();\n    labRemMatResAddMod.setText();\n\n    txtCLRationale.setValue();\n    labRemCountCLRat.setText();\n\n    txtPrdPartDesc.setValue();\n    labRemCountPrdDesc.setText();\n\n    oComboBoxCrucialSupplierStatus.setSelectedKey();\n    oComboBoxCriticalSubContStatus.setSelectedKey();\n\n    oComboBoxOEM.setSelectedKey();\n\n    txtOverrideCom.setValue();\n    labRemCountOverride.setText();\n\n    oComboBoxOpComp.setSelectedKey();\n    oComboBoxjnjSite.setSelectedKey();\n    oComboBoxSegment.setSelectedKey();\n    oComboBoxQualOrg.setSelectedKey();\n\n\n    oComboBoxRiskCatgGroup.setBlocked(true);\n    oHBoxOverride.setVisible(false);\n\n\n    createQandA(null, true); //CLEARS QUESTIONS\n    resetJnjContact(); //Clears JNJ CONTACT AND PURCHASING SYSTEM DATA\n    clearMaterialHighlightedfields();\n\n    /*Not clearing globals here because copy record has reset button */\n\n}\n\n/*For MODIFY at supplier level. Add material button should be hidden*/\nfunction isAddMaterialBtnVisible() {\n    var pData = pageSupplier.getModel().getData();\n\n    if (pData) {\n        return pData.parentSupplierInfoId && pData.parentSupplierInfoId !== \"\" ? false : true;\n    } else {\n        return false;\n    }\n}\n\n\n\n\n/*\n2021ENHANCEMENTS\nudpated by : vighnesh\nupdated on : march 24, 2022\n\nfunction to check the material duplicates while saving as DRAFT / submitting\nremediation : if at all there exist at least 1 same material having exact same combination of the below fields, will flag as duplicate \nPROD INC : INC000025053162\ndefect :  AGHP-XXXX\n*/\nfunction checkMatDupes() {\n\n    let duplicates;\n    let dupExist = false;\n\n    let matRecs = oTableAddMaterial.getModel().getData();\n\n    if (matRecs && matRecs.length > 0) {\n\n        /*\n        design clue: modified records CAN have duplicate values\n        check only for COPY records or records with no static material ID\n        */\n\n        /*\n        material duplicates are checked against following fields:\n        (officially)\n        supplier Type\n        Risk Catg\n        Criticality level\n        Segment\n        Qual Org\n        OpCo\n        Site\n        Region\n        */\n\n        duplicates = matRecs.filter((tag, index, array) => {\n            if (tag.materialTypeOfRequest === \"ADD\" && tag.materialRecordId === \"\") {\n                let foundIndex = array.findIndex(t =>\n\n                    t.supplierType.trim().toLowerCase() === tag.supplierType.trim().toLowerCase() &&\n                    t.riskCatgGroup.trim().toLowerCase() === tag.riskCatgGroup.trim().toLowerCase() &&\n                    t.criticalityLevel.trim().toLowerCase() === tag.criticalityLevel.trim().toLowerCase() &&\n                    t.jnjSegment.trim().toLowerCase() === tag.jnjSegment.trim().toLowerCase() &&\n                    t.jnjOrg.trim().toLowerCase() === tag.jnjOrg.trim().toLowerCase() &&\n                    t.jnjOpComp.trim().toLowerCase() === tag.jnjOpComp.trim().toLowerCase() &&\n                    t.jnjSite.trim().toLowerCase() === tag.jnjSite.trim().toLowerCase() &&\n                    t.jnjRegion.trim().toLowerCase() === tag.jnjRegion.trim().toLowerCase()\n                )\n                return foundIndex != index;\n            }\n        })\n\n    }\n\n\n    if (duplicates && duplicates.length > 0) {\n        //material duplicates exist\n        dupExist = true;\n    }\n\n    return dupExist;\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"945320e4-c552-4335-837c-15294223bcae","fieldName":"SContactTableJS","fieldParent":"272005f6-9f2b-4468-c476-ce829a4a3162","fieldPos":831,"fieldType":"neptune.Script","script":"const txt_subtn = \"UPDATE CONTACT\",\n    txt_sabtn = \"ADD CONTACT\",\n    txt_smsg1 = \"Contact info with similar details already exist in the table\";\nlet g_contact_editval;\n\n\n/*\nfunction to validate supplier contacts\nUPDATED BY: VIGHNESH\noct 11, 2021\n2021ENHANCEMENTS\n*/\nfunction supplierContactValidate() {\n\n    let err = \"\";\n    let errorMsg = [];\n    if (oInputSupplierContactInfofName.getValue() === \"\" &&\n        oInputSupplierContactInfoLName.getValue() === \"\" &&\n        oInputSupplierContactInfoPhNum.getValue() === \"\" &&\n        oInputSupplierContactInfoemail.getValue() === \"\" &&\n        oInputSupplierContactInfoPhNum.getValue() === \"\" &&\n        oInputSupplierContactInfoWlink.getValue() === \"\") {\n        errorMsg.push(\"\\n  First Name \\n Last Name \\n Email \\n Title/Position \\n Phone Number\");\n\n    }\n    if (errorMsg.length > 0) {\n        err += \"Please enter atleast one of the following fields : \\n \" + errorMsg.toString();\n        showMessageToast(err);\n        return false;\n    }\n\n    if (oInputSupplierContactInfoemail.getValue() !== \"\") {\n\n        let email = oInputSupplierContactInfoemail.getValue()\n        let a = validateEmail(email);\n\n        if (a) {\n            supplierTableAdd();\n        } else {\n            showMessageToast(\"Please enter a valid Email like: \" + \"\\n\" + \"johndoe@its.jnj.com or johndoe@gmail.com\");\n            return false;\n        }\n    } else {\n        supplierTableAdd();\n    }\n}\n\n\n\nfunction supplierTableEdit(sel) {\n    highlightSelectedRow(oTableSupplierContactInfo, sel);\n\n    var s = sel.getBindingContext().getObject();\n    s = JSON.parse(JSON.stringify(s));\n\n    oInputSupplierContactInfofName.setValue(s.firstName);\n    oInputSupplierContactInfoWlink.setValue(s.websiteLink);\n    oInputSupplierContactInfoLName.setValue(s.lastName);\n    oInputSupplierContactInfoPhNum.setValue(s.phone);\n    oInputSupplierContactInfoemail.setValue(s.email);\n\n    btnSupADDContact.setText(txt_subtn);\n\n    g_contact_editval = s.contactDbId || s.uniqueKey;\n\n}\n\nfunction supplierTableDel(sel) {\n    dialogDelConfirm('Are you sure want delete this Contact?', sel, () => {\n        var s = sel.getBindingContext().getObject();\n\n        if (s.contactDbId) {\n            ModelData.Delete(oTableSupplierContactInfo, \"contactDbId\", s.contactDbId);\n            ajaxDeleteExistingRowId(s.contactDbId, \"asl_supplier_contacts\", s);\n            //VIGHNESHJUNE25\n            showMessageToast(\"Supplier Contact successfully deleted\");\n\n        } else {\n            ModelData.Delete(oTableSupplierContactInfo, \"uniqueKey\", s.uniqueKey);\n            //VIGHNESHJUNE17\n            showMessageToast(\"Supplier Contact successfully deleted\");\n        }\n        if (s.email === oInputSupplierContactInfoemail.getValue().trim()) {\n            supplierClearInput();\n        }\n\n        supplierTableCount();\n        g_dialog.close();\n        //g_dialog = undefined;\n    }, (oEvent) => {\n        g_dialog.close();\n        //g_dialog = undefined;\n    });\n\n}\n\nfunction supplierTableAdd() {\n\n    var firstName = oInputSupplierContactInfofName.getValue(),\n        lastName = oInputSupplierContactInfoLName.getValue(),\n        phone = oInputSupplierContactInfoPhNum.getValue(),\n        websiteLink = oInputSupplierContactInfoWlink.getValue(),\n        email = oInputSupplierContactInfoemail.getValue();\n\n    /*Check whether same id exist in table or not*/\n    var data = ModelData.FindFirst(oTableSupplierContactInfo, [\"firstName\", \"lastName\", \"phone\", \"websiteLink\", \"email\"], [firstName, lastName, phone, websiteLink, email]);\n    var errFlag;\n    if (data && !g_contact_editval) {\n        errFlag = true;\n    } else if (data && g_contact_editval) {\n        if (data.uniqueKey && data.uniqueKey !== g_contact_editval) {\n            errFlag = true;\n        } else if (data.contactDbId && data.contactDbId !== g_contact_editval) {\n            errFlag = true;\n        }\n    }\n\n    if (errFlag) {\n        showMessageToast(txt_smsg1);\n        return;\n    }\n\n\n    var obj;\n\n    if (g_contact_editval && !g_contact_editval.includes('C')) {\n        obj = {\n            firstName: firstName,\n            lastName: lastName,\n            phone: oInputSupplierContactInfoPhNum.getValue(),\n            websiteLink: oInputSupplierContactInfoWlink.getValue(),\n            email: oInputSupplierContactInfoemail.getValue(),\n            contactDbId: g_contact_editval\n        };\n    } else {\n        obj = {\n            firstName: firstName,\n            lastName: lastName,\n            phone: oInputSupplierContactInfoPhNum.getValue(),\n            websiteLink: oInputSupplierContactInfoWlink.getValue(),\n            email: oInputSupplierContactInfoemail.getValue(),\n            uniqueKey: g_contact_editval,\n            userId: g_users.userId,\n            supplierInfoId: g_supplierId\n        };\n    }\n\n    if (g_contact_editval) { //Update\n\n        if (obj.contactDbId) {\n            ModelData.Update(oTableSupplierContactInfo, \"contactDbId\", g_contact_editval, obj);\n        } else {\n            ModelData.Update(oTableSupplierContactInfo, \"uniqueKey\", g_contact_editval, obj);\n        }\n\n        g_contact_editval = undefined; //CLEAR GLOBAL\n    } else { //Add\n        obj.uniqueKey = 'C_' + new Date().getTime();\n        ModelData.Add(oTableSupplierContactInfo, obj);\n    }\n\n    supplierClearInput();\n\n    btnSupADDContact.setText(txt_sabtn);\n\n    supplierTableCount();\n\n}\n\n\nfunction supplierTableCount() {\n\n    var len = oTableSupplierContactInfo.getModel().getData().length || 0;\n    len = len <= 5 ? len : 5;\n    oTableSupplierContactInfo.setVisibleRowCount(len);\n\n    if (len === 0) {\n        oTableSupplierContactInfo.setVisible(false);\n    } else {\n        oTableSupplierContactInfo.setVisible(true);\n    }\n}\n\n\n//function to reset supplier contact panel\nfunction supplierClearInput() {\n    oInputSupplierContactInfofName.setValue();\n    oInputSupplierContactInfoWlink.setValue();\n    oInputSupplierContactInfoLName.setValue();\n    oInputSupplierContactInfoPhNum.setValue();\n    oInputSupplierContactInfoemail.setValue();\n\n    btnSupADDContact.setText(txt_sabtn);\n    highlightSelectedRow(oTableSupplierContactInfo);\n}\n\n\n\nfunction supplierEnableFields(status, skipBtnToggle) {\n    oInputSupplierContactInfofName.setEnabled(status);\n    oInputSupplierContactInfoWlink.setEnabled(status);\n    oInputSupplierContactInfoLName.setEnabled(status);\n    oInputSupplierContactInfoPhNum.setEnabled(status);\n    oInputSupplierContactInfoemail.setEnabled(status);\n    oColumnSupContactBtn.setVisible(status);\n\n    if (!skipBtnToggle) {\n        supplierContactBtns(status);\n    }\n}\n\n\nfunction supplierContactBtns(status) {\n    if (g_action === 'VIEW' &&\n        g_selectedRole === g_roleNameRequester &&\n        //VIGHNESHJUNE4\n        g_dashboard_navItem !== \"ASL\") {\n        btnModifyContact.setText('MODIFY CONTACT');\n        btnModifyContact.setVisible(true);\n        btnCancelContact.setVisible(false);\n        btnSupADDContact.setVisible(false);\n        supplierClearInput();\n    } else {\n        btnModifyContact.setVisible(false);\n        btnCancelContact.setVisible(false);\n        btnSupADDContact.setVisible(status);\n    }\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"186dc497-44bd-4d2f-f247-bbf22a725374","fieldName":"JnJMaterialContactTableJS","fieldParent":"272005f6-9f2b-4468-c476-ce829a4a3162","fieldPos":832,"fieldType":"neptune.Script","script":"const txt_jnjccount = \"J&J INFORMATION: \";\nlet g_edit_jnj_contact;\nvar tempContactModel = new sap.ui.model.json.JSONModel();\noTableJnJInfoData.setModel(tempContactModel);\noTableJnJInfoData.bindAggregation(\"rows\", {\n    path: \"/\",\n    template: oColumnjnjAactions,\n    templateShareable: false\n});\n\n\n/*\nfunction to add & update J&J information --segment, QualOrg, OpCo, Site & Region\nupdated by: VIGHNESH\nupdated on: oct 11, 2021\nreplaced var with let & removed unwanted comments\n*/\nfunction addUpdateJnjInfoContact() {\n\n    let check = checkMaterialJnJSiteMandatoryFields();\n\n    if (check === false) {\n        return;\n    }\n\n    let data = {\n        jnjOpComp: oComboBoxOpComp.getSelectedKey(),\n        jnjOrg: oComboBoxQualOrg.getSelectedKey(),\n        jnjSite: oComboBoxjnjSite.getSelectedKey(),\n        jnjSegment: oComboBoxSegment.getSelectedKey(),\n        jnjRegion: oComboBoxjnjRegion.getSelectedKey()\n    }\n\n\n    let checkInContactable = ModelData.FindFirst(oTableJnJInfoData, [\"jnjOpComp\", \"jnjOrg\", \"jnjSite\", \"jnjSegment\", \"jnjRegion\"], [data.jnjOpComp, data.jnjOrg, data.jnjSite, data.jnjSegment, data.jnjRegion]);\n\n    if (Object.keys(checkInContactable).length > 0 && !g_edit_jnj_contact) {\n        showMessageToast(\"This J&J Contact Information Already Exist\");\n        return;\n    } else if (Object.keys(checkInContactable).length > 0 && g_edit_jnj_contact) {\n        if (checkInContactable.id !== g_edit_jnj_contact) {\n            showMessageToast(\"This J&J Contact Information Already Exist\");\n            return;\n        }\n    }\n\n\n    if (oTableAddMaterial.getModel().getData().length > 0) {\n\n        let d = {\n            jnjOpComp: data.jnjOpComp,\n            jnjOrg: data.jnjOrg,\n            jnjSite: data.jnjSite,\n            jnjSegment: data.jnjSegment,\n            jnjRegion: data.jnjRegion,\n            supplierType: oComboBoxSupplierType.getSelectedKey(),\n            riskCatgGroup: oComboBoxRiskCatgGroup.getSelectedKey(),\n            criticalityLevel: oComboBoxCriticalityLevel.getSelectedKey()\n        }\n\n        let checkInMaterialTable = checkForDuplicatesMaterialTable(d);\n\n        if (Object.keys(checkInMaterialTable).length > 0) {\n            showMessageToast(\"Cannot add this record as it results in duplicate material\");\n            return;\n        }\n\n    }\n\n    data.purchasingSys = oTablePurchaseSys.getModel().getData();\n    data.countPurchasingSys = data.purchasingSys.length\n\n    data = JSON.parse(JSON.stringify(data));\n    data.id = g_edit_jnj_contact || new Date().getTime(); //primary key\n\n\n    data.jnjQualityContact = getStringFromTokenQC();\n    data.jnjSupplierLiason = getStringFromTokenSL();\n    data.jnjSourcingContact = getStringFromTokenSC();\n\n    ModelData.Update(oTableJnJInfoData, \"id\", data.id, data);\n\n    g_edit_jnj_contact = undefined; //clear GLOBAL\n\n    resetJnjContact();\n\n    jnjContactTableCount();\n\n    highlightSelectedRow(oTableJnJInfoData);\n}\n\n\n/*\nfunction to reset J&J information --segment, QualOrg, OpCo, Site, Region, 3 contacts\nupdated by: VIGHNESH\nupdated on: oct 11, 2021\n*/\nfunction resetJnjContact() {\n\n    if (g_selectedRole === 'REQ') {\n        oComboBoxSegment.setSelectedKey('MD'); //THIS SHOULD ALWAYS BE DEFAULT VALUES FOR REQ\n        oComboBoxQualOrg.setSelectedKey('Supply Chain Source');\n        oComboBoxQualOrg.setBlocked(false);\n    } else {\n        oComboBoxSegment.setSelectedKey();\n        oComboBoxQualOrg.setSelectedKey();\n        oComboBoxQualOrg.setBlocked(true);\n    }\n\n    oComboBoxOpComp.setSelectedKey();\n    oComboBoxjnjSite.setSelectedKey();\n    oComboBoxjnjRegion.setSelectedKey();\n\n\n    oComboBoxQualOrg.setPlaceholder('Select J&J Segment First');\n\n    oComboBoxjnjSite.setBlocked(true);\n    oComboBoxjnjSite.setPlaceholder('Select J&J Operating Company First');\n    oButtonAddJnjInfo.setText(\"ADD J&J INFORMATION\");\n\n\n    oMultiInputQualContact.removeAllTokens();\n    oMultiInputProContactM.removeAllTokens();\n    oMultiInputSrcContact.removeAllTokens();\n\n\n    oMultiInputQualContact.setValue();\n    oMultiInputProContactM.setValue();\n    oMultiInputSrcContact.setValue();\n\n    clearJnJHighlightedfields();\n\n    oTablePurchaseSys.getModel().setData([]);\n    purchaseTableCount();\n\n    purchaseClearInput();\n    g_edit_jnj_contact = undefined;\n    highlightSelectedRow(oTableJnJInfoData);\n\n}\n\nfunction jnjContactTableCount() {\n    var len = oTableJnJInfoData.getModel().getData().length || 0;\n    oTableJnJInfoData.setVisibleRowCount(len);\n\n    if (len === 0) {\n        oBarJNJContact.setVisible(false);\n        oTableJnJInfoData.setVisible(false);\n    } else {\n        oBarJNJContact.setVisible(true);\n        oTableJnJInfoData.setVisible(true);\n    }\n\n    oTextMaterialjnjNumb.setText(txt_jnjccount + len);\n\n    purchaseTableCount();\n}\n\nfunction jnjContactTableDel(sel) {\n    dialogDelConfirm('Are you sure want delete this J&J Contact?', sel, () => {\n        var s = sel.getBindingContext().getObject();\n        ModelData.Delete(oTableJnJInfoData, \"id\", s.id);\n\n        resetJnjContact();\n        jnjContactTableCount();\n        g_dialog.close();\n        //g_dialog = undefined;\n    }, (oEvent) => {\n        g_dialog.close();\n        //g_dialog = undefined;\n    });\n\n\n}\n\nfunction jnjContactTableEdit(sel) {\n    highlightSelectedRow(oTableJnJInfoData, sel);\n    var s = sel.getBindingContext().getObject();\n\n    g_edit_jnj_contact = s.id; //SET GLOBAL\n\n    //05/01 PREM\n    if (s.purchasingSys) {\n        oTablePurchaseSys.getModel().setData(JSON.parse(JSON.stringify(s.purchasingSys)));\n        purchaseTableCount();\n    }\n    oComboBoxSegment.setSelectedKey(s.jnjSegment);\n    oComboBoxSegment.fireChange(); //Loads new items in dependent combobox \n\n    oComboBoxOpComp.setSelectedKey(s.jnjOpComp);\n    oComboBoxOpComp.fireChange();\n    createTokensFromString(oMultiInputQualContact, s.jnjQualityContact);\n    createTokensFromString(oMultiInputProContactM, s.jnjSupplierLiason);\n    createTokensFromString(oMultiInputSrcContact, s.jnjSourcingContact);\n\n\n    //Setting delay \n    setTimeout(function () {\n        oComboBoxQualOrg.setSelectedKey(s.jnjOrg);\n        oComboBoxjnjRegion.setSelectedKey(s.jnjRegion);\n        oComboBoxjnjSite.setSelectedKey(s.jnjSite);\n\n\n        oComboBoxQualOrg.setBlocked(false);\n        oComboBoxQualOrg.setPlaceholder('Select J&J Segment First');\n\n        oComboBoxjnjSite.setBlocked(false);\n        oComboBoxjnjSite.setPlaceholder('Select J&J Operating Company First');\n        oButtonAddJnjInfo.setText(\"UPDATE J&J INFORMATION\");\n    }, 500);\n\n\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"268797d3-af17-435d-e148-1c19c17b2958","fieldName":"MaterialQuestions","fieldParent":"272005f6-9f2b-4468-c476-ce829a4a3162","fieldPos":833,"fieldType":"neptune.Script","script":"let g_questions = {\n    Q0: \"\",\n    Q1: \"\",\n    Q2: \"\",\n    Q3: \"\",\n    Q4: \"\",\n    Q5: \"\",\n    Q6: \"\",\n    Q7: \"\",\n    Q8: \"\",\n    Q9: \"\",\n    Q10: \"\",\n    Q11: \"\",\n    Q12: \"\",\n    Q13: \"\",\n    Q14: \"\",\n    Q15: \"\",\n    Q16: \"\",\n    Q17: \"\"\n};\n\n// var m1 = new sap.ui.model.json.JSONModel(),\n//     m2 = new sap.ui.model.json.JSONModel(),\n//     m3 = new sap.ui.model.json.JSONModel(),\n//     m4 = new sap.ui.model.json.JSONModel();\n\n// oListQuestionNA.setModel(m1);\n// oListQuestionsScope.setModel(m2);\n// oListQuestionsTable1.setModel(m3);\n// oListQuestionsTable2.setModel(m4);\n\n// oListQuestionNA.bindItems('/', oCustomListItem);\n// oListQuestionsScope.bindItems('/', oCustomListItemSC);\n// oListQuestionsTable1.bindItems('/', oCustomListItemSS);\n// oListQuestionsTable2.bindItems('/', oCustomListItemSCS);\n\nfunction sortDataArray(data, sortKey) {\n\n    if (!data) {\n        return\n    }\n    data.sort(function (a, b) {\n        return parseInt(a[sortKey]) - parseInt(b[sortKey]); //a[sortKey].localeCompare(b[sortKey]);\n    });\n    return data;\n}\n\nfunction createQandA(matData, editable) {\n\n    if (!matData) {\n        matData = [];\n    }\n\n    var na = [];\n    var a_scope = [];\n    var a_cruc = [];\n    var a_s_cruc = [];\n\n    var searchVal = function (id, myArray) {\n        for (var i = 0; i < myArray.length; i++) {\n            if (myArray[i].qId === id) {\n                return myArray[i];\n            }\n        }\n    };\n    var descData = questionsDesHolder.getModel().getData();\n\n    descData = sortDataArray(descData, 'priority');\n\n    for (i = 0; i < descData.length; i++) {\n\n        if (descData[i].isDeleted !== false) { //05/01 -PREM\n            continue;\n        }\n\n        var existingData = searchVal(descData[i].qId, matData);\n        var selR = -1;\n        var obj;\n\n        if (existingData) {\n            g_questions[descData[i].qId] = existingData.value;\n            if (existingData.value === \"Yes\") {\n                selR = 0;\n            } else if (existingData.value === \"No\") {\n                selR = 1;\n            } else {\n                selR = -1;\n            }\n            obj = {\n                value: selR,\n                description: descData[i].description,\n                qId: descData[i].qId,\n                matInfoId: existingData.matInfoId || \"\",\n                supplierInfoId: existingData.supplierInfoId || \"\",\n                priority: descData[i].priority,\n                questionDbId: existingData.questionDbId || \"\",\n                questionInfoId: existingData.questionInfoId || \"\",\n                qHeader: descData[i].qHeader,\n                custom_field_q_editable: editable,\n                changedAnswer: existingData.changedAnswer\n            };\n\n            g_questions[descData[i].qId] = existingData.value; //POPULATE GLOBAL\n        } else {\n            obj = {\n                value: selR,\n                description: descData[i].description,\n                qId: descData[i].qId,\n\n                priority: descData[i].priority,\n                questionDbId: \"\",\n                qHeader: descData[i].qHeader,\n                custom_field_q_editable: editable,\n                changedAnswer: 'None'\n            };\n\n            g_questions[descData[i].qId] = \"\"; //POPULATE GLOBAL\n        }\n\n        //NA table\n        if (descData[i].qHeader == \"Scope\") {\n            a_scope.push(obj);\n        } else if (descData[i].qHeader == \"Table 1 - Crucial Supplier\") {\n            a_cruc.push(obj);\n        } else if (descData[i].qHeader == \"Table 2 - Critical Sub-Contractor\") {\n            a_s_cruc.push(obj);\n        } else {\n            na.push(obj);\n        }\n    }\n\n    modeloListQuestionNA.setData(na);\n    modeloListQuestionsScope.setData(a_scope);\n    modeloListQuestionsTable1.setData(a_cruc);\n    modeloListQuestionsTable2.setData(a_s_cruc);\n\n    // oListQuestionNA.getModel().setData(na);\n    // oListQuestionsScope.getModel().setData(a_scope);\n    // oListQuestionsTable1.getModel().setData(a_cruc);\n    // oListQuestionsTable2.getModel().setData(a_s_cruc);\n\n    checkTablesVisibility();\n}\n\nfunction selectionOnQuestion(val) {\n    var d = val.getSource().getBindingContext().getObject();\n    let txt_val;\n    if (d.value === 0) {\n        txt_val = 'Yes';\n    } else if (d.value === 1) {\n        txt_val = 'No';\n    } else {\n        txt_val = '';\n    }\n\n    g_questions[d.qId] = txt_val;\n\n    if (d.qId === 'Q0' && txt_val === 'Yes') {\n        oPanelScope.setVisible(true);\n\n        oComboBoxCrucialSupplierStatus.setSelectedKey();\n\n        toggleSubContBoxes(true);\n        oComboBoxCriticalSubContStatus.setSelectedKey();\n        g_cri_cru_flag = true;\n        toggleOverrideComment();\n\n    } else if (d.qId === 'Q0' && (txt_val === 'No' || txt_val === \"\")) {\n        oComboBoxCrucialSupplierStatus.setSelectedKey(\"Not Applicable\");\n        oComboBoxCriticalSubContStatus.setSelectedKey(\"Not Applicable\");\n\n        toggleSubContBoxes(true);\n\n        hideOverrideCommentPanel();\n\n\n        //Clear all Question selections\n        for (const questionId in g_questions) {\n            g_questions[questionId] = \"\";\n        }\n        g_questions.Q0 = \"No\";\n    }\n\n    checkTablesVisibility();\n\n}\n\nfunction checkTablesVisibility() {\n\n    var table1Visibility = false;\n\n    if (g_questions.Q0 === \"Yes\") {\n        oPanelScope.setVisible(true);\n    } else if (g_questions.Q0 === \"No\" || g_questions.Q0 === \"\") {\n        oPanelScope.setVisible(false);\n        clearRadiosScope();\n    }\n\n    if (g_questions.Q1 === \"Yes\" ||\n        g_questions.Q2 === \"Yes\" ||\n        g_questions.Q3 === \"No\" ||\n        g_questions.Q4 === \"No\" ||\n        g_questions.Q5 === \"Yes\" ||\n        g_questions.Q6 === \"No\") {\n        table1Visibility = true;\n    }\n    oPanelTable1.setVisible(table1Visibility);\n    oPanelTable2.setVisible(table1Visibility);\n\n    if (table1Visibility === false) {\n        //If Tables 1 & 2 not opened values in both drop down should be NO\n        if (g_questions.Q1 === \"No\" &&\n            g_questions.Q2 === \"No\" &&\n            g_questions.Q3 === \"Yes\" &&\n            g_questions.Q4 === \"Yes\" &&\n            g_questions.Q5 === \"No\" &&\n            g_questions.Q6 === \"Yes\") {\n            oComboBoxCrucialSupplierStatus.setSelectedKey(\"No\");\n            oComboBoxCriticalSubContStatus.setSelectedKey(\"No\");\n            hideOverrideCommentPanel();\n        }\n        clearRadiosTable1();\n        clearRadiosTable2();\n    } else {\n        // oComboBoxCrucialSupplierStatus.setSelectedKey();\n        // oComboBoxCriticalSubContStatus.setSelectedKey();\n    }\n}\n\nfunction hideOverrideCommentPanel() {\n    txtOverrideCom.setValue();\n    labRemCountOverride.setText();\n    oHBoxOverride.setVisible(false);\n}\nfunction clearRadiosScope() {\n    var s = oListQuestionsScope.getModel().getData();\n    for (var c = 0; c < s.length; c++) {\n        s[c].value = -1;\n    }\n    oListQuestionsScope.getModel().refresh();\n}\n\nfunction clearRadiosTable1() {\n    var t1 = oListQuestionsTable1.getModel().getData();\n    for (var c = 0; c < t1.length; c++) {\n        t1[c].value = -1;\n    }\n    oListQuestionsTable1.getModel().refresh();\n\n    g_questions.Q7 = \"\";\n    g_questions.Q8 = \"\";\n    g_questions.Q9 = \"\";\n}\n\nfunction clearRadiosTable2() {\n    var t2 = oListQuestionsTable2.getModel().getData();\n    for (var c = 0; c < t2.length; c++) {\n        t2[c].value = -1;\n    }\n    oListQuestionsTable2.getModel().refresh();\n\n    g_questions.Q10 = \"\";\n    g_questions.Q11 = \"\";\n    g_questions.Q12 = \"\";\n    g_questions.Q13 = \"\";\n    g_questions.Q14 = \"\";\n    g_questions.Q15 = \"\";\n    g_questions.Q16 = \"\";\n    g_questions.Q17 = \"\";\n\n\n}\n\nfunction setTable1BasedStatus() {\n\n    oComboBoxCrucialSupplierStatus.setSelectedKey(getCrucialSupplierStatus());\n    hideOverrideCommentPanel();\n    toggleOverrideComment();\n}\n\n/**\n * Name: questionnaireScript\n * Description: function for questionnaire Validation For Table2\n * Created By : Vighnesh Sawant  \n * Created At: 4/8/2020\n * CR:  \n */\nfunction setTable2BasedStatus() {\n    oComboBoxCriticalSubContStatus.setSelectedKey(getCriticalSubContStatus());\n    hideOverrideCommentPanel();\n    toggleOverrideComment();\n}\n\nfunction clearGlobalSel() {\n    Object.keys(g_questions).forEach(k => g_questions[k] = \"\");\n}\n\n\n\nfunction getCrucialSupplierStatus() {\n    let crucialSupplierStatus = \"\";\n    if (g_questions.Q0 === \"No\") crucialSupplierStatus = \"Not Applicable\";\n    else if (g_questions.Q0 === \"Yes\" && !oPanelTable1.getVisible()) {\n        if (g_questions.Q1 === \"No\" &&\n            g_questions.Q2 === \"No\" &&\n            g_questions.Q3 === \"Yes\" &&\n            g_questions.Q4 === \"Yes\" &&\n            g_questions.Q5 === \"No\" &&\n            g_questions.Q6 === \"Yes\") {\n            crucialSupplierStatus = \"No\";\n        }\n    } else if (oPanelTable1.getVisible()) {\n        if (g_questions.Q7 !== \"\" || g_questions.Q8 !== \"\" || g_questions.Q9 === \"No\") {\n            crucialSupplierStatus = \"No\";\n        }\n        if ((g_questions.Q7 === \"Yes\" &&\n            g_questions.Q8 === \"Yes\") ||\n            g_questions.Q9 === \"Yes\") {\n            crucialSupplierStatus = \"Yes\";\n        }\n\n    }\n    return crucialSupplierStatus;\n}\n\nfunction getCriticalSubContStatus() {\n    let criticalSubContStatus = \"\";\n    if (g_questions.Q0 === \"No\") criticalSubContStatus = \"Not Applicable\";\n    else if (oPanelTable2.getVisible()) {\n\n        if (g_questions.Q10 === \"Yes\" ||\n            g_questions.Q11 === \"Yes\" ||\n            g_questions.Q12 === \"Yes\" ||\n            g_questions.Q13 === \"Yes\" ||\n            g_questions.Q14 === \"Yes\" ||\n            g_questions.Q15 === \"Yes\" ||\n            g_questions.Q16 === \"Yes\" ||\n            g_questions.Q17 === \"Yes\") {\n            criticalSubContStatus = \"Yes\";\n        } else {\n            criticalSubContStatus = \"No\";\n        }\n    } else if (g_questions.Q0 === \"Yes\" && !oPanelTable2.getVisible()) {\n        if (g_questions.Q1 === \"No\" &&\n            g_questions.Q2 === \"No\" &&\n            g_questions.Q3 === \"Yes\" &&\n            g_questions.Q4 === \"Yes\" &&\n            g_questions.Q5 === \"No\" &&\n            g_questions.Q6 === \"Yes\") {\n            criticalSubContStatus = \"No\";\n        }\n    }\n    return criticalSubContStatus;\n}\n\n\n\n","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"aec9b71f-020c-484e-c61c-4338f2b6becd","fieldName":"AUDITSQAATableJS","fieldParent":"272005f6-9f2b-4468-c476-ce829a4a3162","fieldPos":834,"fieldType":"neptune.Script","script":"let g_approval_audit_sqaa_edit_rec;\n\n\nfunction editAuditRelations(sel) {\n    var i = sel.getBindingContext().getObject();\n\n    oInputxAuditSystemStored.setValue(i.audit_systemStored);\n    oInputxAuditRecordNumber.setValue(i.audit_recordNumber);\n\n\n    g_approval_audit_sqaa_edit_rec = {\n        audit_systemStored: i.audit_systemStored,\n        audit_recordNumber: i.audit_recordNumber,\n        uniqueKey: i.uniqueKey\n    };\n\n\n    diaViewAUDIT.close();\n\n    btnAddRelationAudit.setText('UPDATE');\n}\n\nfunction editSQAARelations(sel) {\n    var i = sel.getBindingContext().getObject();\n\n    oInputReferenceNumber.setValue(i.sqagreement_refNumber);\n    oInputLocationName.setValue(i.sqagreement_locName);\n\n\n    g_approval_audit_sqaa_edit_rec = {\n        sqagreement_refNumber: i.sqagreement_refNumber,\n        sqagreement_locName: i.sqagreement_locName,\n        uniqueKey: i.uniqueKey\n    };\n\n\n    diaViewSQAA.close()\n\n    btnAddRelationSQAA.setText('UPDATE');\n}\n\n\nfunction addAuditRelations() {\n\n    var v1 = oInputxAuditSystemStored.getValue().trim();\n    var v2 = oInputxAuditRecordNumber.getValue().trim();\n\n    if (v1 === \"\" && v2 === \"\") {\n        //VIGHNESHJULY8\n        oInputxAuditRecordNumber.removeStyleClass(\"inputfield\");\n        oInputxAuditRecordNumber.addStyleClass(\"error\");\n        oInputxAuditSystemStored.removeStyleClass(\"inputfield\");\n        oInputxAuditSystemStored.addStyleClass(\"error\");\n        //VIGHNESHJUNE8\n        showMessageToast('Please enter the following fields: ' + \"\\n\" + \"\\n\" + \"* Reference Number\" + \"\\n\" + \"* System Stored\");\n        return;\n    } else if (v1 === \"\") {\n        //VIGHNESHJULY8\n        oInputxAuditSystemStored.removeStyleClass(\"inputfield\");\n        oInputxAuditSystemStored.addStyleClass(\"error\");\n\n        showMessageToast('Please enter the following field: ' + \"\\n\" + \"\\n\" + \"* System Stored\");\n        return;\n    } else if (v2 === \"\") {\n        //VIGHNESHJULY8\n        oInputxAuditRecordNumber.removeStyleClass(\"inputfield\");\n        oInputxAuditRecordNumber.addStyleClass(\"error\");\n\n        //VIGHNESHJUNE8\n        showMessageToast('Please enter the following field: ' + \"\\n\" + \"\\n\" + \"* Reference Number\");\n        return;\n    }\n\n    var c1 = ModelData.FindFirst(oTableAudit, \"audit_systemStored\", v1);\n\n    if (g_approval_audit_sqaa_edit_rec) {\n        if (c1 && g_approval_audit_sqaa_edit_rec.uniqueKey !== c1.uniqueKey) {\n            showMessageToast('System Stored Record already exists');\n            return;\n        }\n    } else if (c1) {\n        showMessageToast('System Stored Record already exists');\n        return;\n    }\n\n\n    var c2 = ModelData.FindFirst(oTableAudit, \"audit_recordNumber\", v2);\n\n    if (g_approval_audit_sqaa_edit_rec) {\n        if (c2 && g_approval_audit_sqaa_edit_rec.uniqueKey !== c2.uniqueKey) {\n            //VIGHNESHJUNE8\n            showMessageToast('Reference Number already exists');\n            return;\n        }\n    } else if (c2) {\n        //VIGHNESHJUNE8\n        showMessageToast('Reference Number already exists');\n        return;\n    }\n    var obj = {\n        audit_systemStored: v1,\n        audit_recordNumber: v2\n    };\n    if (g_approval_audit_sqaa_edit_rec) {\n        obj.uniqueKey = g_approval_audit_sqaa_edit_rec.uniqueKey;\n        ModelData.Update(oTableAudit, [\"uniqueKey\"], g_approval_audit_sqaa_edit_rec.uniqueKey, obj);\n    } else {\n        obj.uniqueKey = new Date().valueOf();\n        ModelData.Update(oTableAudit, [\"audit_systemStored\", \"audit_recordNumber\"], [v1, v2], obj);\n    }\n    btnViewRelationAudit.setText(oTableAudit.getModel().getData().length);\n    oInputxAuditSystemStored.setValue();\n    oInputxAuditRecordNumber.setValue();\n    //VIGHNESHJULY8\n    oInputxAuditSystemStored.removeStyleClass(\"error\");\n    oInputxAuditSystemStored.addStyleClass(\"inputfield\");\n    oInputxAuditRecordNumber.removeStyleClass(\"error\");\n    oInputxAuditRecordNumber.addStyleClass(\"inputfield\");\n    //VIGHNESHJULY8ENDS\n\n    btnAddRelationAudit.setText('ADD');\n    g_approval_audit_sqaa_edit_rec = undefined;\n}\n\n\n/*\nnote : function to add SQAA relations\nupdated by: vighnesh\nupdated on: oct 11, 2021\nfixed highlighting issues\n*/\nfunction addSQAARelations() {\n\n    var v1 = oInputReferenceNumber.getValue().trim();\n    var v2 = oInputLocationName.getValue().trim();\n\n    if (v1 === \"\" && v2 === \"\") {\n        oInputReferenceNumber.removeStyleClass(\"inputfield\");\n        oInputReferenceNumber.addStyleClass(\"error\");\n        oInputLocationName.removeStyleClass(\"inputfield\");\n        oInputLocationName.addStyleClass(\"error\");\n        showMessageToast(\"Please enter the following fields: \" + \"\\n\" + \"\\n\" + \"* Reference Number\" + \"\\n\" + \"* Location Name\");\n        return;\n    } else if (v1 === \"\") {\n        oInputReferenceNumber.removeStyleClass(\"inputfield\");\n        oInputReferenceNumber.addStyleClass(\"error\");\n        showMessageToast(\"Please enter the following field: \" + \"\\n\" + \"\\n\" + \"* Reference Number\");\n        return;\n    } else if (v2 === \"\") {\n        oInputLocationName.removeStyleClass(\"inputfield\");\n        oInputLocationName.addStyleClass(\"error\");\n        showMessageToast(\"Please enter the following field: \" + \"\\n\" + \"\\n\" + \"* Location Name\");\n        return;\n\n    }\n\n    var c1 = ModelData.FindFirst(oTableSQAA, \"sqagreement_refNumber\", v1);\n\n    if (g_approval_audit_sqaa_edit_rec) {\n        if (c1 && g_approval_audit_sqaa_edit_rec.uniqueKey !== c1.uniqueKey) {\n            showMessageToast('Reference number already exists');\n            return;\n        }\n    } else if (c1) {\n        showMessageToast('Reference number already exists');\n        return;\n    }\n\n\n    var c2 = ModelData.FindFirst(oTableSQAA, \"sqagreement_locName\", v2);\n\n    if (g_approval_audit_sqaa_edit_rec) {\n        if (c2 && g_approval_audit_sqaa_edit_rec.uniqueKey !== c2.uniqueKey) {\n            showMessageToast('Location Name already exists');\n            return;\n        }\n    } else if (c2) {\n        showMessageToast('Location Name already exists');\n        return;\n    }\n\n\n\n    var obj = {\n        sqagreement_refNumber: v1,\n        sqagreement_locName: v2\n    };\n\n    if (g_approval_audit_sqaa_edit_rec) {\n        obj.uniqueKey = g_approval_audit_sqaa_edit_rec.uniqueKey;\n        ModelData.Update(oTableSQAA, [\"uniqueKey\"], g_approval_audit_sqaa_edit_rec.uniqueKey, obj);\n    } else {\n        obj.uniqueKey = new Date().valueOf();\n        ModelData.Update(oTableSQAA, [\"sqagreement_refNumber\", \"sqagreement_locName\"], [v1, v2], obj);\n    }\n\n\n    //2021ENH -- to remove the highlighting when clicked on ADD button\n    oInputReferenceNumber.removeStyleClass(\"error\");\n    oInputReferenceNumber.addStyleClass(\"inputfield\");\n    oInputLocationName.removeStyleClass(\"error\");\n    oInputLocationName.addStyleClass(\"inputfield\");\n\n    btnViewRelationSQAA.setText(oTableSQAA.getModel().getData().length);\n    oInputReferenceNumber.setValue();\n    oInputLocationName.setValue();\n    btnAddRelationSQAA.setText('ADD');\n\n    g_approval_audit_sqaa_edit_rec = undefined;\n}\n\n\nfunction setAuditRelationData(value) {\n\n    if (!value) {\n        value = \"\";\n    }\n    if (value === \"\") {\n        value = [];\n    }\n\n    var rec;\n    try {\n        rec = JSON.parse(value);\n    } catch (e) {\n        rec = JSON.parse(JSON.stringify(value));\n    }\n\n    //PRODUCTION ISSUE FIX AGHP-2020\n    //Prepare AUDIT System record.\n    // [{sys1:rr1},{sys2:rr2}]\n    var mAuditRec = value;\n    var objArr = [];\n    if (mAuditRec && mAuditRec.length > 3 && mAuditRec.indexOf('audit_recordNumber') === -1) {\n        if (mAuditRec.includes(\"[\") && mAuditRec.includes(\"]\")) {\n            mAuditRec = mAuditRec.substring(1, mAuditRec.length - 1); //to slice or remove [] if present - vighnesh\n        }\n        let splitter = ',';\n        splitter = mAuditRec.indexOf(splitter) === -1 ? ', ' : splitter;\n        var properties = mAuditRec.split(splitter);\n        properties.forEach(function (property) {\n            if (property.includes(\"{\") && property.includes(\"}\")) { //to slice or remove {} if present - vighnesh\n                property = property.substring(1, property.length - 1);\n            }\n            var tup = property.split(':');\n            if (tup[0].trim() !== \"\" || tup[1].trim() !== \"\") { //to handle empty data like this [{:}] - vighnesh\n                objArr.push({\n                    audit_recordNumber: tup[1],\n                    audit_systemStored: tup[0]\n                });\n            }\n\n        });\n    }\n    //if (objArr.length === 0 && mAuditRec.length > 0 && !mAuditRec.includes(\":\")) { //to handle the left out : - vighnesh\n    if (objArr.length === 0 && mAuditRec.length > 0) { //VIGHNESHMAR25\n        objArr = JSON.parse(value);\n    }\n\n    //oTableAudit.getModel().setData(rec);\n    oTableAudit.getModel().setData(objArr);\n    //PRODUCTION ISSUE FIX AGHP-2020 ENDS\n    btnViewRelationAudit.setText(oTableAudit.getModel().getData().length);\n\n    btnAddRelationAudit.setText('ADD');\n    g_approval_audit_sqaa_edit_rec = undefined;\n\n}\n\nfunction setSqaaRelationData(value) {\n    if (!value) {\n        value = \"\";\n    }\n\n    if (value === \"\") {\n        value = [];\n    }\n\n    var rec;\n    try {\n        rec = JSON.parse(value);\n    } catch (e) {\n\n        rec = JSON.parse(JSON.stringify(value));\n    }\n    //PRODUCTION ISSUE FIX AGHP-2020\n    //Prepare SQAA System record.\n    // [{sys1:rr1},{sys2:rr2}]\n    var mSQAARec = value;\n    var objArr = [];\n    if (mSQAARec && mSQAARec.length > 3 && mSQAARec.indexOf('sqagreement_refNumber') === -1) {\n        if (mSQAARec.includes(\"[\") && mSQAARec.includes(\"]\")) {\n            mSQAARec = mSQAARec.substring(1, mSQAARec.length - 1);; //to slice or remove [{}] if present - vighnesh\n        }\n        let splitter = ',';\n        splitter = mSQAARec.indexOf(splitter) === -1 ? ', ' : splitter;\n        var properties = mSQAARec.split(splitter);\n        properties.forEach(function (property) {\n            if (property.includes(\"{\") && property.includes(\"}\")) { //to slice or remove {} if present - vighnesh\n                property = property.substring(1, property.length - 1);\n            }\n            var tup = property.split(':');\n            if (tup[0].trim() !== \"\" || tup[1].trim() !== \"\") { //to handle empty data like this [{:}] - vighnesh\n                objArr.push({\n                    sqagreement_refNumber: tup[0],\n                    sqagreement_locName: tup[1]\n                });\n            }\n        });\n    }\n    //if (objArr.length === 0 && mSQAARec.length > 0 && !mSQAARec.includes(\":\")) { //to handle the left out : - vighnesh\n    if (objArr.length === 0 && mSQAARec.length > 0) { //VIGHNESHMAR25\n        objArr = JSON.parse(value);\n    }\n\n    //oTableSQAA.getModel().setData(rec);\n    oTableSQAA.getModel().setData(objArr);\n    //PRODUCTION ISSUE FIX AGHP-2020 ENDS\n\n    btnViewRelationSQAA.setText(oTableSQAA.getModel().getData().length);\n\n    btnAddRelationSQAA.setText('ADD');\n    g_approval_audit_sqaa_edit_rec = undefined;\n\n}\n\n","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"fc566e75-5e74-4af0-bc3e-e6eef7d452f4","fieldName":"Approvals","fieldParent":99999,"fieldPos":835,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"151221e5-ccb0-41b1-8ed4-69336fc366b3","fieldName":"SQAApproverFunctions","fieldParent":"fc566e75-5e74-4af0-bc3e-e6eef7d452f4","fieldPos":836,"fieldType":"neptune.Script","script":"\n/*function to prepare Email list for RQC, SQA, Audit and Elevated**/\nfunction prepEmailsList() {\n    //Notification to RQC\n    if (oMultiComboBoxRQCEmailGroup.getSelectedKeys().length > 0) {\n        //send email Notification\n        let RQCEmails = {};\n        RQCEmails.id = \"RQC\";\n        RQCEmails.emailList = oMultiComboBoxRQCEmailGroup.getSelectedKeys();\n\n        sqaNotifEmailsList.push(RQCEmails);\n    }\n    //Notification to confirm Audit is required\n    if (comboAuditGrp.getSelectedKeys().length > 0) {\n        //send email notification\n        let auditEmails = {};\n        auditEmails.id = \"Audit\";\n        auditEmails.emailList = comboAuditGrp.getSelectedKeys(); \n\n        sqaNotifEmailsList.push(auditEmails);\n    }\n\n    //Notification to inform SQA for required workflow\n    if (oMultiComboBoxSQAEmailGroup.getSelectedKeys().length > 0) {\n        //Send email notification\n        let sqaEmails = {};\n        sqaEmails.id = \"SQA\";\n        sqaEmails.emailList = oMultiComboBoxSQAEmailGroup.getSelectedKeys();\n\n        sqaNotifEmailsList.push(sqaEmails);\n\n    }\n\n    //Notification to elevated users\n    if (oMultiComboElevatedApp.getSelectedKeys().length > 0) {\n        //send email Notification\n        let elevatedEmails = {};\n        elevatedEmails.id = \"ElevatedApprover\";\n        elevatedEmails.emailList = oMultiComboElevatedApp.getSelectedKeys();\n\n        sqaNotifEmailsList.push(elevatedEmails);\n    }\n\n}\n\nfunction postSQApprovalInfo(lineItemApprover, sqaNotifEmailsList) {\n    let auditRequired;\n    let sqaRequired;\n    let supplierQualityApproved;\n    let quaStat;\n    let pendingApproverStatus = [\"SQA\"];\n\n    supplierQualityApproved = true;\n\n    if (radioBtnAuditY.getSelected() === true) {\n        auditRequired = \"Yes\";\n        pendingApproverStatus.push(\"Audit\");\n\n    } else {\n        auditRequired = \"No\";\n    }\n\n\n    if (radioSQAgrmntY.getSelected() === true) {\n        sqaRequired = \"Yes\";\n        pendingApproverStatus.push(\"Supplier Quality Aggrement\");\n    } else {\n        sqaRequired = \"No\";\n    }\n\n    if (oComboQualificationStatus.getValue() !== \"\") {\n        quaStat = oComboQualificationStatus.getValue();\n    } else {\n        quaStat = oComboQualificationStatus.getSelectedKey();\n    }\n\n    if ((lineItemApprover.crucialSupplierStatus && lineItemApprover.crucialSupplierStatus.toLowerCase() === \"yes\") && \n    (lineItemApprover.criticalSubContStatus && lineItemApprover.criticalSubContStatus.toLowerCase() === \"yes\")) {\n        pendingApproverStatus.push(\"Regulatory/Quality Compliance\");\n    }\n\n\n\n    for (var j = 0; j < matListforSQApproval.length; j++) {\n        var options = {\n            parameters: {\n                \"sqaGrInfoId\": g_users.full_name, // Optional \n                \"matInfoId\": matListforSQApproval[j].matId, // Optional \n                \"supplierId\": matListforSQApproval[j].supId, // Optional \n                \"sqaConfirmation\": true, // Optional \n                \"returnToReq\": sqaRettoReqFlag, // Optional \n                \"sqaConfirmedByEmail\": g_users.email, // Optional \n                \"sqaConfirmedByName\": oTextSQAConfirmedBy.getText(),\n                \"sqaConfirmedDate\": oTextSQAConfirmedAt.getText(), // Optional \n                \"auditRequired\": auditRequired, // Optional \n                \"standardsRegulations\": txtAreaStandReg.getValue(), // Optional \n                \"auditComments\": txtAreaAuditComments.getValue(), // Optional \n                \"sqaRequired\": sqaRequired, // Optional \n                \"sqaType\": inpComboSQAgrmntTyp.getSelectedKey(), // Optional \n                \"existForSegment\": radioSQDoesExistAgrmntY.getSelected() === true ? \"Yes\" : \"No\", // Optional \n                \"sqaRefNum\": inpReferenceNumber.getValue(), // Optional \n                \"sqaLocationName\": inpLocationName.getValue(), // Optional \n                \"qualificationStatus\": quaStat, // Optional \n                \"qualificationAttachments\": \"attachments\", // Optional \n                // \"qualificationPackageConfirmation\": oRadioButtonQAQuaPckYes.getSelected() === true ? \"Yes\" : \"No\", // 05/11 \n                \"qualificationPackageConfirmation\": \"Yes\",\n                \"qualificationRatSummary\": txtAreaQualificationRationale.getValue(), // Optional \n                \"sqPckConfirmedByEmail\": oTextSQAConfirmBy.setText(), // Optional \n                \"sqPckConfirmedDate\": oTextSQAConfirmedDate.getText(), // Optional \n                \"sqPckConfirmedByName\": oTextASLQAOfUser.getText(),\n                \"elevatedApprover\": \"elevatedAppEmails\", //oMultiComboElevatedApp.getSelectedKeys(), // Optional \n                \"reqQualCompAttachments\": \"test\", // Optional \n                \"pendingApprover\": pendingApproverStatus.toString()\n            },\n            data: {\n                sqaNotifEmailsList\n            }\n        };\n\n        apiPostSQApprovalInfo(options);\n    }\n\n    resetSQApprovalfields();\n}\n","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"acd9a769-96b9-4aa0-abd3-edbd35ab35a9","fieldName":"oJavascriptSignature","fieldParent":"fc566e75-5e74-4af0-bc3e-e6eef7d452f4","fieldPos":837,"fieldType":"neptune.Script","script":"let WRONG_UIDPWD = \"Wrong username/password combination\";\nlet userId = g_users.userId; //TODO:Satya - This is only for temporary purpose. This can e replaced with global variable for user id.\n\nfunction signQualification() {\n    return signTargetSystems([{\n        name: 'OneASL',\n        url: location.protocol + \"//\" + location.hostname //sap.n.Planet9.server\n    }]);\n}\n\nfunction signTargetSystems(systems) {\n    return authTargetSystems(0, systems);\n}\n\nfunction authTargetSystems(i, systems) {\n    systems[i].isSigned = false;\n\n    return new Promise(function (resolve) {\n\n        inUsername.setValue(userId);\n        inUsername.setEditable(false);\n\n\n        diaTargetAuth.open();\n        diaTargetAuth.callback = function (rec) {\n\n            sap.ui.core.BusyIndicator.show(0); //multiple click\n\n            var url = systems[i].url + \"/user/logon/local\";\n            if (rec.type && rec.path) {\n                url = systems[i].url + \"/user/logon/\" + rec.type + \"/\" + rec.path;\n            }\n\n            $.ajax({\n                type: \"POST\",\n                contentType: \"application/json\",\n                url: url,\n                data: JSON.stringify(rec),\n                success: function (data) {\n                    //sap.ui.core.BusyIndicator.hide();\n                    // Signing complete\n                    systems[i].isSigned = true;\n                    systems[i].signedUsername = rec.username;\n                    systems[i].signedPassword = rec.password;\n\n                    inUsername.setValue();\n                    inPassword.setValue();\n\n                    inUsername.setValueState();\n                    inPassword.setValueState();\n\n                    diaTargetAuth.close();\n\n                    if (diaTargetAuth.isOpen()) {\n                        if (g_selectedRole === \"ELEVATED\") {\n\n                            elevatedConfirmation();\n                        } else if (g_selectedRole === \"SQA\") {\n\n                            postSQATabData(\"QualPack\");\n                        }\n\n\n                        sap.m.MessageToast.show(\"Successfully authenticated\");\n                        return resolve(systems);\n                    }\n\n                },\n                error: function (result, status) {\n                    sap.ui.core.BusyIndicator.hide();\n                    if (result.status === 401) {\n                        inUsername.setValueState(\"Error\");\n                        inPassword.setValueState(\"Error\");\n                        sap.m.MessageToast.show(WRONG_UIDPWD);\n                    } else {\n                        if (result.responseJSON) {\n                            sap.m.MessageToast.show(result.status + \": \" + result.responseJSON.status);\n                        } else {\n                            sap.m.MessageToast.show(result.status + \": \" + result.statusText);\n                        }\n                    }\n                }\n            });\n        };\n        diaTargetAuth.callbackCancel = function () {\n\n            inUsername.setValue(\"\");\n            inPassword.setValue(\"\");\n\n            inUsername.setValueState();\n            inPassword.setValueState();\n\n            if (i < systems.length - 1) {\n                return authDeployment(i + 1, systems);\n            } else {\n                diaTargetAuth.close();\n                resolve(systems);\n            }\n        }\n    });\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"6fa820ab-e950-4b4e-b820-4a23091e3295","fieldName":"approversValidations&Post","fieldParent":"fc566e75-5e74-4af0-bc3e-e6eef7d452f4","fieldPos":838,"fieldType":"neptune.Script","script":"function removeSelectionApprover() {\n    var rows = oTableApprovers.getRows();\n    for (var r = 0; r < rows.length; r++) {\n        var c1 = rows[r].getCells()[0].getContent()[1];\n        if (typeof (c1.setSelected) === \"function\") {\n            c1.setSelected(false);\n        }\n    }\n}\n\n/*****************ASL*************************/\n\n/*\nNOTE: validation of ASL confirmation\nUPDATED: VIGHNESH\nUPDATED ON: sept 10, 2021\n*/\nfunction aslValidation() {\n    var d = oIconTabBarApproversList.getModel().getData();\n    /*\n    NOTE: here requester name at supplier level should not be considered, material level requester name must be considered since mails are triggered taking material into consideration\n    removing supplier requester name and passing material level requester name.\n    UPDATED BY: VIGHNESH\n    UPDATED ON: SEPT 1, 2021 \n    */\n    let reqFName = \"\";\n    if (d.material_materialRequesterName && d.material_materialRequesterName !== \"\") {\n        let n = d.material_materialRequesterName;\n        let ind = n.indexOf(\",\");\n        reqFName = n.substring(ind + 1);\n    }\n\n    let rejectedBy = d.material_rejectedBy;\n    let approvedBy = d.material_approvedBy;\n    let pendingApprover = d.material_pendingApprover;\n\n    const replaceString = ',' + g_selectedRole;\n    pendingApprover = pendingApprover.replace(replaceString, '');\n\n\n    if (g_selectedRole === g_roleNameAsl) {\n        if (oRadioButtonASLOwnerConfirmationYes.getSelected() === false && oRadioButtonASLOwnerConfirmationNo.getSelected() === false) {\n            const approverToast = \"Please select the following mandatory field: \\n \\n * ASL Owner\";\n            showMessageToast(approverToast);\n            sap.ui.core.BusyIndicator.hide(); //multiple click\n            return false;\n        }\n\n        let aslOwnerConf;\n        sap.ui.core.BusyIndicator.show(0);\n\n        //when ASL owners selects 'YES;\n        if (oRadioButtonGroup.getSelectedIndex() === 0) {\n\n            aslOwnerConf = \"Yes\";\n            if (approvedBy) {\n                approvedBy = approvedBy.includes(g_selectedRole) ? approvedBy : approvedBy + \",\" + g_selectedRole;\n            } else {\n                approvedBy = ',' + g_selectedRole;\n            }\n\n            //if no SQ contact is selected\n            if (oMultiComboBoxSendMail.getSelectedKeys().length === 0) {\n                const approverToast1 = \"Please select the following mandatory field: \\n \\n * Source Quality Contact\";\n                oMultiComboBoxSendMail.removeStyleClass(\"combobox\");\n                oMultiComboBoxSendMail.addStyleClass(\"error\");\n                showMessageToast(approverToast1);\n\n                sap.ui.core.BusyIndicator.hide(); //multiple click\n                return;\n            }\n\n\n            rejectedBy = \"\"; // -- TO CLEAR REJECTED BY ON APPROVING BY ASL\n            pendingApprover = ',' + g_roleNameSqa;\n\n            //when ASL owners selects 'NO;\n        } else if (oRadioButtonGroup.getSelectedIndex() === 1) {\n\n            //on selection of NO, user does not add comments \n            if (txtAreaASLcomments.getValue().trim() === \"\") {\n                const approverToast2 = \"Please enter the following mandatory field: \\n \\n * Comments on Return to Requester\";\n                txtAreaASLcomments.removeStyleClass(\"textbox\");\n                txtAreaASLcomments.addStyleClass(\"error\");\n                showMessageToast(approverToast2);\n                sap.ui.core.BusyIndicator.hide(); //multiple click\n                return;\n            }\n\n            aslOwnerConf = \"No\";\n            if (rejectedBy) {\n                rejectedBy = rejectedBy.includes(g_selectedRole) ? rejectedBy : rejectedBy + \",\" + g_selectedRole;\n            } else {\n                rejectedBy = ',' + g_selectedRole;\n            }\n            pendingApprover = ',' + g_roleNameRequester;\n\n        }\n\n        let emailIdSupplier = oMultiComboBoxSendMail.getSelectedKeys();\n        let namesSQ = oMultiComboBoxSendMail.getSelectedItems();\n\n        //if user selects 'ALL'\n        if (emailIdSupplier.includes(\"All\")) {\n            var index = emailIdSupplier.indexOf(\"All\");\n            emailIdSupplier.splice(index, 1);\n            namesSQ.shift();\n        }\n        d.material_pendingApprover = pendingApprover;\n        d.material_rejectedBy = rejectedBy;\n        d.material_approvedBy = approvedBy;\n\n        //preparing SQ contact array\n        var sqContactsArr = [];\n        if (emailIdSupplier.length > 0) {\n            for (let i = 0; i < emailIdSupplier.length; i++) {\n                let index1 = namesSQ[i].getText().indexOf(\",\");\n                let index2 = namesSQ[i].getText().indexOf(\"[\");\n                let username = namesSQ[i].getText().substring(index1 + 1, index2);\n                sqContactsArr.push({\n                    userId: emailIdSupplier[i],\n                    userName: username\n                });\n            }\n        }\n\n\n\n        var options = {\n\n            data: {\n\n                \"matDbId\": d.material_id,\n                \"matInfoId\": d.material_matInfoId,\n                \"aslOwnerConfirmation\": aslOwnerConf,\n                \"confirmedByName\": d.aslowner_confirmedByName,\n                \"confirmedByEmail\": d.aslowner_confirmedByEmail, // Optional \n                \"confirmDate\": d.aslowner_confirmDate, // Optional \n                \"sqaDbId\": d.sqagroup_id,\n                \"SQEmailId\": emailIdSupplier.toString(),\n                \"SQContact\": sqContactsArr,\n                \"comments\": txtAreaASLcomments.getValue().trim(),\n                \"requesterEmail\": d.material_materialRequesterEmail,\n                \"userId\": g_users.userId,\n                \"rejectedBy\": d.material_rejectedBy,\n                \"approvedBy\": d.material_approvedBy,\n                \"pendingApprover\": d.material_pendingApprover,\n                \"supplierInfoId\": d.material_supplierInfoId,\n                \"supplierRecordId\": pageSupplier.getModel().getData().supplierRecordId,\n                \"qualificationStatus\": d.material_qualificationStatus,\n                \"materialRecordId\": d.material_materialRecordId,\n                \"parentMaterialInfoId\": d.material_parentMaterialInfoId,\n                \"typeOfRequest\": oTextReqType.getText(), //supplier level\n                \"userRole\": g_selectedRole,\n\n                \"labelObject\": {\n                    \"SQContact\": oLabelASLEmailValues.getText(),\n                    \"aslOwnerConfirmation\": oLabelASLOwnerConfirmation.getText(),\n                    \"comments\": oLabelASLcomments.getText(),\n                    \"confirmDate\": oLabelASLConfirmedDate.getText(),\n                    \"confirmedByEmail\": oLabelASLOwnerConfirmedBy.getText(),\n                    \"confirmedByName\": oLabelASLApproverNameOfUser.getText()\n                },\n\n                //for email template\n                \"jnjSegment\": d.material_jnjSegment,\n                \"jnjQualOrg\": d.material_jnjOrg,\n                \"jnjOpComp\": d.material_jnjOpComp,\n                \"jnjSite\": d.material_jnjSite,\n                \"supType\": d.material_supplierType,\n                \"clLevel\": d.material_criticalityLevel,\n                \"riskCatg\": d.material_riskCatgGroup,\n                \"clRation\": d.material_clRationale,\n                \"name\": d.aslowner_confirmedByName,\n                \"supplierName\": oInputSupplierName.getValue().trim(),\n                \"materialID\": d.material_matInfoId,\n                \"requestType\": d.material_materialTypeOfRequest, //material level\n                \"reasonAddModi\": d.material_reasonForAddModi, //material level\n                \"reqTimeMatOnASL\": d.material_materialRequestedTimeOnASL,\n                \"requesterName\": reqFName\n            }\n\n        };\n\n        apioRestAPISubmitAslOwnerApprover(options);\n\n    } else {\n        showMessageToast(\"Please Choose the Role\");\n        sap.ui.core.BusyIndicator.hide(); //multiple click\n    }\n}\n/*****************SQA*************************/\n\n\n/*validation for audit panel in SQA tab*/\n\n\n/*\nNOTE: to validate the AUDIT panel in SQ tab, updated with busy indicators to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 10, 2021\n*/\nfunction sqaAuditPanelVal() {\n    let errorMsg = [];\n\n    if (oRadioButtonGroupAudit.getSelectedIndex() === -1) {\n        errorMsg.push(\"\\n * Audit Required\");\n\n    }\n\n    if (oRadioButtonGroupAudit.getSelectedIndex() === 0) {\n        if (comboAuditGrp.getSelectedItems().length === 0) {\n            errorMsg.push(\"\\n * Audit Group\");\n            comboAuditGrp.removeStyleClass(\"combobox\");\n            comboAuditGrp.addStyleClass(\"error\");\n        }\n    }\n\n    let err = \"\";\n    if (errorMsg.length > 0) {\n        err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString();\n        showMessageToast(err);\n        sap.ui.core.BusyIndicator.hide(); // -- multiple click\n        return false;\n    } else {\n\n        /*\n        2021ENHANCEMENTS\n        updated by: vighnesh\n        udpated on : April 25, 2022\n            \n        AGHP-2586 defect remediation\n        incident: INC000025184045\n\n        function to get pieces of updated approval information mandate for parallel approval workflow\n        it will run an API to bring pieces of updated approval information\n        we will no longer call the API to update the Audit data here instead will be called in AJAX success\n\n        DEV team note:\n        since SQA key wont help in the AJAX success of the updated approval API as there are 3 panels for forwarding the material.\n        we will use a separate key to indentify at the AJAX success end\n        key: same parameter as that of what the old function had.  \n\n        see script asl_getApprovalData for more info\n        */\n\n        getUpdatedApprovalInfo('SQ-AUDIT');\n\n    }\n\n}\n\n\n\n/*\nNOTE: to validate the SQAA panel in SQ tab, updated with busy indicators to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 10, 2021\n*/\nfunction sqaAgreementPanelVal() {\n    let errorMsg = [];\n    if (g_selectedRole === g_roleNameSqa) {\n\n        //sqaa required\n        if (oRadioButtonGroupSQA.getSelectedIndex() === -1) {\n            errorMsg.push(\"\\n * Quality Agreement Required\");\n\n        }\n\n        //type of QA\n        if (radioSQAgrmntY.getSelected() === true) {\n            if (inpComboSQAgrmntTyp.getSelectedKey() === \"\") {\n                errorMsg.push(\"\\n * Type of Supplier Quality Agreement\");\n\n                inpComboSQAgrmntTyp.removeStyleClass(\"combobox\");\n                inpComboSQAgrmntTyp.addStyleClass(\"error\");\n            }\n\n\n            //quality agreement contact field if visible \n            if (oVBoxSQAEmailGroup.getVisible()) {\n                if (oMultiComboBoxSQAEmailGroup.getSelectedItems().length === 0) {\n                    errorMsg.push(\"\\n * Supplier Quality Agreement contact\");\n\n                    oMultiComboBoxSQAEmailGroup.removeStyleClass(\"combobox\");\n                    oMultiComboBoxSQAEmailGroup.addStyleClass(\"error\");\n                }\n            }\n\n            //does exist\n            if (oRadioButtonGroupSQADoesExist.getSelectedIndex() === -1) {\n                let doesExist = lblSQSegRiskCat.getText();\n                doesExist = doesExist.substring(0, doesExist.length - 1);\n                errorMsg.push(\"\\n * \" + doesExist);\n\n            }\n        }\n\n        //reference number & location name to be visible only when Does exist is YES\n        if (radioSQDoesExistAgrmntY.getSelected()) {\n\n            //reference number\n            if (inpReferenceNumber.getValue() === \"\") {\n                errorMsg.push(\"\\n *  Reference Number\");\n                inpReferenceNumber.removeStyleClass(\"textbox\");\n                inpReferenceNumber.addStyleClass(\"error\");\n            }\n\n            //location name \n            if (inpLocationName.getValue() === \"\") {\n                errorMsg.push(\"\\n *  Location Name\");\n                inpLocationName.removeStyleClass(\"inputfield\");\n                inpLocationName.addStyleClass(\"error\");\n            }\n        }\n\n        let err = \"\";\n        if (errorMsg.length > 0) {\n            err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString();\n            showMessageToast(err);\n            sap.ui.core.BusyIndicator.hide(); // -- multiple click\n            return false;\n        } else {\n\n            /*\n            2021ENHANCEMENTS\n            updated by: vighnesh\n            udpated on : April 25, 2022\n            \n            AGHP-2586 defect remediation\n            incident: INC000025184045\n\n            function to get pieces of updated approval information mandate for parallel approval workflow\n            it will run an API to bring pieces of updated approval information\n            we will no longer call the API to update the Audit data here instead will be called in AJAX success\n\n            DEV team note:\n            since SQA key wont help in the AJAX success of the updated approval API as there are 3 panels for forwarding the material.\n            we will use a separate key to indentify at the AJAX success end\n            key: same parameter as that of what the old function had.  \n            */\n            getUpdatedApprovalInfo('SQ-SQAA');\n\n        }\n    }\n}\n\n\n\n\n\n\n/*\nNOTE: to validate the SQA APPROVAL tab, updated with busy indicators to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 10, 2021\nSQ APPROVAL TAB \n*/\nfunction sqaValidation() {\n    let errorMsg = [];\n\n    //check if confirm button in sqa-audit panel is visisble, if yes then audit confirmation is pending\n    if (oBntSQAAuditConfirm.getVisible() === true) {\n        errorMsg.push(\"\\n * Audit Approval\");\n    }\n\n    //check if confirm button in sqa-sqaa panel is visisble, if yes then sqaa confirmation is pending\n    if (oBtnSQASQAAconfirm.getVisible() === true) {\n        errorMsg.push(\"\\n * Supplier Quality Agreement Approval\");\n    }\n\n    //whether qualification status is choosen or not\n    if (oComboQualificationStatus.getSelectedKey().trim() === \"\") {\n        errorMsg.push(\"\\n * Qualification Status\");\n        oComboQualificationStatus.removeStyleClass(\"combobox\");\n        oComboQualificationStatus.addStyleClass(\"error\");\n    }\n\n    //rationale\n    if (txtAreaQualificationRationale.getValue().trim() === \"\") {\n        errorMsg.push(\"\\n * Qualification Rationale/Summary\");\n        txtAreaQualificationRationale.removeStyleClass(\"textbox\");\n        txtAreaQualificationRationale.addStyleClass(\"error\");\n    }\n\n    //second approver contacts\n    if (oVBoxQAEmailSendValues.getVisible()) {\n        if (oMultiComboElevatedApp.getSelectedKeys().length === 0) {\n            errorMsg.push(\"\\n * Second Approver\");\n            oMultiComboElevatedApp.removeStyleClass(\"combobox\");\n            oMultiComboElevatedApp.addStyleClass(\"error\");\n        }\n    }\n\n\n    let err = \"\";\n    if (errorMsg.length > 0) {\n        err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString();\n        showMessageToast(err);\n        sap.ui.core.BusyIndicator.hide(); // -- multiple click\n        return false;\n\n    }\n    /*else if ((oComboQualificationStatus.getSelectedKey() === g_qualStatQualified || oComboQualificationStatus.getSelectedKey() === g_qualStatSQA || oComboQualificationStatus.getSelectedKey() === g_qualStatInactive ||\n      oComboQualificationStatus.getSelectedKey() === g_qualStatDisqualified))*/\n\n\n    /*\n    2021ENHANCEMENTS\n    updated by : vighnesh\n    updated on : march 22, 2022\n\n    new code logic has been written under setcomboBox function to fetch all the qualification statuses & allow to be dynamic\n    before opening the E-signature for SQ, check is done whether selected qualification status belongs to the global array of statuses\n\n    TECH NOTE: this global array is dyanimcally populated with all the updated statuses.\n    */\n    else if (g_qualStatArr.indexOf(oComboQualificationStatus.getSelectedKey().trim()) !== -1) {\n        /*\n        if the selected qualfication value is found in array then open the E-sign window to approve else not\n        */\n        signQualification();\n    }\n    else {\n\n        /*\n        else loop to capture if the qualification status chosen is not part of global array, so \n        show an error message\n        */\n        let sq_approvals_err_txt = 'Invalid / Incorrect Qualification status Recieved while performing E-signature \\n Please have the correct qualification status chosen';\n        showMessageToast(sq_approvals_err_txt);\n        sap.ui.core.BusyIndicator.hide();\n\n        //postSQATabData(\"QualPack\"); //why is this here? To-Do: vighnesh\n\n    }\n}\n\n\n\n\n\n/*\nNOTE: To post SQ tab values to DB (inlcudes values of all 3 panels), updated with busy indicators to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 10, 2021\nSQ APPROVAL TAB \n*/\nfunction postSQATabData(action) {\n\n    var d = oIconTabBarApproversList.getModel().getData();\n    let pendingApproval = d.material_pendingApprover;\n    let approvedBy = d.material_approvedBy;\n    let rejectedBy = d.material_rejectedBy;\n\n\n    let flagResendClick = g_approver_before_resending_sqadata.sqaBlock.length > 0 ? true : false;\n    //RESET GLOBAL\n    g_approver_before_resending_sqadata = {\n        sqaBlock: [],\n        oldData: undefined\n    };\n\n    /*declaration to pass in body*/\n    let auditConf;\n    let sqaRequired;\n\n    var approveObj = {\n        \"matInfoId\": d.material_matInfoId,\n        \"id\": d.sqagroup_id,\n    };\n    const approvalEmailContacts = {};\n\n    const sendEmailsObj = {};\n\n    if (approvedBy) {\n        approvedBy = approvedBy.includes(g_selectedRole) ? approvedBy : approvedBy + ',' + g_selectedRole;\n    }\n\n\n    /*RETURN panel in SQ tab*/\n    if (action === \"SQAReject\") {\n        if (rejectedBy) {\n            rejectedBy = rejectedBy.includes(g_selectedRole) ? rejectedBy : rejectedBy + \",\" + g_selectedRole;\n        } else {\n            rejectedBy = ',' + g_selectedRole;\n        }\n        const replaceString = ',' + g_selectedRole;\n        approvedBy = approvedBy.includes(g_selectedRole) ? approvedBy.replace(replaceString, '') : approvedBy;\n\n\n        if (pendingApproval) {\n            pendingApproval = pendingApproval.includes(g_selectedRole) ? pendingApproval.replace(replaceString, '') : pendingApproval;\n        }\n        if (oRadioButtonGrpPanel1SQAConf.getSelectedIndex() === 0) { // Maneesh\n            if (pendingApproval) {\n                pendingApproval = pendingApproval.includes(g_roleNameAsl) ? pendingApproval : pendingApproval + ',' + g_roleNameAsl;\n            } else {\n                pendingApproval = ',' + g_roleNameAsl;\n            }\n            approveObj[\"returnTo\"] = g_roleNameAsl;\n            approvedBy = '';\n        } else if (oRadioButtonGrpPanel1SQAConf.getSelectedIndex() === 1) {\n            if (pendingApproval) {\n                pendingApproval = pendingApproval.includes(g_roleNameRequester) ? pendingApproval : pendingApproval + ',' + g_roleNameRequester;\n            } else {\n                pendingApproval = ',' + g_roleNameRequester;\n            }\n            approveObj[\"returnTo\"] = g_roleNameRequester;\n        } else {\n            // Non selection conditions go here.\n        }\n\n        // approvedBy = oRadioButtonGrpPanel1SQAConf.getSelectedIndex() === 0 ? 'REQ' : oRadioButtonGrpPanel1SQAConf.getSelectedIndex() === 1 ? '' : null;\n        approveObj[\"rejectionComments\"] = txtAreaSQARejComments.getValue();\n        approveObj[\"rejectedByName\"] = g_users.full_name;\n        approveObj[\"rejectedByEmail\"] = g_users.email;\n        approveObj[\"rejectedDate\"] = new Date().toUTCString().substring(\"5\");\n        sendEmailsObj[\"requesterEmail\"] = d.material_materialRequesterEmail;\n        sendEmailsObj[\"aslContact\"] = d.aslowner_confirmedByEmail;\n\n\n\n        const returnReqName = d.material_materialRequesterName;\n        const returnReqNameIndex = returnReqName.indexOf(\",\");\n        sendEmailsObj[\"requesterName\"] = returnReqName.substring(returnReqNameIndex + 1);\n        const returnASLName = d.aslowner_confirmedByName;\n        const returnASLNameIndex = returnASLName.indexOf(\",\");\n        sendEmailsObj[\"aslName\"] = returnASLName.substring(returnASLNameIndex + 1);\n\n    }\n\n    /*AUDIT panel in SQ tab*/\n    if (action === \"AUDIT\") {\n        if (radioBtnAuditY.getSelected()) {\n            auditConf = \"Yes\";\n            if (pendingApproval) {\n                pendingApproval = pendingApproval.includes(g_roleNameAudit) ? pendingApproval : pendingApproval + ',' + g_roleNameAudit; // Maneesh\n            } else {\n                pendingApproval = ',' + g_roleNameAudit;\n            }\n        } else {\n            auditConf = \"No\";\n        }\n\n        /*\n        NOTE: fix when audit group is not present -- audit required as No\n        */\n        let auditGrp = [];\n        if (oVBoxAuditGrp.getVisible()) {\n            auditGrp = comboAuditGrp.getSelectedKeys();\n            var namesAUDIT = comboAuditGrp.getSelectedItems();\n        }\n\n\n        //if users select 'ALL'\n        if (auditGrp.includes(\"All\")) {\n            const index = auditGrp.indexOf(\"All\");\n            auditGrp.splice(index, 1);\n            namesAUDIT.shift();\n        }\n\n        //preparing audit contacts array\n        var auditContactsArr = [];\n        for (let i = 0; i < auditGrp.length; i++) {\n            let index1 = namesAUDIT[i].getText().indexOf(\",\");\n            let index2 = namesAUDIT[i].getText().indexOf(\"[\");\n            let username = namesAUDIT[i].getText().substring(index1 + 1, index2);\n            auditContactsArr.push({\n                userId: auditGrp[i],\n                userName: username\n            });\n        }\n        sendEmailsObj['auditGrp'] = auditContactsArr;\n\n\n        approveObj[\"auditRequired\"] = auditConf;\n        approveObj[\"auditGrp\"] = auditGrp.toString();\n        approveObj[\"standardsRegulations\"] = txtAreaStandReg.getValue().trim();\n        approveObj[\"auditComments\"] = txtAreaAuditComments.getValue().trim();\n        approveObj[\"auditConfirmedByName\"] = g_users.full_name;\n        approveObj[\"auditConfirmedByEmail\"] = g_users.email;\n        approveObj[\"auditConfirmedDate\"] = new Date().toUTCString().substring(\"5\");\n\n        const replaceString = ',' + g_roleNameAudit;\n        approvedBy = approvedBy && approvedBy.includes(g_roleNameAudit) ? approvedBy.replace(replaceString, '') : approvedBy;\n        rejectedBy = rejectedBy && rejectedBy.includes(g_roleNameAudit) ? rejectedBy.replace(replaceString, '') : rejectedBy;\n    }\n\n\n    /*SQAA panel in SQ tab*/\n    if (action === \"SQAA\") {\n\n        if (radioSQAgrmntY.getSelected()) {\n            sqaRequired = \"Yes\";\n            if (radioSQADoesExistgrmntN.getSelected()) {\n                if (pendingApproval) {\n                    pendingApproval = pendingApproval.includes(g_roleNameSqaa) ? pendingApproval : pendingApproval + ',' + g_roleNameSqaa;\n                } else {\n                    pendingApproval = ',' + g_roleNameSqaa;\n                }\n            }\n        } else {\n            sqaRequired = \"No\";\n        }\n\n        let sqaaContact = oMultiComboBoxSQAEmailGroup.getSelectedKeys();\n        let namesSQAA = oMultiComboBoxSQAEmailGroup.getSelectedItems();\n\n        //to include all the contacts if ALL is selected\n        if (sqaaContact.includes(\"All\")) {\n            const index = sqaaContact.indexOf(\"All\");\n            sqaaContact.splice(index, 1);\n            namesSQAA.shift();\n        }\n\n        //preparing sqaa contacts\n        let sqaaContactsArr = [];\n        for (let i = 0; i < sqaaContact.length; i++) {\n            let index1 = namesSQAA[i].getText().indexOf(\",\");\n            let index2 = namesSQAA[i].getText().indexOf(\"[\");\n            let username = namesSQAA[i].getText().substring(index1 + 1, index2);\n            sqaaContactsArr.push({\n                userId: sqaaContact[i],\n                userName: username\n            });\n        }\n\n\n        sendEmailsObj['sqaaContact'] = sqaaContactsArr;\n        approveObj[\"sqaaRequired\"] = sqaRequired;\n        approveObj[\"sqaaType\"] = inpComboSQAgrmntTyp.getSelectedKey();\n        approveObj[\"sqaaContact\"] = sqaaContact.toString();\n        approveObj[\"existForSegment\"] = radioSQDoesExistAgrmntY.getSelected() ? 'Yes' : 'No';\n        approveObj[\"sqaaRefNum\"] = inpReferenceNumber.getValue().trim();\n        approveObj[\"sqaaLocationName\"] = inpLocationName.getValue().trim();\n        approveObj[\"sqaaConfirmedByName\"] = g_users.full_name;\n        approveObj[\"sqaaConfirmedByEmail\"] = g_users.email;\n        approveObj[\"sqaaConfirmedDate\"] = new Date().toUTCString().substring(\"5\");\n\n\n        const replaceString = ',' + g_roleNameSqaa;\n        approvedBy = approvedBy && approvedBy.includes(g_roleNameSqaa) ? approvedBy.replace(replaceString, '') : approvedBy;\n        rejectedBy = rejectedBy && rejectedBy.includes(g_roleNameSqaa) ? rejectedBy.replace(replaceString, '') : rejectedBy;\n    }\n\n    /*RQC panel in SQ tab*/\n    if (action === \"SQARegulatory\") {\n\n        //only when at least 1 RQC contact exist in the drop down\n        if (oMultiComboBoxRQCEmailGroup.getSelectedKeys().length > 0) {\n            let rqcContact = oMultiComboBoxRQCEmailGroup.getSelectedKeys();\n            let namesRQC = oMultiComboBoxRQCEmailGroup.getSelectedItems();\n\n            //users selects ALL\n            if (rqcContact.includes(\"All\")) {\n                const index = rqcContact.indexOf(\"All\");\n                rqcContact.splice(index, 1);\n                namesRQC.shift();\n            }\n\n            //preparing RQC contact Array\n            let rqcContactsArr = [];\n            for (let i = 0; i < rqcContact.length; i++) {\n                let index1 = namesRQC[i].getText().indexOf(\",\");\n                let index2 = namesRQC[i].getText().indexOf(\"[\");\n                let username = namesRQC[i].getText().substring(index1 + 1, index2);\n                rqcContactsArr.push({\n                    userId: rqcContact[i],\n                    userName: username\n                });\n            }\n            sendEmailsObj['rqcContact'] = rqcContactsArr;\n\n            approveObj[\"rqcContact\"] = rqcContact.toString();\n            approveObj[\"rqcConfirmedByName\"] = g_users.full_name;\n            approveObj[\"rqcConfirmedByEmail\"] = g_users.email;\n            approveObj[\"rqcConfirmedDate\"] = new Date().toUTCString().substring(\"5\");\n\n            if (pendingApproval) {\n                pendingApproval = pendingApproval.includes(g_roleNameRqc) ? pendingApproval : pendingApproval + ',' + g_roleNameRqc;\n            } else {\n                pendingApproval = ',' + g_roleNameRqc;\n            }\n        }\n        const replaceString = ',' + g_roleNameRqc;\n        approvedBy = approvedBy && approvedBy.includes(g_roleNameRqc) ? approvedBy.replace(replaceString, '') : approvedBy;\n        rejectedBy = rejectedBy && rejectedBy.includes(g_roleNameRqc) ? rejectedBy.replace(replaceString, '') : rejectedBy;\n    }\n\n    /*SQ APPROVALtab*/\n    if (action === \"QualPack\") {\n\n        /*\n        it is observed that when user was choosing statuses and submitting, \n        due to empty spaces, system was unable to bring those records in approval tab table\n        APRIL 6, 2022 by vighnesh\n        */\n\n        let qualStatus = oComboQualificationStatus.getSelectedKey().trim().toUpperCase(); //qualification status\n        let elevatedApprover = oMultiComboElevatedApp.getSelectedKeys();\n        let namesSecondApp = oMultiComboElevatedApp.getSelectedItems();\n\n        //if users select 'ALL'\n        if (elevatedApprover.includes(\"All\")) {\n            const index = elevatedApprover.indexOf(\"All\");\n            elevatedApprover.splice(index, 1);\n            namesSecondApp.shift();\n        }\n\n\n        //preparing second approvers contacts array\n        let secAppContactsArr = [];\n        //only when contact list is having min 1 key else empty\n        if (elevatedApprover.length > 0) {\n            for (let i = 0; i < elevatedApprover.length; i++) {\n                let index1 = namesSecondApp[i].getText().indexOf(\",\");\n                let index2 = namesSecondApp[i].getText().indexOf(\"[\");\n                let username = namesSecondApp[i].getText().substring(index1 + 1, index2);\n                secAppContactsArr.push({\n                    userId: elevatedApprover[i],\n                    userName: username\n                });\n            }\n        }\n        sendEmailsObj['elevatedApprover'] = secAppContactsArr;\n\n        \n        approveObj[\"qualificationStatus\"] = qualStatus;\n\n        d.material_qualificationStatus = qualStatus;\n        approveObj[\"qualificationRatSummary\"] = txtAreaQualificationRationale.getValue().trim();\n        approveObj[\"sqaConfirmation\"] = \"Yes\"; //qualPackage;\n        approveObj[\"sqaConfirmedByEmail\"] = g_users.email;\n        approveObj[\"sqaConfirmedByName\"] = g_users.full_name;\n        approveObj[\"sqaConfirmedDate\"] = new Date().toUTCString().substring(\"5\");\n        approveObj[\"qualificationAttachments\"] = \"\";\n        approveObj[\"elevatedApprover\"] = elevatedApprover.toString();\n\n\n        //storing email contacts for every person who worked on the material so that emails can be sent\n        approvalEmailContacts[\"aslContact\"] = d.material_ASLContact;\n        approvalEmailContacts[\"SQContact\"] = d.material_SQContact;\n        approvalEmailContacts[\"AuditContact\"] = d.material_AuditContact;\n        approvalEmailContacts[\"SQAAContact\"] = d.material_SQAContact;\n        approvalEmailContacts[\"RQCContact\"] = d.material_RegulatoryContact;\n        approvalEmailContacts[\"Requester\"] = d.material_createdBy + '@its.jnj.com';\n\n        if (elevatedApprover.length > 0) {\n            pendingApproval = pendingApproval.includes(g_roleNameElevated) ? pendingApproval : pendingApproval + ',' + g_roleNameElevated;\n        }\n\n\n        const replaceString = ',' + g_selectedRole;\n        pendingApproval = pendingApproval.replace(replaceString, '');\n\n\n        if (rejectedBy) {\n            const replaceString = ',' + g_roleNameElevated;\n            rejectedBy = rejectedBy.includes(g_roleNameElevated) ? rejectedBy.replace(replaceString, '') : rejectedBy;\n        }\n    }\n\n    /*\n    NOTE: API call to save/update the SQ tab data including return, audit, RQC & SQAA block\n    BY: VIGHNESH\n    DATE: SEPT 10, 2021\n    */\n    var commonData = {\n        sqaData: approveObj,\n        labelObject: {\n\n            //return block\n            \"rejectedByEmail\": oLabelPanel1SQAConfEmail.getText(),\n            \"rejectedDate\": oLabelPanel1SQAConfDate.getText(),\n            \"rejectedByName\": oLabelPanel1SQAConfName.getText(),\n            \"rejectionComments\": oLabelSQAAppComments.getText(),\n            \"returnTo\": oLabelSQAApp.getText(),\n\n\n            //audit block \n            \"auditComments\": lblAudotComments.getText(),\n            \"standardsRegulations\": lblStandReg.getText(),\n            \"auditConfirmedByName\": oLabelSQAAuditName.getText(),\n            \"auditConfirmedByEmail\": oLabelSQAAuditEmail.getText(),\n            \"auditConfirmedDate\": oLabelSQAAuditDate.getText(),\n            \"auditGrp\": lblAuditGrp.getText(),\n            \"auditRequired\": lblAuditConfirm.getText(),\n\n            //rqc block\n            \"rqcConfirmedByEmail\": lblRegConfirmedBy.getText(),\n            \"rqcConfirmedByName\": oLabelRegCreatedName.getText(),\n            \"rqcConfirmedDate\": lblRegConfirmedAt.getText(),\n            \"rqcContact\": lblRegCompEmailGroup.getText(),\n\n\n            //sqaa block\n            \"sqaaConfirmation\": oLabelconfirmation.getText(),\n            \"sqaaConfirmedByEmail\": lblSQAConfirmedBy.getText(),\n            \"sqaaConfirmedByName\": oLabelSQACreatedName.getText(),\n            \"sqaaConfirmedDate\": lblSQAConfirmedAt.getText(),\n            \"sqaaContact\": lblSQAEmailGroup.getText(),\n            \"sqaaLocationName\": lblLocationName.getText(),\n            \"sqaaRefNum\": lblRefrenceNum.getText(),\n            \"sqaaType\": lblSQAgrmntTyp.getText(),\n            \"sqaaRequired\": lblSQAgrmnt.getText(),\n            \"existForSegment\": lblSQSegRiskCat.getText(),\n\n\n            //sq approval block\n            \"elevatedApprover\": oLabelQAEmailValues.getText(),\n            \"qualificationRatSummary\": lblQualificationRationale.getText(),\n            \"qualificationStatus\": lblQualificationStatus.getText(),\n            \"sqaConfirmedDate\": oLabelQAConfirmedDate.getText(),\n            \"sqaConfirmedByName\": oLabelASLQAOfUser.getText(),\n            \"sqaConfirmedByEmail\": oLabelQAConfirmedBy.getText()\n        },\n\n        matData: {\n            \"pendingApprover\": pendingApproval,\n            \"matInfoDBId\": d.material_id,\n            \"approvedBy\": approvedBy,\n            \"rejectedBy\": rejectedBy,\n            \"parentSupplierInfoId\": d.material_parentSupplierInfoId,\n            \"supplierInfoId\": d.material_supplierInfoId,\n            \"supplierRecordId\": pageSupplier.getModel().getData().supplierRecordId,\n            \"qualificationStatus\": d.material_qualificationStatus,\n            \"materialRecordId\": d.material_materialRecordId,\n            \"parentMaterialInfoId\": d.material_parentMaterialInfoId,\n            \"typeOfRequest\": oTextReqType.getText(), //supplier level\n\n\n            //fields for email template\n            \"materialId\": d.material_matInfoId,\n            \"jnjSegment\": d.material_jnjSegment,\n            \"jnjQualOrg\": d.material_jnjOrg,\n            \"jnjOpComp\": d.material_jnjOpComp,\n            \"jnjSite\": d.material_jnjSite,\n            \"supType\": d.material_supplierType,\n            \"clLevel\": d.material_criticalityLevel,\n            \"riskCatg\": d.material_riskCatgGroup,\n            \"clRation\": d.material_clRationale,\n            \"name\": AppCache.userInfo.name.split('[')[0].trim(),\n            \"supplierName\": oInputSupplierName.getValue().trim(),\n            \"reqType\": d.material_materialTypeOfRequest, //material level\n            \"reasonAddModi\": d.material_reasonForAddModi, //material level\n            \"reqTimeMatOnASL\": d.material_materialRequestedTimeOnASL\n\n        },\n\n        sendEmails: sendEmailsObj,\n        approvalEmailContacts: approvalEmailContacts,\n\n        dbIds: {\n            \"auditDbId\": d.audit_id,\n            \"sqaaDbId\": d.sqagreement_id,\n            \"rqcDbId\": d.regulatory_id,\n            \"sqDbId\": d.sqagroup_id,\n            \"aslDbId\": d.aslowner_id,\n            \"elevatedDbId\": d.elevated_id\n        },\n\n        allConfirmations: checkSQABlockCONF(),\n        userName: g_users.full_name,\n        userRole: g_selectedRole,\n        resendingSQData: flagResendClick\n\n    };\n    var options = {\n        data: {\n            commonData\n        }\n    };\n\n    sap.ui.core.BusyIndicator.show(0); //multiple click fix\n    apiconfirmSQAApprover(options);\n}\n\n\n\n\n\n/*\nNOTE: to validate the RQC APPROVAL tab, updated with busy indicators to avoid multiple clicks & made comments mandatory with no pre condition\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 12, 2021\nRQC APPROVAL TAB \n*/\nfunction rqcValidation() {\n\n    sap.ui.core.BusyIndicator.show(0); //multiple click\n\n    let errorMsg = [];\n\n    if (g_selectedRole === g_roleNameRqc) {\n        //RQC confirmation\n        if (oRadioButtonRegConf1.getSelected() === false && oRadioButtonRegConf2.getSelected() === false) {\n            errorMsg.push(\"\\n * Regulatory / Quality Compliance\");\n\n        }\n\n        //RQC comments\n        if (oHBoxRQCComments.getVisible() && oTextAreaRegComments.getValue().trim() === \"\") {\n            errorMsg.push(\"\\n * Regulatory / Quality Compliance Comments\");\n            oTextAreaRegComments.removeStyleClass(\"textbox\");\n            oTextAreaRegComments.addStyleClass(\"error\");\n        }\n\n\n        let err = \"\";\n        if (errorMsg.length > 0) {\n            err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString();\n            showMessageToast(err);\n            sap.ui.core.BusyIndicator.hide(); //multiple click\n            return false;\n        } else {\n\n            /*\n            2021ENHANCEMENTS\n            updated by: vighnesh\n            udpated on : jan 12, 2022\n            \n            AGHP-2490 defect remediation\n            function to get pieces of updated approval information mandate for parallel approval workflow\n            it will run an API to bring pieces of updated approval information\n            we will no longer call the API to update the RQC data here instead will be called in AJAX success\n            */\n            getUpdatedApprovalInfo();\n\n        }\n    } else {\n        sap.ui.core.BusyIndicator.hide(); //multiple click\n        showMessageToast(\"Please Choose the Role\");\n    }\n}\n\n\n\n\n\n\n/*\nNOTE: To post RQC values in DB, updated with busy indicators to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 12, 2021\nRQC APPROVAL TAB \n*/\nfunction postRQCTabData() {\n\n    let d = oIconTabBarApproversList.getModel().getData();\n\n    let pendingApprover = d.material_pendingApprover;\n    const replaceString = ',' + g_selectedRole;\n    pendingApprover = pendingApprover.replace(replaceString, '');\n\n    let approvedBy = d.material_approvedBy;\n    let rejectedBy = d.material_rejectedBy;\n\n\n    let regulConf = \"\";\n    if (oRadioButtonGroupRQC.getSelectedIndex() === 0) {\n        regulConf = \"Yes\";\n        if (approvedBy) {\n            approvedBy = approvedBy.includes(g_selectedRole) ? approvedBy : approvedBy + \",\" + g_selectedRole;\n        } else {\n            approvedBy = ',' + g_selectedRole;\n        }\n    } else if (oRadioButtonGroupRQC.getSelectedIndex() === 1) {\n        regulConf = \"No\";\n        if (rejectedBy) {\n            rejectedBy = rejectedBy.includes(g_selectedRole) ? rejectedBy : rejectedBy + \",\" + g_selectedRole;\n        } else {\n            rejectedBy = ',' + g_selectedRole;\n        }\n    } else {\n        //No selection comes here.\n    }\n\n\n    d.material_pendingApprover = pendingApprover;\n    d.material_approvedBy = approvedBy;\n    d.material_rejectedBy = rejectedBy;\n\n\n    //slicing out first name to address in email\n    let sourceQualityFName = d.sqagroup_rqcConfirmedByName;\n    let srcQualFNameIndex = sourceQualityFName.indexOf(\",\");\n    sourceQualityFName = sourceQualityFName.substring(srcQualFNameIndex + 1);\n\n\n\n    var options = {\n        data: {\n\n            //IDs\n            \"matDbId\": d.material_id,\n            \"matInfoId\": d.material_matInfoId,\n            \"supplierInfoId\": d.material_supplierInfoId,\n            \"supplierRecordId\": pageSupplier.getModel().getData().supplierRecordId,\n            \"materialRecordId\": d.material_materialRecordId,\n            \"parentMaterialInfoId\": d.material_parentMaterialInfoId,\n            \"sqaDbId\": d.sqagroup_id,\n\n\n            //RQC fields\n            \"regulConf\": regulConf,\n            \"reguAssessComments\": d.regulatory_reguAssessComments,\n            \"reguConfrmByName\": d.regulatory_reguConfrmByName,\n            \"reguConfrmDate\": d.regulatory_reguConfrmDate,\n\n            \"reguSupplierEmail\": d.regulatory_reguSupplierEmail,\n            \"pendingApprover\": d.material_pendingApprover,\n            \"sourceQualityContact\": d.sqagroup_rqcConfirmedByEmail, //d.material_SQContact,//need to change this \n            \"rejectedBy\": d.material_rejectedBy,\n            \"approvedBy\": d.material_approvedBy,\n\n            \"userId\": g_users.userId,\n\n            \"allConfirmations\": checkSQABlockCONF2(),\n            \"qualificationStatus\": d.material_qualificationStatus,\n            \"userRole\": g_selectedRole,\n\n            \"labelObject\": {\n                \"reguAssessComments\": oLabelRegComments.getText(),\n                \"reguConfrmByName\": oLabelRegName.getText(),\n                \"reguConfrmDate\": oLabelRegDate.getText(),\n                \"reguSupplierEmaill\": oLabelRegEmail.getText(),\n                \"regulConf\": oLabelRegConfCom.getText()\n            },\n\n            //for email template\n            \"materialId\": d.material_matInfoId,\n            \"jnjSegment\": d.material_jnjSegment,\n            \"jnjQualOrg\": d.material_jnjOrg,\n            \"jnjOpComp\": d.material_jnjOpComp,\n            \"jnjSite\": d.material_jnjSite,\n            \"supType\": d.material_supplierType,\n            \"clLevel\": d.material_criticalityLevel,\n            \"riskCatg\": d.material_riskCatgGroup,\n            \"clRation\": d.material_clRationale,\n            \"supplierName\": oInputSupplierName.getValue().trim(),\n            \"reqTimeMaterialOnASL\": d.material_materialRequestedTimeOnASL, //material level\n            \"sourceQualityName\": sourceQualityFName,\n            \"requestType\": d.material_materialTypeOfRequest, //material level\n            \"reasonAddModi\": d.material_reasonForAddModi //material level\n\n        }\n    };\n    apiconfirmRQCApprover(options);\n}\n\n\n\n/*\nNOTE: to validate the SQAA APPROVAL tab, updated with busy indicators to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 12, 2021\nSQAA APPROVAL TAB \n*/\nfunction sqaaValidation() {\n    sap.ui.core.BusyIndicator.show(0); //multiple click\n\n    let errorMsg = [];\n\n    if (g_selectedRole === g_roleNameSqaa) {\n\n        //SQAA confirmation is selected as No, only itself & comments are mandatory else every field is mandate\n        let skipVal = false;\n        //SQAA confirmation\n        if (oRadioButtonGroupconfirmation.getSelectedIndex() === 1) {\n            skipVal = true;\n\n        }\n\n        //SQAA status\n        if (oComboBoxStatus.getSelectedKey() === \"\" && !skipVal) {\n            errorMsg.push(\"\\n * Status\");\n            oComboBoxStatus.removeStyleClass(\"combobox\");\n            oComboBoxStatus.addStyleClass(\"error\");\n        }\n\n        //SQAA executed\n        if (oComboBoxSQAType.getSelectedKey() === \"\" && !skipVal) {\n            errorMsg.push(\"\\n * Quality Aggrement Executed\");\n            oComboBoxSQAType.removeStyleClass(\"combobox\");\n            oComboBoxSQAType.addStyleClass(\"error\");\n        }\n\n        //reference number & location name\n        if (oTableSQAA.getModel().getData() && oTableSQAA.getModel().getData().length === 0 && !skipVal) {\n            errorMsg.push(\"\\n * Reference Number\");\n            errorMsg.push(\"\\n * Location Name\");\n            oInputReferenceNumber.removeStyleClass(\"inputfield\");\n            oInputReferenceNumber.addStyleClass(\"error\");\n            oInputLocationName.removeStyleClass(\"inputfield\");\n            oInputLocationName.addStyleClass(\"error\");\n        } else {\n            oInputReferenceNumber.removeStyleClass(\"error\");\n            oInputReferenceNumber.addStyleClass(\"inputfield\");\n            oInputLocationName.removeStyleClass(\"error\");\n            oInputLocationName.addStyleClass(\"inputfield\");\n        }\n\n        //SQAA comments \n        if (oTextAreaSQAComments.getValue() === \"\") {\n            errorMsg.push(\"\\n * Quality Agreement Comments\");\n            oTextAreaSQAComments.removeStyleClass(\"textbox\");\n            oTextAreaSQAComments.addStyleClass(\"error\");\n        }\n\n        //SQAA confirmation\n        if (oRadioButtonconfirmationYes.getSelected() === false && oRadioButtonconfirmationNo.getSelected() === false) {\n            errorMsg.push(\"\\n * Quality Agreement\");\n\n        }\n\n        let err = \"\";\n        if (errorMsg.length > 0) {\n            err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString();\n            showMessageToast(err);\n            sap.ui.core.BusyIndicator.hide(); //multiple click\n            return false;\n        } else {\n\n            /*\n            2021ENHANCEMENTS\n            updated by: vighnesh\n            udpated on : jan 12, 2022\n            \n            AGHP-2490 defect remediation\n            function to get pieces of updated approval information mandate for parallel approval workflow\n            it will run an API to bring pieces of updated approval information\n            we will no longer call the API to update the SQAA data here instead will be called in AJAX success\n            */\n            getUpdatedApprovalInfo();\n        }\n\n    } else {\n        showMessageToast(\"Please Choose the Role\");\n        sap.ui.core.BusyIndicator.hide(); //multiple click\n    }\n}\n\n\n\n\n\n\n/*\nNOTE: To post SQAA tabvalues to DB, updated with busy indicators to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 12, 2021\nSQAA APPROVAL TAB \n*/\nfunction postQualityAggrValues() {\n\n    let d = oIconTabBarApproversList.getModel().getData();\n\n    let approvedBy = d.material_approvedBy;\n    let rejectedBy = d.material_rejectedBy;\n    let pendingApprover = d.material_pendingApprover;\n\n    const replaceString = ',' + g_selectedRole;\n    pendingApprover = pendingApprover.replace(replaceString, '');\n\n    let sqaaConfirm = \"\";\n    if (oRadioButtonGroupconfirmation.getSelectedIndex() === 0) {\n        sqaaConfirm = \"Yes\";\n\n        if (approvedBy) {\n            approvedBy = approvedBy.includes(g_selectedRole) ? approvedBy : approvedBy + \",\" + g_selectedRole;\n        } else {\n            approvedBy = ',' + g_selectedRole;\n        }\n\n    } else if (oRadioButtonGroupconfirmation.getSelectedIndex() === 1) {\n        sqaaConfirm = \"No\";\n\n        if (rejectedBy) {\n            rejectedBy = rejectedBy.includes(g_selectedRole) ? rejectedBy : rejectedBy + \",\" + g_selectedRole;\n\n        } else {\n            rejectedBy = ',' + g_selectedRole;\n        }\n\n    }\n\n\n\n    d.material_pendingApprover = pendingApprover;\n    d.material_approvedBy = approvedBy;\n    d.material_rejectedBy = rejectedBy;\n\n\n    //slicing the first name for email template\n    let srcQualName = d.sqagroup_sqaaConfirmedByName;\n    let srcQualNameIndex = srcQualName.indexOf(\",\");\n    srcQualName = srcQualName.substring(srcQualNameIndex + 1);\n\n\n    var options = {\n        data: {\n\n            //IDs\n            \"matDbId\": d.material_id,\n            \"matInfoId\": d.material_matInfoId,\n            \"supplierInfoId\": d.material_supplierInfoId,\n            \"supplierRecordId\": pageSupplier.getModel().getData().supplierRecordId,\n            \"materialRecordId\": d.material_materialRecordId,\n            \"parentMaterialInfoId\": d.material_parentMaterialInfoId,\n            \"sqaDbId\": d.sqagroup_id,\n\n            //SQAA fields\n            \"sqaaConfirmation\": sqaaConfirm,\n            \"status\": oComboBoxStatus.getSelectedKey(),\n            \"suppQualityExecuted\": oComboBoxSQAType.getSelectedKey(),\n            \"reference_location\": JSON.stringify(oTableSQAA.getModel().getData()),\n            \"sqaaComments\": oTextAreaSQAComments.getValue().trim(),\n            \"confirmedByName\": g_users.full_name,\n            \"confirmedByEmail\": g_users.email,\n\n            \"sourceQualityContact\": d.sqagroup_sqaaConfirmedByEmail, //d.material_SQContact, // has to be changed\n\n            \"pendingApprover\": d.material_pendingApprover,\n            \"approvedBy\": d.material_approvedBy,\n            \"rejectedBy\": d.material_rejectedBy,\n\n            \"userId\": g_users.userId,\n            \"allConfirmations\": checkSQABlockCONF2(),\n            \"qualificationStatus\": d.material_qualificationStatus,\n            \"typeOfRequest\": oTextReqType.getText(),\n            \"userRole\": g_selectedRole,\n\n            \"labelObject\": {\n                \"confirmedByEmail\": oLabelCreatedBy.getText(),\n                \"confirmedByName\": oLabelCreatedName.getText(),\n                \"confirmedDate\": oLabelConfirmedDate.getText(),\n                \"locName\": oLabelLocationName.getText(),\n                \"refNumber\": oLabelReferenceNumber.getText(),\n                \"sqaaComments\": oLabelSQAComments.getText(),\n                \"sqaaConfirmation\": oLabelconfirmation.getText(),\n                \"status\": oLabelStatus.getText(),\n                \"suppQualityExecuted\": oLabelSQAType.getText()\n            },\n\n            //for email template\n            \"materialId\": d.material_matInfoId,\n            \"jnjSegment\": d.material_jnjSegment,\n            \"jnjQualOrg\": d.material_jnjOrg,\n            \"jnjOpComp\": d.material_jnjOpComp,\n            \"jnjSite\": d.material_jnjSite,\n            \"supType\": d.material_supplierType,\n            \"clLevel\": d.material_criticalityLevel,\n            \"riskCatg\": d.material_riskCatgGroup,\n            \"clRation\": d.material_clRationale,\n\n            \"requestType\": d.material_materialTypeOfRequest, //material level\n            \"reasonForAddModi\": d.material_reasonForAddModi, //material level\n            \"supplierName\": oInputSupplierName.getValue().trim(), //material level\n            \"requestTimeMatOnASL\": d.material_materialRequestedTimeOnASL, //material level\n            \"srcQualFName\": srcQualName //dear addressee\n\n        }\n    };\n    apiconfirmSQAAApprover(options);\n}\n\n\n\n/*\nNOTE: to validate the AUDIT tab, updated with busy indicators to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 12, 2021\nAUDIT APPROVAL TAB\n*/\nfunction auditValidation() {\n    sap.ui.core.BusyIndicator.show(0);\n    let errorMsg = [];\n\n    if (g_selectedRole === g_roleNameAudit) {\n        var skipValidation = false;\n\n        //audit confirmation -- if selected no then itself & comments would be mandatory else everything would be mandate\n        if (oRadioxAuditconfirmationNo.getSelected() === true) {\n            skipValidation = true;\n        }\n\n        //audit type\n        if (oComboBoxAuditType.getSelectedKey() === \"\" && !skipValidation) {\n            errorMsg.push(\"\\n * Audit Type Executed\");\n            oComboBoxAuditType.addStyleClass('error');\n            oComboBoxAuditType.removeStyleClass('combobox');\n\n        }\n\n        //audit outcome\n        if (oComboBoxAuditOutcome.getSelectedKey() === \"\" && !skipValidation) {\n            errorMsg.push(\"\\n * Audit Outcome\");\n            oComboBoxAuditOutcome.addStyleClass('error');\n            oComboBoxAuditOutcome.removeStyleClass('combobox');\n\n        }\n\n        //audit refusal\n        if (oRadioButtonAuditRefuseYes.getSelected() === false && oRadioButtonAuditRefuseNo.getSelected() === false && !skipValidation) {\n            errorMsg.push(\"\\n * Refusal\");\n\n        }\n\n        //date of audit completion\n        if (oDatePicker1Audit.getValue() === \"\" && !skipValidation) {\n            errorMsg.push(\"\\n * Date of Audit Completion\");\n            oDatePicker1Audit.addStyleClass('error');\n            oDatePicker1Audit.removeStyleClass('reqTiming');\n\n        }\n\n        //audit status\n        if (oComboBoxAuditStatus.getSelectedKey() === \"\" && !skipValidation) {\n            errorMsg.push(\"\\n * Status\");\n            oComboBoxAuditStatus.addStyleClass('error');\n            oComboBoxAuditStatus.removeStyleClass('combobox');\n\n        }\n\n        //reference number & system stored \n        if (oTableAudit.getModel().getData() && oTableAudit.getModel().getData().length === 0 && !skipValidation) {\n            errorMsg.push(\"\\n * Reference Number\");\n            errorMsg.push(\"\\n * System Stored\");\n\n            oInputxAuditRecordNumber.removeStyleClass(\"inputfield\");\n            oInputxAuditRecordNumber.addStyleClass(\"error\");\n            oInputxAuditSystemStored.removeStyleClass(\"inputfield\");\n            oInputxAuditSystemStored.addStyleClass(\"error\");\n        } else {\n            oInputxAuditRecordNumber.removeStyleClass(\"error\");\n            oInputxAuditRecordNumber.addStyleClass(\"inputfield\");\n            oInputxAuditSystemStored.removeStyleClass(\"error\");\n            oInputxAuditSystemStored.addStyleClass(\"inputfield\");\n        }\n\n        //audit comments\n        if (oTextAreaxAuditComments.getValue() === \"\") {\n            errorMsg.push(\"\\n * Audit Comments\");\n            oTextAreaxAuditComments.addStyleClass('error');\n            oTextAreaxAuditComments.removeStyleClass('textbox');\n\n        }\n\n        //audit confirmation\n        if (oRadioxAuditconfirmationYes.getSelected() === false && oRadioxAuditconfirmationNo.getSelected() === false) {\n            errorMsg.push(\"\\n * Audit\");\n\n        }\n\n        let err = \"\";\n        if (errorMsg.length > 0) {\n            err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString();\n            showMessageToast(err);\n            sap.ui.core.BusyIndicator.hide();\n            return false;\n        } else {\n\n            /*\n            2021ENHANCEMENTS\n            updated by: vighnesh\n            udpated on : jan 12, 2022\n            \n            AGHP-2490 defect remediation\n            function to get pieces of updated approval information mandate for parallel approval workflow\n            it will run an API to bring pieces of updated approval information\n            we will no longer call the API to update the Audit data here instead will be called in AJAX success\n            */\n            getUpdatedApprovalInfo();\n\n        }\n    } else {\n        sap.ui.core.BusyIndicator.hide(); //multiple click\n        showMessageToast(\"Please Choose the Role\");\n    }\n}\n\n\n\n\n\n\n\n/*\nNOTE: to post date from AUDIT tab to DB, updated with busy indicators to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 12, 2021\nAUDIT APPROVAL TAB\n*/\nfunction postAuditValues() {\n\n    let d = oIconTabBarApproversList.getModel().getData();\n\n    let approvedBy = d.material_approvedBy;\n    let rejectedBy = d.material_rejectedBy;\n    let pendingApprover = d.material_pendingApprover;\n\n    const replaceString = ',' + g_selectedRole;\n    pendingApprover = pendingApprover.replace(replaceString, '');\n\n\n    let auditConf;\n    if (oRadioButtonxAuditGroupconfirmation.getSelectedIndex() === 0) {\n        auditConf = \"Yes\";\n        if (approvedBy) {\n            approvedBy = approvedBy.includes(g_selectedRole) ? approvedBy : approvedBy + \",\" + g_selectedRole;\n        } else {\n            approvedBy = ',' + g_selectedRole;\n        }\n    } else if (oRadioButtonxAuditGroupconfirmation.getSelectedIndex() === 1) {\n        auditConf = \"No\";\n        if (rejectedBy) {\n            rejectedBy = rejectedBy.includes(g_selectedRole) ? rejectedBy : rejectedBy + \",\" + g_selectedRole;\n        } else {\n            rejectedBy = ',' + g_selectedRole\n        }\n\n    }\n\n\n    d.material_pendingApprover = pendingApprover;\n    d.material_approvedBy = approvedBy;\n    d.material_rejectedBy = rejectedBy;\n\n\n    //slicing the audit confirmed by name\n    let sourceQualityName = d.sqagroup_auditConfirmedByName;\n    let srcQualNameIndex = sourceQualityName.indexOf(\",\");\n    sourceQualityName = sourceQualityName.substring(srcQualNameIndex + 1);\n\n\n    var options = {\n        data: {\n\n            //IDs\n            \"matDbId\": d.material_id,\n            \"matInfoId\": d.material_matInfoId,\n            \"sqaDbId\": d.sqagroup_id,\n            \"supplierInfoId\": d.material_supplierInfoId,\n            \"supplierRecordId\": pageSupplier.getModel().getData().supplierRecordId,\n            \"materialRecordId\": d.material_materialRecordId,\n            \"parentMaterialInfoId\": d.material_parentMaterialInfoId,\n\n            \"auditConfirm\": auditConf,\n            \"auditComments\": oTextAreaxAuditComments.getValue().trim(),\n            \"auditOutcome\": oComboBoxAuditOutcome.getSelectedKey(),\n            \"refusal\": oRadioButtonGroup1AuditRefuseYesNo.getSelectedIndex() === 0 ? 'Yes' : 'No',\n            \"auditCompletionDate\": oDatePicker1Audit.getValue().trim(),\n            \"system_record\": JSON.stringify(oTableAudit.getModel().getData()),\n            \"auditType\": oComboBoxAuditType.getSelectedKey(),\n            \"status\": oComboBoxAuditStatus.getSelectedKey(),\n\n            \"confirmedByName\": g_users.full_name,\n            \"confirmedDate\": oInputConfirmedDateAudit.getText().trim(),\n            \"confirmedByEmail\": g_users.email,\n\n\n            \"pendingApprover\": d.material_pendingApprover,\n            \"rejectedBy\": d.material_rejectedBy,\n            \"approvedBy\": d.material_approvedBy,\n\n\n            \"sourceQualityContact\": d.sqagroup_auditConfirmedByEmail,\n\n            \"userId\": g_users.userId,\n            \"allConfirmations\": checkSQABlockCONF2(),\n            \"qualificationStatus\": d.material_qualificationStatus,\n            \"typeOfRequest\": oTextReqType.getText(),\n            \"userRole\": g_selectedRole,\n\n\n            \"labelObject\": {\n                \"auditComments\": oLabelxAuditComments.getText(),\n                \"auditCompletionDate\": oLabelDateofAuditCompletion.getText(),\n                \"auditConfirm\": oLabelxAuditconfirmation.getText(),\n                \"auditOutcome\": oLabelAuditOutcome.getText(),\n                \"auditType\": oLabelAuditType.getText(),\n                \"confirmedByEmail\": oLabelCreatedByAudit.getText(),\n                \"confirmedByName\": oLabelCreatedNameAudit.getText(),\n                \"confirmedDate\": oLabelConfirmedDateAudit.getText(),\n                \"recordNumber\": oLabelxAuditRecordNumber.getText(),\n                \"refusal\": oLabelRefusal.getText(),\n                \"status\": oLabelxAuditStatus.getText(),\n                \"systemStored\": oLabelAuditSystemStored.getText()\n            },\n\n            //for email template\n            \"materialId\": d.material_matInfoId,\n            \"jnjSegment\": d.material_jnjSegment,\n            \"jnjQualOrg\": d.material_jnjOrg,\n            \"jnjOpComp\": d.material_jnjOpComp,\n            \"jnjSite\": d.material_jnjSite,\n            \"supType\": d.material_supplierType,\n            \"clLevel\": d.material_criticalityLevel,\n            \"riskCatg\": d.material_riskCatgGroup,\n            \"clRation\": d.material_clRationale,\n\n            \"requestTimeMatOnASL\": d.material_materialRequestedTimeOnASL,//material level\n            \"requestType\": d.material_materialTypeOfRequest,//material level\n            \"reasonForAddModi\": d.material_reasonForAddModi,//material level\n            \"supplierName\": oInputSupplierName.getValue().trim(),\n            \"sourceQualityFName\": sourceQualityName\n\n        }\n    };\n\n    apiconfirmAuditApprover(options);\n}\n\n\n\n\n\n/*\nNOTE: to validate the ELEVATED tab, updated with busy indicators to avoid multiple clicks\ntweaks in UI, styleclasses\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 10, 2021\nELEVATED APPROVAL TAB\n*/\nfunction elevatedValidation() {\n    sap.ui.core.BusyIndicator.show(0); //multiple click\n\n    let errorMsg = [];\n\n    if (g_selectedRole === g_roleNameElevated) {\n\n        //confirmation selection\n        if (oRadioButtonGroupElevatedApproverConfirmation.getSelectedIndex() === -1) {\n            errorMsg.push(\"\\n * Second Approver\");\n        }\n\n        //second approver comments\n        if (oTextAreaCommentsElevated.getValue().trim() === \"\") {\n            errorMsg.push(\"\\n * Second Approver Comments\");\n            oTextAreaCommentsElevated.removeStyleClass(\"textbox\");\n            oTextAreaCommentsElevated.addStyleClass(\"error\");\n        }\n\n        let err = \"\";\n        //formLoginButton.setText(\"Approve\");\n\n        //set up the approve button\n        formLoginButton.setText(\"APPROVE\");\n        formLoginButton.removeStyleClass('buttonLoginRed');\n        formLoginButton.addStyleClass('buttonLoginGreen');\n\n\n\n        if (errorMsg.length > 0) {\n            err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString();\n            showMessageToast(err);\n            sap.ui.core.BusyIndicator.hide();//multiple clicks\n            return false;\n\n        } else if (oRadioButtonElevConfYes.getSelected() === true) {\n            signQualification();\n        } else if (oRadioButtonElevConfNo.getSelected() === true) {\n\n            //set up the reject button\n            //formLoginButton.setText(\"Reject\");\n            formLoginButton.setText(\"REJECT\");\n            formLoginButton.removeStyleClass('buttonLoginGreen');\n            formLoginButton.addStyleClass('buttonLoginRed');\n\n            signQualification();\n\n        }\n    } else {\n\n        showMessageToast(\"Please Choose the Role\");\n        sap.ui.core.BusyIndicator.hide(); //multiple click\n    }\n}\n\n\n\n/*\nNOTE: once sign in is done, send emails and update DB, updated with busy indicators to avoid multiple clicks\nUPDATED BY: VIGHNESH\nUPDATED ON: sept 10, 2021\nELEVATED APPROVAL TAB\n*/\nfunction elevatedConfirmation() {\n\n    sap.ui.core.BusyIndicator.show(0); //multiple clicks\n\n    let d = oIconTabBarApproversList.getModel().getData();\n\n    let pendingApprover = d.material_pendingApprover;\n    const replaceString = ',' + g_selectedRole;\n    pendingApprover = pendingApprover.replace(replaceString, '');\n\n    let approvedBy = d.material_approvedBy;\n    let rejectedBy = d.material_rejectedBy;\n\n\n\n    let elevatedConf;\n    if (oRadioButtonGroupElevatedApproverConfirmation.getSelectedIndex() === 0) {\n        elevatedConf = 'Yes';\n        if (approvedBy) {\n            approvedBy = approvedBy.includes(g_selectedRole) ? approvedBy : approvedBy + \",\" + g_selectedRole;\n        } else {\n            approvedBy = ',' + g_selectedRole;\n        }\n    } else if (oRadioButtonGroupElevatedApproverConfirmation.getSelectedIndex() === 1) {\n        elevatedConf = 'No';\n        if (rejectedBy) {\n            rejectedBy = rejectedBy.includes(g_selectedRole) ? rejectedBy : rejectedBy + \",\" + g_selectedRole;\n        } else {\n            rejectedBy = ',' + g_selectedRole;\n        }\n        pendingApprover = pendingApprover + ',' + g_roleNameSqa;\n        const replaceString = ',' + g_roleNameSqa;\n        approvedBy = approvedBy.includes(g_roleNameSqa) ? approvedBy.replace(replaceString, '') : ',' + g_roleNameAsl;\n        d.material_qualificationStatus = 'IN QUALIFICATION';\n    }\n\n    d.material_pendingApprover = pendingApprover;\n    d.material_approvedBy = approvedBy;\n    d.material_rejectedBy = rejectedBy;\n\n\n    //preparing email list to send emails to all the approvers who worked on the material\n    let sourceQualityName = d.sqagroup_auditConfirmedByName;\n    let srcQualNameIndex = sourceQualityName.indexOf(\",\");\n    sourceQualityName = sourceQualityName.substring(srcQualNameIndex + 1);\n\n    let approvalWorkflow = [];\n    let approvalWorkflowUnique = [];\n\n    // For Requester\n    /*SINDHUMAY3 CHG000010710619 INC000023643457 STARTING */\n    let reqEmail = oTextReqEmail.getText().trim();\n    let reqName = oTextReqName.getText().trim();\n    let reqindex = reqName.indexOf(\",\");\n    reqName = reqName.substring(reqindex + 1);\n\n    let matreqEmail = d.material_materialRequesterEmail.trim();\n    let matreqName = d.material_materialRequesterName.trim();\n    reqindex = matreqName.indexOf(\",\");\n    matreqName = matreqName.substring(reqindex + 1);\n\n\n    if (reqName === \"batchadmin\" && reqEmail.toLowerCase() === 'batchadmin@its.jnj.com') {\n        //do nothing\n    } else {\n        approvalWorkflow.push({\n            name: reqName,\n            email: reqEmail.toLowerCase()\n        });\n    }\n\n    if (matreqName === \"batchadmin\" && matreqEmail.toLowerCase() === 'batchadmin@its.jnj.com') {\n        //do nothing\n    } else {\n        approvalWorkflow.push({\n            name: matreqName,\n            email: matreqEmail.toLowerCase()\n\n        });\n    }\n\n    /* SINDHUMAY3 CHG000010710619 INC000023643457 ENDING */\n    //For Requester ENDS\n\n\n\n\n    /*\n    NOTE: EMAIL block for ASL, SQ, AUDIT, RQC, SQAA & ELEVATED\n    UPDATED: VIGHNESH\n    UPDATED ON: sept 10, 2021\n    */\n    //ASL OWNER EMAIL BLOCK\n    let aslEmail = d.aslowner_confirmedByEmail;\n    let aslName = d.aslowner_confirmedByName;\n    let aslIndex = aslName.indexOf(',');\n    aslName = aslName.substring(aslIndex + 1);\n\n    approvalWorkflow.push({\n        name: aslName,\n        email: aslEmail.toLowerCase()\n    });\n    //ASL OWNER EMAIL BLOCK ENDS\n\n\n    //SQA-AUDIT EMAIL BLOCK\n    let sqaAuditEmail = d.sqagroup_auditConfirmedByEmail;\n    let sqaAuditName = d.sqagroup_auditConfirmedByName;\n    let sqaAuditIndex = sqaAuditName.indexOf(',');\n    sqaAuditName = sqaAuditName.substring(sqaAuditIndex + 1, sqaAuditName.length - 1);\n    approvalWorkflow.push({\n        name: sqaAuditName,\n        email: sqaAuditEmail.toLowerCase()\n    });\n    //SQA-AUDIT EMAIL BLOCK ENDS\n\n\n\n    //SQA-RQC EMAIL BLOCK\n    if (d.sqagroup_rqcConfirmedByEmail === null) {\n        //do nothing\n    } else {\n        let sqaRQCEmail = d.sqagroup_rqcConfirmedByEmail;\n        let sqaRQCName = d.sqagroup_rqcConfirmedByName;\n        let sqaRQCIndex = sqaRQCName.indexOf(',');\n        sqaRQCName = sqaRQCName.substring(sqaRQCIndex + 1);\n        approvalWorkflow.push({\n            name: sqaRQCName,\n            email: sqaRQCEmail.toLowerCase()\n        });\n\n        //when RQC person approves\n        let rqcEmail = d.regulatory_reguSupplierEmail;\n        let rqcName = d.regulatory_reguConfrmByName;\n        let rqcIndex = rqcName.indexOf(',');\n        rqcName = rqcName.substring(rqcIndex + 1);\n        approvalWorkflow.push({\n            name: rqcName,\n            email: rqcEmail.toLowerCase()\n        });\n\n    }\n    //SQA-RQC EMAIL BLOCK ENDS\n\n\n\n\n    //SQA-SQAA EMAIL BLOCK\n    let sqaSQAAEmail = d.sqagroup_sqaaConfirmedByEmail;\n    let sqaSQAAName = d.sqagroup_sqaaConfirmedByName;\n    let sqaSQAAIndex = sqaSQAAName.indexOf(',');\n    sqaSQAAName = sqaSQAAName.substring(sqaSQAAIndex + 1);\n    approvalWorkflow.push({\n        name: sqaSQAAName,\n        email: sqaSQAAEmail.toLowerCase()\n    });\n    //SQA-SQAA EMAIL BLOCK ENDS\n\n\n\n\n    //AUDIT EMAIL BLOCK\n    if (d.sqagroup_auditRequired === \"Yes\") {\n        let auditEmail = d.audit_confirmedByEmail;\n        let auditName = d.audit_confirmedByName;\n        let auditIndex = auditName.indexOf(',');\n        auditName = auditName.substring(auditIndex + 1);\n        approvalWorkflow.push({\n            name: auditName,\n            email: auditEmail.toLowerCase()\n        });\n    }\n    //AUDIT EMAIL BLOCK ENDS\n\n\n\n    //SQAA EMAIL BLOCK\n    if (d.sqagroup_sqaaRequired === \"Yes\" &&\n        d.sqagroup_sqaaContact !== \"\" &&\n        d.sqagroup_sqaaContact !== null &&\n        d.sqagroup_sqaaContact !== undefined &&\n        d.sqagreement_confirmedByEmail !== null &&\n        d.sqagreement_confirmedByEmail !== undefined &&\n        d.sqagreement_confirmedByName !== null &&\n        d.sqagreement_confirmedByName !== undefined) {\n\n        let sqaaEmail = d.sqagreement_confirmedByEmail;\n        let sqaaName = d.sqagreement_confirmedByName;\n        let sqaaIndex = sqaaName.indexOf(',');\n        sqaaName = sqaaName.substring(sqaaIndex + 1);\n        approvalWorkflow.push({\n            name: sqaaName,\n            email: sqaaEmail.toLowerCase()\n        });\n    }\n    //SQAA EMAIL BLOCK ENDS\n\n\n\n\n    //ELEVATED EMAIL BLOCK\n    if (d.elevated_elevatedApprovConf === \"Yes\") {\n        let elevEmail = d.elevated_confirmedByEmail;\n        let elevName = d.elevated_confirmBy;\n        let elevIndex = elevName.indexOf(',');\n        elevName = elevName.substring(elevIndex + 1);\n        approvalWorkflow.push({\n            name: elevName,\n            email: elevEmail.toLowerCase()\n        });\n    }\n    //ELEVATED EMAIL BLOCK ENDS\n\n\n    /*\n    NOTE: fetch all unique email ID's and their values\n    */\n    const key = 'email';\n    approvalWorkflowUnique = [...new Map(approvalWorkflow.map(item => [item[key], item])).values()];\n\n    var options = {\n        data: {\n\n            //IDs\n            \"matInfoId\": d.material_matInfoId, // Optional \n            \"matDbId\": d.material_id, // Optional\n            \"sqDbId\": d.sqagroup_id,\n            \"supplierInfoId\": d.material_supplierInfoId,\n            \"supplierRecordId\": pageSupplier.getModel().getData().supplierRecordId,\n            \"materialRecordId\": d.material_materialRecordId,\n            \"parentMaterialInfoId\": d.material_parentMaterialInfoId,\n\n            //2021  oct 11  \n            \"parentSupplierInfoId\": d.supplier_parentSupplierInfoId,\n            \"supDbId\": d.supplier_id,\n            //2021  oct 11\n\n            \"userId\": g_users.userId,\n            \"userRole\": g_selectedRole,\n\n\n\n            //ELEVATED fields\n            \"elevatedApprovConf\": elevatedConf,\n            \"qualificationStatus\": d.material_qualificationStatus,\n            \"comment\": d.elevated_comment,\n            \"confirmBy\": g_users.full_name,\n            \"confirmDt\": new Date().toUTCString().substring(\"5\"),\n            \"confirmedByEmail\": g_users.email,\n\n            \"pendingApprover\": d.material_pendingApprover,\n            \"SQContact\": d.sqagroup_sqaConfirmedByEmail,\n            \"approvedBy\": d.material_approvedBy,\n            \"rejectedBy\": d.material_rejectedBy,\n\n            \"approvalWorkflowContacts\": approvalWorkflowUnique, //email contacts\n\n            \"labelObject\": {\n                \"comment\": oLabelElevatorComments.getText(),\n                \"confirmBy\": oLabel3ConfirmedByName.getText(),\n                \"confirmDt\": oLabel5ConfirmedDate.getText(),\n                \"confirmedByEmail\": oLabel4ConfirmedByEmail.getText(),\n                /*\n                2021ENHANCEMENTS\n                updated by : vighnesh on april 1, 2022\n\n                it was observed that incorrect labels were printed in the detailed view of second approver audit trail,\n                remediation: correct label name passed from UI\n                */\n                \"elevatedApprovConf\": oLabelConfirmElevated.getText()\n            },\n\n            //email template\n            \"materialId\": d.material_matInfoId,\n            \"jnjSegment\": d.material_jnjSegment,\n            \"jnjQualOrg\": d.material_jnjOrg,\n            \"jnjOpComp\": d.material_jnjOpComp,\n            \"jnjSite\": d.material_jnjSite,\n            \"supType\": d.material_supplierType,\n            \"clLevel\": d.material_criticalityLevel,\n            \"riskCatg\": d.material_riskCatgGroup,\n            \"clRation\": d.material_clRationale,\n            \"name\": AppCache.userInfo.name.split('[')[0].trim(),\n            \"requestTimeMatOnASL\": d.material_materialRequestedTimeOnASL, //material level\n            \"typeOfRequest\": d.material_materialTypeOfRequest, //material level //JP\n            \"supplierName\": oInputSupplierName.getValue().trim(),\n            \"srcQualFName\": sourceQualityName\n\n\n        }\n    };\n\n    apiconfirmElevatedApprover(options);\n}\n\n\n/*\n2021ENHANCEMENTS\nupdated by :vighnesh\nupdated on : jan 12, 2022\n\nupdated on : april 25, 2022\ndefect remediation : AGHP-2586\n\nfunction to get udpated approval data which includes\npending approver, approved by & rejected By information for avoiding issues when concurrent users act on the materials approvals without refresh\nAGHP-2490 defect remediation\n*/\nfunction getUpdatedApprovalInfo(tab_panel) {\n\n    sap.ui.core.BusyIndicator.show(0)\n\n    let sel = oIconTabBarApproversList.getModel().getData();\n\n    if (sel && sel.material_supplierInfoId !== \"\" && sel.material_matInfoId !== \"\") {\n        var options = {\n            data: {\n                \"supplierInfoId\": sel.material_supplierInfoId,\n                \"materialInfoId\": sel.material_matInfoId,\n                /*\n                tab_panel will be only passed for SQ tab 3 panel data operations\n                otherwise would be undefined.\n                see script for more information\n                */\n                'tab_panel': tab_panel //AGHP-2586\n            }\n        };\n\n        apigetUpdatedApprovalData(options);\n\n    } else {\n        let errTxt = 'Refresh the application.please try again'\n        showMessageToast(errTxt)\n        sap.ui.core.BusyIndicator.hide();\n    }\n\n}\n\n","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"ae280a44-ef1a-40f1-9d52-d59270fdfac0","fieldName":"SetApproversData","fieldParent":"fc566e75-5e74-4af0-bc3e-e6eef7d452f4","fieldPos":839,"fieldType":"neptune.Script","script":"function afterSelectingApproverMaterial(r) {\n\n    //VIGHNESH 429\n    /*calling function to clear the remaining count label*/\n    clearRemCountLabel();\n    if (r) {\n        oIconTabBarApproversList.setVisible(true);\n        boxComments.setVisible(true);\n        r = r[0];\n        // res.finalResponse.Materials[i].custom_role = g_selectedRole;\n        var flag;\n        if (g_action === \"VIEW\" || g_click_view_icon_approval) {\n            flag = false;\n\n            r.custom_field_asl_editable = flag;\n            //  toggleSQAFields(r);\n            r.custom_field_sqaa_editable = flag;\n            r.custom_field_rqc_editable = flag;\n            r.custom_field_audit_editable = flag;\n            r.custom_field_elevated_editable = flag;\n\n        } else if (g_action === \"EDIT\") {\n            flag = true;\n\n            r.custom_field_a_editable = flag;\n            r.custom_field_asl_editable = (g_selectedRole === 'ASL' && !r.aslowner_id) ? true : false;\n            r.custom_field_sqaa_editable = (g_selectedRole === 'SQAA' && !r.sqagreement_id) ? true : false;\n            r.custom_field_rqc_editable = (g_selectedRole === 'RQC' && !r.regulatory_id) ? true : false;\n            r.custom_field_audit_editable = (g_selectedRole === 'AUDIT' && !r.audit_id) ? true : false;\n            r.custom_field_elevated_editable = (g_selectedRole === 'ELEVATED' && !r.elevated_id) ? true : false;\n\n        }\n\n        if (oIconTabBarApproversList.hasModel()) {\n            oIconTabBarApproversList.getModel().setData(r);\n\n            /*\n            NOTE: 'setEmailsForApprovers' function moved here from other location 'setApproverData' so that the above 'apiPostLockingRoleWiseEdit' call will get the model binded with approvers data\n            and this function will use it\n            UPDATED BY: VIGHNESH\n            UPDATED AT: AUGUST 16, 2021\n            */\n            setEmailsForApprovers(r.material_jnjSegment, r.material_jnjOrg);\n        }\n\n        oIconTabBarApproversList.getModel().refresh();\n\n\n        if (oIconTabBarApproversList.getSelectedKey() === 'SQAESIGN') {\n            showApproverTabData('SQAESIGN');\n        } else {\n            showApproverTabData(g_selectedRole);\n        }\n        if (g_update_approver_material_table === true) {\n\n            var options = {\n                data: {\n                    \"supplierInfoId\": g_supplierId,\n                    \"materialId\": g_materialId,\n                    \"actionType\": 'EDIT',\n                    \"userRole\": g_selectedRole,\n                    \"userId\": g_users.userId,\n                    \"qualificationStatus\": g_qualificationStatus\n                }\n            };\n\n            apisupplierInfo(options);\n        }\n\n        if (r.material_qualificationStatus === g_qualStatDisqualified) {\n            highlightSelectedRow(oTableApprovers);\n            approverMatCount();\n        }\n\n    } else {\n        oIconTabBarApproversList.setVisible(true);\n        boxComments.setVisible(true);\n    }\n    sap.ui.core.BusyIndicator.hide();\n}\n\nfunction updateSingleMatApprover(data) {\n    var options = {\n        parameters: {\n            \"supplierInfoId\": resData.supplierId,\n            \"materialInfoId\": resData.matInfoId // Optional \n        }\n    };\n\n    apigetUpdatedSupplierInfo(options);\n}\n\nfunction toggleSQAESIGNtab(data) {\n    var checkRqc = false;\n    if (data.material_crucialSupplierStatus === \"Yes\" || data.material_criticalSubContStatus === \"Yes\") {\n        /*If panel is visible and rqc emails are defined*/\n        if (oPanelReg.getVisible() && data.sqagroup_rqcContact) {\n            checkRqc = true;\n        } else if (oPanelReg.getVisible() && !data.sqagroup_rqcContact) {\n            checkRqc = false;\n        }\n    } else {\n        checkRqc = true;\n    }\n\n    var pendingAtAudit = data.material_pendingApprover.includes('AUDIT') ? true : false;\n    var pendingAtASL = data.material_pendingApprover.includes('ASL') ? true : false;\n    var pendingAtRQC = data.material_pendingApprover.includes('RQC') ? true : false;\n    var pendingAtSQAA = data.material_pendingApprover.match(/(?:^|\\W)SQAA(?:$|\\W)/g) ? true : false;\n    var pendingAtSQA = data.material_pendingApprover.match(/(?:^|\\W)SQA(?:$|\\W)/g) ? true : false;\n    var pendingAtElevated = data.material_pendingApprover.includes('ELEVATED') ? true : false;\n    var pendingAtREQ = data.material_pendingApprover.includes('REQ') ? true : false;\n    //data.material_pendingApprover.match(/(?:^|\\W)ELEVATED(?:$|\\W)/g) ? true : false;\n\n\n    if (!pendingAtAudit && !pendingAtRQC && !pendingAtSQAA && data.sqagroup_auditRequired && data.sqagroup_sqaaRequired && checkRqc &&\n        ((pendingAtSQA && data.sqagroup_id) || pendingAtElevated || g_selectedRole === 'REQ' || data.material_pendingApprover === \"\")) {\n        oIconTabFilterSQAESign.setVisible(true);\n    } else {\n        oIconTabFilterSQAESign.setVisible(false);\n    }\n\n    if (!pendingAtAudit && !pendingAtRQC && !pendingAtSQAA && !pendingAtElevated &&\n        (pendingAtSQA || pendingAtASL || pendingAtREQ || g_selectedRole === 'REQ' || g_selectedRole === 'ASL')) {\n        oPanelSQAconf.setVisible(true);\n    } else {\n        oPanelSQAconf.setVisible(false);\n    }\n\n}\n\n\n\n/*\nNOTE: For viewing all the data in the text areas, changing enabled to editable\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 15, 2021\n*/\nfunction toggleSQAFields(r2) {\n\n    var pendingAtSQA = r2.material_pendingApprover.match(/(?:^|\\W)SQA(?:$|\\W)/g) ? true : false;\n\n    var b1 = (g_selectedRole === \"SQA\" && !r2.sqagroup_auditRequired) ? true : false;\n\n    var b2 = (g_selectedRole === \"SQA\" && !r2.sqagroup_sqaaRequired) ? true : false;\n\n    // var b3 = (g_selectedRole === \"SQA\" && r2.sqagroup_qualificationStatus !== \"QUALIFIED\") ? true : false;\n    var b3 = (g_selectedRole === \"SQA\" && !r2.sqagroup_qualificationStatus) ? true : false; //PREM1\n\n    var b4 = (g_selectedRole === \"SQA\" && !r2.sqagroup_returnTo) ? true : false;\n\n    var b5 = (g_selectedRole === \"SQA\" && !r2.sqagroup_rqcContact) ? true : false;\n\n    if (g_action === 'VIEW' || g_click_view_icon_approval) {\n        b1 = false;\n        b2 = false;\n        b3 = false;\n        b4 = false;\n        b5 = false;\n    }\n\n\n    //SQ REJECTION BLOCK\n    oRadioButtonGrpPanel1SQAConf.setEnabled(b4);\n    txtAreaSQARejComments.setEditable(b4);\n    oBntSQAConfBtn.setVisible(b4);\n    oBtnSQAPanelReset.setVisible(b4);\n\n\n    //SQ - AUDIT BLOCK\n    sqauditEnable(b1); //audit_id\n    var t_sqauditButtons = g_selectedRole === \"SQA\" && !r2.material_pendingApprover.includes(g_roleNameAudit) && r2.sqagroup_auditRequired && pendingAtSQA && !g_click_view_icon_approval ? true : false;\n    btnResendSQAudit.setVisible(t_sqauditButtons);\n    btnCancelResendA.setVisible(false);\n\n\n    //SQ - SQAA BLOCK\n    sqqualityEnable(b2); //sqagreement_id\n    var t_sqsqaaButtons = g_selectedRole === \"SQA\" && !r2.material_pendingApprover.includes(g_roleNameSqaa) && r2.sqagroup_sqaaRequired && pendingAtSQA && !g_click_view_icon_approval ? true : false;\n    btnResendSQsqaa.setVisible(t_sqsqaaButtons);\n    btnCancelResendSQ.setVisible(false);\n\n\n    //SQ - RQC BLOCK \n    sqrqcEnable(b5); //regulatory_id\n    var t_sqrqcButtons = g_selectedRole === \"SQA\" && !r2.material_pendingApprover.includes(g_roleNameRqc) && r2.sqagroup_rqcContact && pendingAtSQA && !g_click_view_icon_approval ? true : false;\n    btnResendSQReg.setVisible(t_sqrqcButtons);\n    btnCancelResendR.setVisible(false);\n\n\n    //SQ APPROVAL BLOCK - QUALPACK\n    if (g_selectedRole !== 'SQA' ||\n        (g_action === 'VIEW' || g_click_view_icon_approval) ||\n        g_action === 'EDIT') {\n\n        oMultiComboElevatedApp.setEditable(b3);\n        oComboQualificationStatus.setEnabled(b3);\n        txtAreaQualificationRationale.setEditable(b3);\n        oHBoxSQAAttachments.setVisible(b3);\n        oColumnSQADelAttach.setVisible(b3);\n\n    }\n}\n\n\n/*\nNOTE: For viewing all the data in the text areas under RQC panel in SQ tab, update with multiple click fix\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 15, 2021\n*/\nfunction sqrqcEnable(status) {\n\n    oMultiComboBoxRQCEmailGroup.setEditable(status);\n    oBtnSQARegBtn.setVisible(status);\n    oBtnSQRQCPanelReset.setVisible(status);\n\n    sap.ui.core.BusyIndicator.hide(); //multiple click\n\n}\n\n\n/*\nNOTE: For viewing all the data in the text areas under AUDIT panel in SQ tab, changing enabled to editable\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 15, 2021\n*/\nfunction sqauditEnable(status) {\n\n    oRadioButtonGroupAudit.setEnabled(status);\n    txtAreaStandReg.setEditable(status);\n    txtAreaAuditComments.setEditable(status);\n    comboAuditGrp.setEditable(status);\n    oBntSQAAuditConfirm.setVisible(status);\n    oBtnAUDITPanel1Reset.setVisible(status);\n\n    sap.ui.core.BusyIndicator.hide(); //multiple click\n}\n\n\n/*\nNOTE: For viewing all the data in the text areas under SQAA panel in SQ tab, changing enabled to editable\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 15, 2021, nov 22, 2021\nsprint 3\n2021 ENHANCEMENTS\n*/\nfunction sqqualityEnable(status) {\n\n    oRadioButtonGroupSQA.setEnabled(status);\n    oMultiComboBoxRQCEmailGroup.setEditable(status);\n    inpComboSQAgrmntTyp.setEnabled(status);\n    oRadioButtonGroupSQADoesExist.setEnabled(status);\n    inpLocationName.setEditable(status);\n    inpReferenceNumber.setEditable(status);\n    oMultiComboBoxSQAEmailGroup.setEditable(status);\n    oBtnSQASQAAconfirm.setVisible(status);\n    oBtnSQAPanel2Reset.setVisible(status);\n\n    sap.ui.core.BusyIndicator.hide(); //multiple click\n}\n\n\n\nfunction getUpdatedSupplierInfo(d) {\n\n    var options = {\n        data: {\n            \"supplierInfoId\": d.material_supplierInfoId,\n            \"materialId\": d.material_matInfoId,\n            \"actionType\": \"EDIT\",\n            \"userRole\": g_selectedRole,\n            \"userId\": g_users.userId,\n            \"qualificationStatus\": []\n        }\n    };\n\n    apigetUpdatedSupplierInfo(options);\n\n}\n\nfunction showApproverTabData(selItem) {\n    switch (selItem) {\n        case 'ASL':\n            setDataOnASL();\n            break;\n        case 'SQA':\n            selItem = ''; //CLEARING SELITEM TO HIDE RESET AND CONFIRM BUTTONS FOR THIS TAB\n            setDataOnSQA();\n            oIconTabBarApproversList.setSelectedKey('SQA');\n            break;\n        case 'SQAESIGN':\n            selItem = 'SQA';\n            setDataOnSQA();\n            if (oIconTabFilterSQAESign.getVisible()) {\n                oIconTabBarApproversList.setSelectedKey('SQAESIGN');\n            } else {\n                oIconTabBarApproversList.setSelectedKey('SQA');\n            }\n            break;\n        case 'RQC':\n            setDataOnRQC();\n            break;\n        case 'SQAA':\n            setDataOnSQAA();\n            break;\n        case 'AUDIT':\n            setDataOnAUDIT();\n            break;\n        case 'ELEVATED':\n            setDataOnELEVATED();\n            break;\n        default:\n            setDataOnASL();\n            btnReset.setVisible(false);\n            btnApproverConfirm.setVisible(false);\n            btnApproverConfirm.setEnabled(false);\n            btnReset.setEnabled(false);\n            break;\n    }\n\n    g_selectedRole === selItem ? btnApproverConfirm.setVisible(true) : btnApproverConfirm.setVisible(false);\n    g_selectedRole === selItem ? btnReset.setVisible(true) : btnReset.setVisible(false);\n}\n\n\n\n/*\nNOTE: function to set data on ASL tab\nUPDATED: VIGHNESH\nUPDATED ON: SEPT 14, 2021\nupdated to remove warning style class if users enter text upto character limit\n*/\nfunction setDataOnASL() {\n    var d = oIconTabBarApproversList.getModel().getData();\n\n    if (d.aslowner_aslOwnerConfirmation === 'Yes') {\n\n        oRadioButtonGroup.setSelectedIndex(0);\n        oVBoxASLComments.setVisible(false);\n        oVBox2ASLConfirmedDate.setVisible(true);\n        oVBox3ASLApproverNameOfUser.setVisible(true);\n        oVBox1ASLOwnerConfirmedBy.setVisible(true);\n        oVBox2ASLEmailSendValues.setVisible(true);\n\n    } else if (d.aslowner_aslOwnerConfirmation === 'No') {\n\n        oRadioButtonGroup.setSelectedIndex(1);\n        oVBoxASLComments.setVisible(true);\n        oVBox2ASLConfirmedDate.setVisible(true);\n        oVBox3ASLApproverNameOfUser.setVisible(true);\n        oVBox1ASLOwnerConfirmedBy.setVisible(true);\n        oVBox2ASLEmailSendValues.setVisible(false);\n\n        txtAreaASLcomments.removeStyleClass('warning');\n        txtAreaASLcomments.removeStyleClass('error');\n        txtAreaASLcomments.addStyleClass('textbox');\n        txtAreaASLcomments.setValueState('None');\n        txtAreaASLcomments.setValueStateText();\n\n    } else {\n        oRadioButtonGroup.setSelectedIndex(-1);\n        resetApproverTab('ASL');\n    }\n\n    const sqContact = d.aslowner_SQContact ? d.aslowner_SQContact.split(',') : [];\n    oMultiComboBoxSendMail.setSelectedKeys(sqContact);\n\n    oIconTabBarApproversList.setSelectedKey('ASL');\n\n    btnApproverConfirm.setEnabled(d.aslowner_id || g_click_view_icon_approval ? false : true);\n    btnReset.setEnabled(d.aslowner_id || g_click_view_icon_approval ? false : true);\n\n    toggleSQAESIGNtab(d);\n}\n\n\n\n\n\n/*\nNOTE: function to set data on SQA (4 panels & SQ approval tab) tab in view/edit mode & updated with removal of warning highlighting\nUPDATED: VIGHNESH\nUPDATED ON: SEPT 14, 2021\nupdated to remove warning style class if users enter text upto character limit\n*/\nfunction setDataOnSQA() {\n\n    //RESET GLOBAL\n    g_approver_before_resending_sqadata = {\n        sqaBlock: [],\n        oldData: undefined\n    };\n\n\n    let d = oIconTabBarApproversList.getModel().getData();\n    toggleSQAFields(d);\n\n    var supAtch = [],\n        sqaAtch = [];\n\n    /*********************************************************************/\n    //SQA - AUDIT BLOCK\n    setDataOnSQAAUDIT(d);\n\n    /*********************************************************************/\n    //SQA - SQAA BLOCK \n\n    setDataOnSQASQAA(d);\n\n    /*********************************************************************/\n\n    //SQA - RQC BLOCK\n    setDataOnSQARQC(d);\n\n    /*********************************************************************/\n\n    //QUALPACK BLOCK\n    if (d.sqagroup_sqaConfirmation === \"Yes\") {\n        onPressconfESign(true);\n    } else if (d.sqagroup_sqaConfirmation === \"No\") {\n        onPressconfESign(false);\n    } else {\n        resetApproverTab('SQA');\n    }\n\n\n    for (var j = 0; j < d.attachments.length; j++) {\n        if (d.attachments[j].groupId === \"SQA\" && d.attachments[j].matInfoId === oIconTabBarApproversList.getModel().getData().material_matInfoId) {\n            supAtch.push(d.attachments[j]);\n        }\n    }\n\n\n    oTableSQAAttachments.getModel().setData(d.attachments);\n    attachmentTableCount();\n\n    if (d.sqagroup_qualificationStatus && d.sqagroup_qualificationStatus !== \"\") {\n        oComboQualificationStatus.setSelectedKey(d.sqagroup_qualificationStatus);\n\n        btnApproverConfirm.setVisible(true);\n        oVBoxQAEmailSendValues.setVisible(true);\n        onPressconfESign(true);\n\n    } else {\n        resetApproverTab('SQA');\n        btnApproverConfirm.setVisible(false);\n        oVBoxQAEmailSendValues.setVisible(false);\n\n    }\n\n    if (d.sqagroup_elevatedApprover) {\n        if (typeof (d.sqagroup_elevatedApprover) === \"string\") {\n            oMultiComboElevatedApp.setSelectedKeys(d.sqagroup_elevatedApprover.split(','));\n        } else {\n            oMultiComboElevatedApp.setSelectedKeys(d.sqagroup_elevatedApprover);\n        }\n    }\n\n    txtAreaQualificationRationale.setValue(d.sqagroup_qualificationRatSummary);\n\n    //qualification rationale text will be available all times\n    txtAreaQualificationRationale.removeStyleClass('warning');\n    txtAreaQualificationRationale.removeStyleClass('error');\n    txtAreaQualificationRationale.addStyleClass('textbox');\n    txtAreaQualificationRationale.setValueState('None');\n    txtAreaQualificationRationale.setValueStateText();\n\n    oTextSQAConfirmBy.setText(d.sqagroup_sqaConfirmedByEmail);\n    oTextASLQAOfUser.setText(d.sqagroup_sqaConfirmedByName);\n    oTextSQAConfirmedDate.setText(d.sqagroup_sqaConfirmedDate);\n\n\n\n    /*SQA Qualpack Tab visibility*/\n    toggleSQAESIGNtab(d);\n\n    /*********************************************************************/\n\n    /*SQA Confirmation Block visibility*/\n\n\n    let sqaConfFlag = false;\n    if (d.sqagroup_returnTo === \"ASL\") {\n        oRadioButtonGrpPanel1SQAConf.setSelectedIndex(0);\n        sqaConfFlag = false;\n\n        removeSQA_RETURNHigh();\n\n    } else if (d.sqagroup_returnTo === \"REQ\") {\n        oRadioButtonGrpPanel1SQAConf.setSelectedIndex(1);\n        sqaConfFlag = false;\n\n        removeSQA_RETURNHigh();\n\n    } else {\n        oRadioButtonGrpPanel1SQAConf.setSelectedIndex(-1);\n        clearSQA_CONFPanel();\n        sqaConfFlag = true;\n    }\n\n    panelAuditConfirm.setVisible(sqaConfFlag);\n    panelSQAgrmnt.setVisible(sqaConfFlag);\n\n    if (d.material_crucialSupplierStatus === \"Yes\" || d.material_criticalSubContStatus === \"Yes\") {\n        oPanelReg.setVisible(sqaConfFlag);\n    }\n\n\n    if (btnApproverConfirm.getVisible() === true) {\n        if (g_click_view_icon_approval === true) {\n            btnApproverConfirm.setEnabled(false);\n            btnReset.setEnabled(false);\n        } else if (oComboQualificationStatus.getSelectedKey().length > 0 && oComboQualificationStatus.getSelectedKey() !== \"\") {\n            btnApproverConfirm.setEnabled(false);\n            btnReset.setEnabled(false);\n        } else {\n            btnApproverConfirm.setEnabled(true);\n            btnReset.setEnabled(true);\n        }\n    }\n}\n\n\n\n/*\nVGHNESH2021ENHANCEMENTS-2199\nNOTE: \nfuture implementation -- according the 2021 Enhancements, AGHP-2199, RQC Comments field is decided to be kept mandatory when user either approves or reject the material.\nDiscarding the visibility of RQC comments to not differentiate between approve & reject\nCHANGED BY: VIGHNESH\nCHANGED ON: AUGUST 31, 2021\nfunction to set data on RQC tab in view/edit mode & updated with removal of warning highlighting\n*/\nfunction setDataOnRQC() {\n\n    var d = oIconTabBarApproversList.getModel().getData();\n\n    if (d.regulatory_regulConf === 'Yes') {\n        oRadioButtonGroupRQC.setSelectedIndex(0);\n\n        removeRQCHighlight();\n        oHBoxRQCComments.setVisible(true);\n        onPressRQCConf(true);\n\n    } else if (d.regulatory_regulConf === 'No') {\n        oRadioButtonGroupRQC.setSelectedIndex(1);\n\n        removeRQCHighlight();\n        oHBoxRQCComments.setVisible(true);\n        onPressRQCConf(true);\n\n    } else {\n        oRadioButtonGroupRQC.setSelectedIndex(-1);\n        resetApproverTab('RQC');\n    }\n\n    oIconTabBarApproversList.setSelectedKey('RQC');\n\n    btnApproverConfirm.setEnabled(d.regulatory_id || g_click_view_icon_approval ? false : true);\n    btnReset.setEnabled(d.regulatory_id || g_click_view_icon_approval ? false : true);\n}\n\n\n\n/*\nNOTE:function to set data on SQAA tab in view/edit mode & updated with removal of warning highlighting\nCHANGED BY: VIGHNESH\nCHANGED ON: SEPT 14, 2021\n*/\nfunction setDataOnSQAA() {\n    var d = oIconTabBarApproversList.getModel().getData();\n\n    if (d.sqagreement_sqaaConfirmation === 'Yes') {\n        oRadioButtonGroupconfirmation.setSelectedIndex(0);\n\n        oVBoxSQAAConfBy.setVisible(true);\n        oVBoxSQAAConfName.setVisible(true);\n        oVBoxSQAAConfDate.setVisible(true);\n\n        removeSQAAHighlight();\n\n    } else if (d.sqagreement_sqaaConfirmation === 'No') {\n        oRadioButtonGroupconfirmation.setSelectedIndex(1);\n\n        oVBoxSQAAConfBy.setVisible(true);\n        oVBoxSQAAConfName.setVisible(true);\n        oVBoxSQAAConfDate.setVisible(true);\n\n        removeSQAAHighlight();\n\n    } else {\n        oRadioButtonGroupconfirmation.setSelectedIndex(-1);\n        resetApproverTab('SQAA');\n    }\n\n    oComboBoxStatus.setSelectedKey(d.sqagreement_status);\n    oComboBoxSQAType.setSelectedKey(d.sqagreement_suppQualityExecuted);\n\n    setSqaaRelationData(d.sqagreement_reference_location);\n\n    oIconTabBarApproversList.setSelectedKey('SQAA');\n    btnApproverConfirm.setEnabled(d.sqagreement_id || g_click_view_icon_approval ? false : true);\n    btnReset.setEnabled(d.sqagreement_id || g_click_view_icon_approval ? false : true);\n\n\n    oColumnSQAAactions.setVisible(d.sqagreement_id || g_click_view_icon_approval ? false : true);\n}\n\n\n\n/*\nNOTE:function to set data on AUDIT tab in view/edit mode & updated with removal of warning highlighting\nCHANGED BY: VIGHNESH\nCHANGED ON: SEPT 14, 2021\n*/\nfunction setDataOnAUDIT() {\n    let d = oIconTabBarApproversList.getModel().getData();\n\n    let auditFlag = false;\n    if (d.audit_auditConfirm === 'Yes') {\n        oRadioButtonxAuditGroupconfirmation.setSelectedIndex(0);\n        auditFlag = true;\n\n        removeAUDITHighlight();\n\n    } else if (d.audit_auditConfirm === 'No') {\n        oRadioButtonxAuditGroupconfirmation.setSelectedIndex(1);\n        auditFlag = true;\n\n        removeAUDITHighlight();\n\n    } else {\n        oRadioButtonxAuditGroupconfirmation.setSelectedIndex(-1);\n        resetApproverTab('AUDIT');\n        auditFlag = false;\n    }\n\n    onPressConfAudit(auditFlag);\n\n\n    if (d.audit_refusal === 'Yes') {\n        oRadioButtonGroup1AuditRefuseYesNo.setSelectedIndex(0);\n    } else if (d.audit_refusal === 'No') {\n        oRadioButtonGroup1AuditRefuseYesNo.setSelectedIndex(1);\n    } else {\n        oRadioButtonGroup1AuditRefuseYesNo.setSelectedIndex(-1);\n    }\n\n    oComboBoxAuditType.setSelectedKey(d.audit_auditType);\n    oComboBoxAuditOutcome.setSelectedKey(d.audit_auditOutcome);\n    oComboBoxAuditStatus.setSelectedKey(d.audit_status);\n\n\n    setAuditRelationData(d.audit_system_record);\n\n    oIconTabBarApproversList.setSelectedKey('AUDIT');\n    btnApproverConfirm.setEnabled(d.audit_id || g_click_view_icon_approval ? false : true);\n    btnReset.setEnabled(d.audit_id || g_click_view_icon_approval ? false : true);\n    oColumnAUDITactions.setVisible(d.audit_id || g_click_view_icon_approval ? false : true);\n\n}\n\n\n\n/*\nNOTE:function to set data on ELEVATED tab in view/edit mode & updated with removal of warning highlighting\nCHANGED BY: VIGHNESH\nCHANGED ON: SEPT 14, 2021\n*/\nfunction setDataOnELEVATED() {\n    let d = oIconTabBarApproversList.getModel().getData();\n\n\n    if (d.elevated_elevatedApprovConf === 'Yes') {\n        oRadioButtonGroupElevatedApproverConfirmation.setSelectedIndex(0);\n        onPressConfElevated(true);\n\n        removeSecAppHighlight();\n\n    } else if (d.elevated_elevatedApprovConf === 'No') {\n        oRadioButtonGroupElevatedApproverConfirmation.setSelectedIndex(1);\n        onPressConfElevated(true);\n\n        removeSecAppHighlight();\n\n    } else {\n        oRadioButtonGroupElevatedApproverConfirmation.setSelectedIndex(-1);\n        resetApproverTab('ELEVATED');\n    }\n\n    oIconTabBarApproversList.setSelectedKey('ELEVATED');\n    btnApproverConfirm.setEnabled(d.elevated_id || g_click_view_icon_approval ? false : true);\n    btnReset.setEnabled(d.elevated_id || g_click_view_icon_approval ? false : true);\n\n\n    toggleSQAESIGNtab(d);\n}\n\n\n\n/*\nNOTE:function to set emails based on the requester names at supplier & material levels\nif both are batchadmin then show batchadmin emails in the email drop downs else show users names/emails\nCHANGED BY: VIGHNESH\nCHANGED ON: NOVEMBER 25, 2020\n*/\nfunction setEmailsForApprovers(strSegment, strQualOrg) {\n\n    let e = oIconTabBarApproversList.getModel().getData();\n    if (oTextReqName.getText().toLowerCase() === 'batchadmin' && e.material_materialRequesterName === 'batchadmin') {\n\n        const adminEmail = 'batchadmin@ITS.jnj.com';\n        oMultiComboBoxSendMail.setValue(adminEmail);\n        oMultiComboBoxRQCEmailGroup.setValue(adminEmail);\n        oMultiComboBoxSQAEmailGroup.setValue(adminEmail);\n        comboAuditGrp.setValue(adminEmail);\n        oMultiComboElevatedApp.setValue(adminEmail);\n\n        return;\n    }\n\n\n    let dbADApprovers = modelADGroupApprovers.getData().records;\n\n    /*\n    INCIDENT: INC000024134280\n    NOTE: function 'resetBatchAdminEmail' added to handle the scenario where the batchadmin@ITS.JNJ.com value gets left out in the email field\n    This function will clear all the combo box's values (NOT KEYS) if there exist any.\n    batchadmin value is set when requester name at the supplier & material level is batchadmin\n    UPDATED BY: VIGHNESH\n    UPDATED AT: AUGUST 18, 2021\n    */\n    for (var i in dbADApprovers) {\n        if (dbADApprovers[i].segment === strSegment && dbADApprovers[i].qualityOrg === strQualOrg) {\n            switch (dbADApprovers[i].role_key) {\n\n                case 'SQA':\n                    resetBatchAdminEmail('SQA');\n                    ldapEmailCombo(dbADApprovers[i].userEmails, oMultiComboBoxSendMail);\n                    break;\n\n                case 'RQC':\n                    resetBatchAdminEmail('RQC');\n                    ldapEmailCombo(dbADApprovers[i].userEmails, oMultiComboBoxRQCEmailGroup);\n                    break;\n\n                case 'SQAA':\n                    resetBatchAdminEmail('SQAA');\n                    ldapEmailCombo(dbADApprovers[i].userEmails, oMultiComboBoxSQAEmailGroup);\n                    break;\n\n                case 'AUDIT':\n                    resetBatchAdminEmail('AUDIT');\n                    ldapEmailCombo(dbADApprovers[i].userEmails, comboAuditGrp);\n                    break;\n\n                case 'ELEVATED':\n                    resetBatchAdminEmail('ELEVATED');\n                    ldapEmailCombo(dbADApprovers[i].userEmails, oMultiComboElevatedApp);\n                    break;\n\n                default:\n                    resetAllBatchAdminEmail();\n                    break;\n\n            }\n        }\n    }\n\n}\n\n/*\nINCIDENT: INC000024134280\nNOTE: function to reset all the batch admin values (NOT KEYS) in the drop down fields\nthis function will be called incase there is no role defined. handling the exceptions\nUPDATED BY: VIGHNESH\nUPDATED AT: AUGUST 18, 2021\n*/\n\nfunction resetAllBatchAdminEmail() {\n    oMultiComboBoxSendMail.setValue(); //for SQ Contact under ASL tab\n    oMultiComboBoxRQCEmailGroup.setValue(); //for RQC contact under SQ tab\n    comboAuditGrp.setValue(); //for AUDIT contact under SQ tab\n    oMultiComboBoxSQAEmailGroup.setValue(); //for SQAA contact under SQ tab\n    oMultiComboElevatedApp.setValue(); //for SECOND APPROVER contact under SQ APPROVAL tab\n}\n\n\n/*\nINCIDENT: INC000024134280\nNOTE: function to reset batch admin values (NOT KEYS) in the drop down fields only based on the roles\nthis function will be called incase there is no role defined. handling the exceptions\nUPDATED BY: VIGHNESH\nUPDATED AT: AUGUST 18, 2021\n*/\nfunction resetBatchAdminEmail(role) {\n\n    if (role && role !== \"\") {\n        switch (role) {\n\n            case 'SQA':\n                oMultiComboBoxSendMail.setValue(); //for SQ Contact under ASL tab\n                break;\n\n            case 'RQC':\n                oMultiComboBoxRQCEmailGroup.setValue(); //for RQC contact under SQ tab\n                break;\n\n            case 'AUDIT':\n                comboAuditGrp.setValue(); //for AUDIT contact under SQ tab\n                break;\n\n            case 'SQAA':\n                oMultiComboBoxSQAEmailGroup.setValue(); //for SQAA contact under SQ tab\n                break;\n\n            case 'ELEVATED':\n                oMultiComboElevatedApp.setValue(); //for SECOND APPROVER contact under SQ APPROVAL tab\n                break;\n\n            default:\n                resetAllBatchAdminEmail(); //reset all drop down fields\n                break;\n        }\n\n    } else {\n        resetAllBatchAdminEmail();\n    }\n\n}\n\n\n\n\nfunction checkSQABlockCONF() {\n    var data = oIconTabBarApproversList.getModel().getData();\n\n    if (!data.sqagroup_auditRequired &&\n        !data.sqagroup_sqaaRequired &&\n        (!data.sqagroup_rqcContact)) {\n        return true\n    } else {\n        return false\n    }\n} //05/12 not sure code\n\nfunction checkSQABlockCONF2() {\n    var data = oIconTabBarApproversList.getModel().getData();\n\n    if (data.sqagroup_auditRequired && data.sqagroup_sqaaRequired) {\n        if (oPanelReg.getVisible() && data.sqagroup_rqcContact && data.sqagroup_rqcContact !== \"\") {\n            return true;\n        } else if (!(data.material_crucialSupplierStatus === \"Yes\" || data.material_criticalSubContStatus === \"Yes\")) {\n            return true;\n        } else {\n            return false;\n        }\n    } else {\n        return false;\n    }\n\n} //05/12 not sure code","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"ebae9435-384a-4f8d-9d71-5cb874f0a6d0","fieldName":"SQABlockJS","fieldParent":"fc566e75-5e74-4af0-bc3e-e6eef7d452f4","fieldPos":840,"fieldType":"neptune.Script","script":"/*\nNOTE: set data on SQA-AUDIT block & remove warning highlight if user enters text upto maximum characters\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 14, 2021\n*/\nfunction setDataOnSQAAUDIT(d) {\n    if (d.sqagroup_auditRequired === 'Yes') {\n        oRadioButtonGroupAudit.setSelectedIndex(0);\n        oVBoxAuditGrp.setVisible(true);\n        oVBoxAuditConfirmationDetails.setVisible(true);\n        oHBoxSQAAuditEmailNameDate.setVisible(true);\n\n        //block to remove the highlighting if user enters text upto maximum characters\n        //standards/regulation\n        txtAreaStandReg.removeStyleClass('warning');\n        txtAreaStandReg.removeStyleClass('error');\n        txtAreaStandReg.addStyleClass('textbox');\n        txtAreaStandReg.setValueState('None');\n        txtAreaStandReg.setValueStateText();\n\n        //comments\n        txtAreaAuditComments.removeStyleClass('warning');\n        txtAreaAuditComments.removeStyleClass('error');\n        txtAreaAuditComments.addStyleClass('textbox');\n        txtAreaAuditComments.setValueState('None');\n        txtAreaAuditComments.setValueStateText();\n\n    } else if (d.sqagroup_auditRequired === 'No') {\n\n        oRadioButtonGroupAudit.setSelectedIndex(1);\n        oVBoxAuditGrp.setVisible(false);\n        oVBoxAuditConfirmationDetails.setVisible(false);\n        oHBoxSQAAuditEmailNameDate.setVisible(true);\n\n    } else {\n        oRadioButtonGroupAudit.setSelectedIndex(-1);\n        clearSQA_AUDITpanel();\n    }\n    if (Array.isArray(d.sqagroup_auditGrp)) {\n\n    } else {\n        if (d.sqagroup_auditGrp === null) {\n\n        } else {\n            d.sqagroup_auditGrp = (d.sqagroup_auditGrp).split(',')\n        }\n    }\n    comboAuditGrp.setSelectedKeys(d.sqagroup_auditGrp);\n    txtAreaStandReg.setValue(d.sqagroup_standardsRegulations);\n    txtAreaAuditComments.setValue(d.sqagroup_auditComments);\n    oTextSQAAuditEmail.setText(d.sqagroup_auditConfirmedByEmail);\n    oTextSQAAuditName.setText(d.sqagroup_auditConfirmedByName);\n    oTextSQAAuditDate.setText(d.sqagroup_auditConfirmedDate);\n\n}\n\n\n\n/*\nNOTE: set data on SQA-SQAA block & remove warning highlight if user enters text upto maximum characters\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 14, 2021\n*/\nfunction setDataOnSQASQAA(d) {\n    if (d.sqagroup_sqaaRequired === 'Yes') {\n        oRadioButtonGroupSQA.setSelectedIndex(0);\n\n        oHBoxSQADoesExistEmailGroup.setVisible(true);\n        oHBoxSQATypeEmail.setVisible(true);\n        onPressSQA_SQAA(true);\n\n    } else if (d.sqagroup_sqaaRequired === 'No') {\n        oRadioButtonGroupSQA.setSelectedIndex(1);\n        oHBoxSQADoesExistEmailGroup.setVisible(false);\n        oHBoxSQATypeEmail.setVisible(false);\n        onPressSQA_SQAA(true);\n\n    } else {\n        oRadioButtonGroupSQA.setSelectedIndex(-1);\n        clearSQA_SQAAPanel();\n\n    }\n\n\n    /*\n    NOTE:toggling the visibility of fields based on Does it Exist value\n    if yes, contact field is removed & reference/location field gets displayed\n    */\n    if (d.sqagroup_existForSegment === 'Yes') {\n        oRadioButtonGroupSQADoesExist.setSelectedIndex(0);\n        oHBoxSQARefLoc.setVisible(true);\n        oVBoxSQAEmailGroup.setVisible(false);\n\n        //reference number\n        inpReferenceNumber.removeStyleClass('warning');\n        inpReferenceNumber.removeStyleClass('error');\n        inpReferenceNumber.addStyleClass('textbox');\n        inpReferenceNumber.setValueState('None');\n        inpReferenceNumber.setValueStateText();\n\n    } else if (d.sqagroup_existForSegment === 'No') {\n\n        oRadioButtonGroupSQADoesExist.setSelectedIndex(1);\n        oHBoxSQARefLoc.setVisible(false);\n        oVBoxSQAEmailGroup.setVisible(true);\n\n    } else {\n        oRadioButtonGroupSQADoesExist.setSelectedIndex(-1);\n        oHBoxSQARefLoc.setVisible(false);\n    }\n\n    lblSQSegRiskCat.setText(\"Does it Exist for \" + d.material_supplierType + \" & \" + d.material_criticalityLevel + \" ?:\");\n\n    var sqaContact = d.sqagroup_sqaaContact && d.sqagroup_sqaaContact !== \"\" ? (d.sqagroup_sqaaContact).split(',') : [];\n    oMultiComboBoxSQAEmailGroup.setSelectedKeys(sqaContact);\n\n    inpComboSQAgrmntTyp.setSelectedKey(d.sqagroup_sqaaType);\n    inpReferenceNumber.setValue(d.sqagroup_sqaaRefNum);\n    inpLocationName.setValue(d.sqagroup_sqaaLocationName);\n\n    oTextSQACreatedName.setText(d.sqagroup_sqaaConfirmedByName);\n    oTextSQAConfirmedBy.setText(d.sqagroup_sqaaConfirmedByEmail);\n    oTextSQAConfirmedAt.setText(d.sqagroup_sqaaConfirmedDate);\n}\n\n\n\n/*\nNOTE: set data on SQA-RQC block; no comments field exist for this block\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 14, 2021\n*/\nfunction setDataOnSQARQC(d) {\n    if (d.material_crucialSupplierStatus === \"Yes\" || d.material_criticalSubContStatus === \"Yes\") {\n        oPanelReg.setVisible(true);\n    } else {\n        oPanelReg.setVisible(false);\n    }\n\n    if (d.sqagroup_rqcContact && d.sqagroup_rqcContact !== \"\") {\n        let rqcContact = (d.sqagroup_rqcContact).split(',');\n        oMultiComboBoxRQCEmailGroup.setSelectedKeys(rqcContact);\n        oMultiComboBoxRQCEmailGroup.removeStyleClass(\"error\");\n        oMultiComboBoxRQCEmailGroup.addStyleClass(\"combobox\");\n        oVBoxSQARegEmail.setVisible(true);\n        oVBoxSQARegName.setVisible(true);\n        oVBoxSQARegDate.setVisible(true);\n\n        oTextRegConfirmedBy.setText(d.sqagroup_rqcConfirmedByEmail);\n        oTextRegCreatedName.setText(d.sqagroup_rqcConfirmedByName);\n        oTextRegConfirmedAt.setText(d.sqagroup_rqcConfirmedDate);\n\n\n    } else {\n        clearSQA_RQCpanel();\n    }\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"87330f8f-7298-40cd-88dd-9d30be69b9af","fieldName":"ApprovalReset","fieldParent":"fc566e75-5e74-4af0-bc3e-e6eef7d452f4","fieldPos":841,"fieldType":"neptune.Script","script":"\n/*\nNOTE: function to reset the approval tab, updated with removing duplicate code statements\nUPDATED BY: VIGHNESH\nUPDATED ON: SEPT 15, 2021\n*/\nfunction resetApproverTab(tabVal) {\n\n    if (!tabVal) {\n        tabVal = g_selectedRole;\n    }\n\n    switch (tabVal) {\n        case 'ASL':\n\n            oRadioButtonGroup.setSelectedIndex(-1);\n\n            oInputASLOwnerConfirmedBy.setText();\n            oInputASLApproverNameOfUser.setText();\n            oInputASLConfirmedDate.setText();\n            oVBox1ASLOwnerConfirmedBy.setVisible(false);\n            oVBox3ASLApproverNameOfUser.setVisible(false);\n            oVBox2ASLConfirmedDate.setVisible(false);\n            oMultiComboBoxSendMail.setSelectedKeys();\n            oVBox2ASLEmailSendValues.setVisible(false);\n\n            //source quality contacts\n            if (oMultiComboBoxSendMail.getVisible()) {\n                oMultiComboBoxSendMail.removeStyleClass(\"error\");\n                oMultiComboBoxSendMail.addStyleClass(\"combobox\");\n            }\n\n            //return comments\n            if (oVBoxASLComments.getVisible()) {\n                oVBoxASLComments.setVisible(false);\n                labRemCountASLCom.setText();\n                txtAreaASLcomments.setValueState(\"None\");\n                txtAreaASLcomments.setValueStateText();\n                txtAreaASLcomments.removeStyleClass(\"warning\");\n                txtAreaASLcomments.removeStyleClass(\"error\");\n                txtAreaASLcomments.addStyleClass(\"textbox\");\n            }\n            break;\n\n\n        case 'SQAA':\n            oComboBoxStatus.setSelectedKey();\n            oComboBoxSQAType.setSelectedKey();\n            oInputReferenceNumber.setValue();\n            oInputLocationName.setValue();\n            oTextAreaSQAComments.setValue();\n\n            if (oHBoxSQAAstatusTypeRefLoc.getVisible()) {\n                oComboBoxStatus.removeStyleClass(\"error\");\n                oComboBoxStatus.addStyleClass(\"combobox\");\n                oComboBoxSQAType.removeStyleClass(\"error\");\n                oComboBoxSQAType.addStyleClass(\"combobox\");\n                oInputReferenceNumber.removeStyleClass(\"error\");\n                oInputReferenceNumber.addStyleClass(\"combobox\");\n                oInputLocationName.removeStyleClass(\"error\");\n                oInputLocationName.addStyleClass(\"combobox\");\n            }\n            if (oHBoxSQAAComments.getVisible()) {\n                oTextAreaSQAComments.removeStyleClass(\"error\");\n                oTextAreaSQAComments.removeStyleClass(\"warning\");\n                oTextAreaSQAComments.setValue();\n                labRemCountSQAACom.setText();\n                oTextAreaSQAComments.setValueState(\"None\");\n                oTextAreaSQAComments.addStyleClass(\"textbox\");\n            }\n\n            oRadioButtonGroupconfirmation.setSelectedIndex(-1);\n            oTextSQAAConfirmedBy.setText();\n            oTextSQAAConfirmedName.setText();\n            oTextSQAAConfirmedDate.setText();\n            oTextSQAAQualContact.setText();\n            oVBoxSQAAConfBy.setVisible(false);\n            oVBoxSQAAConfName.setVisible(false);\n            oVBoxSQAAConfDate.setVisible(false);\n            setSqaaRelationData();\n\n            break;\n\n        case 'AUDIT':\n\n            //audit type\n            oLabelAuditType.setRequired(true);\n            oComboBoxAuditType.setSelectedKey();\n            oComboBoxAuditType.removeStyleClass(\"error\");\n            oComboBoxAuditType.addStyleClass(\"combobox\");\n\n            //audit outome\n            oLabelAuditOutcome.setRequired(true);\n            oComboBoxAuditOutcome.setSelectedKey();\n            oComboBoxAuditOutcome.removeStyleClass(\"error\");\n            oComboBoxAuditOutcome.addStyleClass(\"combobox\");\n\n            //audit refusal\n            oLabelRefusal.setRequired(true);\n            oRadioButtonGroup1AuditRefuseYesNo.setSelectedIndex(-1);\n\n            //date of audit completion\n            oLabelDateofAuditCompletion.setRequired(true);\n            oDatePicker1Audit.setDateValue();\n            oDatePicker1Audit.removeStyleClass(\"error\");\n            oDatePicker1Audit.addStyleClass(\"reqTiming\");\n\n            //audit status\n            oLabelxAuditStatus.setRequired(true);\n            oComboBoxAuditStatus.setSelectedKey();\n            oComboBoxAuditStatus.removeStyleClass(\"error\");\n            oComboBoxAuditStatus.addStyleClass(\"combobox\");\n\n            //record number & system stored\n            oLabelxAuditRecordNumber.setRequired(true);\n            oInputxAuditSystemStored.setValue();\n            oInputxAuditSystemStored.removeStyleClass(\"error\");\n            oInputxAuditSystemStored.addStyleClass(\"inputfield\");\n            oLabelAuditSystemStored.setRequired(true);\n            oInputxAuditRecordNumber.setValue();\n            oInputxAuditRecordNumber.removeStyleClass(\"error\");\n            oInputxAuditRecordNumber.addStyleClass(\"inputfield\");\n\n            //audit comments\n            oTextAreaxAuditComments.setValue();\n            oTextAreaxAuditComments.removeStyleClass(\"error\");\n            oTextAreaxAuditComments.removeStyleClass(\"warning\");\n            oTextAreaxAuditComments.setValueStateText();\n            oTextAreaxAuditComments.setValueState(\"None\");\n            labRemCountAudit.setText();\n            oTextAreaxAuditComments.addStyleClass(\"textbox\");\n\n            //confirmed by email, name & date\n            oInputCreatedByAudit.setText();\n            oInputCreatedNameAudit.setText();\n            oInputConfirmedDateAudit.setText();\n            oInputQualityContactAudit.setText();\n\n            //audit confirmation\n            oRadioButtonxAuditGroupconfirmation.setSelectedIndex(-1);\n\n            onPressConfAudit(false);\n\n            //set data in the audit relation table\n            setAuditRelationData(); //Empty value passing\n            break;\n\n        case 'ELEVATED':\n\n            //confirmation & user's email, name & date\n            oRadioButtonGroupElevatedApproverConfirmation.setSelectedIndex(-1);\n            oInputConfirmedByEmail.setText();\n            oInputConfirmedByName.setText();\n            oInput4ConfirmedDate.setText();\n\n            //second approver comments\n            oTextAreaCommentsElevated.removeStyleClass(\"error\");\n            oTextAreaCommentsElevated.removeStyleClass(\"warning\");\n            oTextAreaCommentsElevated.addStyleClass(\"textbox\");\n            oTextAreaCommentsElevated.setValue();\n            labRemCountSecApp.setText();\n            oTextAreaCommentsElevated.setValueStateText();\n            oTextAreaCommentsElevated.setValueState(\"None\");\n\n            onPressConfElevated(false);\n\n            break;\n\n        case 'RQC':\n\n            //confirmation & user's email, name & date\n            oRadioButtonGroupRQC.setSelectedIndex(-1);\n            oTextRegEmail.setText();\n            oTextRegName.setText();\n            oTextRegDate.setText();\n\n\n            //RQC comments if visible  \n            if (oHBoxRQCComments.getVisible()) {\n                oTextAreaRegComments.removeStyleClass(\"error\");\n                oTextAreaRegComments.removeStyleClass(\"warning\");\n                oTextAreaRegComments.setValueState(\"None\");\n                oTextAreaRegComments.setValue();\n                labRemCountRQCCom.setText();\n                oTextAreaRegComments.addStyleClass(\"textbox\");\n                oHBoxRQCComments.setVisible(false);\n            }\n\n            onPressRQCConf(false);\n\n            break;\n\n        case 'SQA':\n\n            //qualifiation status\n            oComboQualificationStatus.setSelectedKey();\n            oComboQualificationStatus.setValue(\"In Qualification\");\n            oComboQualificationStatus.removeStyleClass(\"error\");\n            oComboQualificationStatus.addStyleClass(\"combobox\");\n\n            //confirm by email, name & date\n            oTextSQAConfirmBy.setText();\n            oTextASLQAOfUser.setText();\n            oTextSQAConfirmedDate.setText();\n\n            //qualification rationale\n            txtAreaQualificationRationale.removeStyleClass(\"error\");\n            txtAreaQualificationRationale.removeStyleClass(\"warning\");\n            txtAreaQualificationRationale.addStyleClass(\"combobox\");\n            txtAreaQualificationRationale.setValue();\n            txtAreaQualificationRationale.setValueState(\"None\");\n            txtAreaQualificationRationale.setValueStateText();\n            labQualRationRemCount.setText();\n\n            //second approver email field\n            if (oVBoxQAEmailSendValues.getVisible()) {\n                oMultiComboElevatedApp.setSelectedKeys();\n                oMultiComboElevatedApp.removeStyleClass(\"error\");\n                oMultiComboElevatedApp.addStyleClass(\"combobox\");\n                oVBoxQAEmailSendValues.setVisible(false);\n            }\n\n            onPressconfESign(false);\n            break;\n\n        default:\n            break;\n    }\n\n}\n\n\n\nfunction onPressConfAudit(status) {\n    oVBoxAuditCreatedBy.setVisible(status);\n    oVBoxCreatedNameAudit.setVisible(status);\n    oVBoxCreatedDateAudit.setVisible(status);\n}\n\nfunction onPressRQCConf(status) {\n    oHBoxRQCEmail.setVisible(status);\n    oHBoxRQCName.setVisible(status);\n    oHBoxRQCDate.setVisible(status);\n}\n\nfunction onPressConfElevated(status) {\n    oVBoxElevConfirmedByEmail.setVisible(status);\n    oVBoxElevConfirmedByName.setVisible(status);\n    oVBoxElevConfirmedDate.setVisible(status);\n}\n\nfunction onPressconfESign(status) {\n    oVBoxSQAConfirmedBy.setVisible(status);\n    oVBoxSQANameOfUser.setVisible(status);\n    oVBoxSQAConfirmedDate.setVisible(status);\n}\n\nfunction onPressSQA_SQAA(status) {\n\n    oHBoxSQACreatedByDate.setVisible(status);\n\n}\n\n//AUDIT block in SQA\nfunction clearSQA_AUDITpanel() {\n    oRadioButtonGroupAudit.setSelectedIndex(-1);\n    comboAuditGrp.setSelectedKeys();\n    oVBoxAuditGrp.setVisible(false);\n    if (comboAuditGrp.getVisible()) {\n        comboAuditGrp.removeStyleClass(\"error\");\n        comboAuditGrp.addStyleClass(\"textbox\");\n    }\n    if (txtAreaStandReg.getVisible()) {\n        txtAreaStandReg.setValue();\n        txtAreaStandReg.removeStyleClass(\"warning\");\n        txtAreaStandReg.setValueState(\"None\");\n        txtAreaStandReg.setValueStateText();\n        labRemCountAuditStRegSQ.setText();\n        txtAreaStandReg.addStyleClass(\"textbox\");\n    }\n    if (txtAreaAuditComments.getVisible()) {\n        txtAreaAuditComments.setValue();\n        txtAreaAuditComments.removeStyleClass(\"warning\");\n        txtAreaAuditComments.addStyleClass(\"textbox\");\n        txtAreaAuditComments.setValueState(\"None\");\n        txtAreaAuditComments.setValueStateText();\n        labRemCountAuditComSQ.setText();\n    }\n    oVBoxAuditConfirmationDetails.setVisible(false);\n    oHBoxSQAAuditEmailNameDate.setVisible(false);\n\n    oTextSQAAuditEmail.setText();\n    oTextSQAAuditName.setText();\n    oTextSQAAuditDate.setText();\n}\n\n//RQC block in SQA\nfunction clearSQA_RQCpanel() {\n    oMultiComboBoxRQCEmailGroup.setSelectedKeys();\n    oTextRegConfirmedBy.setText();\n    oTextRegCreatedName.setText();\n    oTextRegConfirmedAt.setText();\n    oVBoxSQARegEmail.setVisible(false);\n    oVBoxSQARegName.setVisible(false);\n    oVBoxSQARegDate.setVisible(false);\n\n    if (oMultiComboBoxRQCEmailGroup.getVisible()) {\n        oMultiComboBoxRQCEmailGroup.removeStyleClass(\"error\");\n        oMultiComboBoxRQCEmailGroup.addStyleClass(\"combobox\");\n    }\n}\n\n//SQAA BLOCK IN SQA\nfunction clearSQA_SQAAPanel() {\n    oRadioButtonGroupSQA.setSelectedIndex(-1);\n    inpComboSQAgrmntTyp.setSelectedKey();\n    oMultiComboBoxSQAEmailGroup.setSelectedKeys();\n    oRadioButtonGroupSQADoesExist.setSelectedIndex(-1);\n\n    if (oHBoxSQATypeEmail.getVisible()) {\n        inpComboSQAgrmntTyp.removeStyleClass(\"error\");\n        inpComboSQAgrmntTyp.addStyleClass(\"combobox\");\n        oMultiComboBoxSQAEmailGroup.removeStyleClass(\"error\");\n        oMultiComboBoxSQAEmailGroup.addStyleClass(\"combobox\");\n        oHBoxSQATypeEmail.setVisible(false);\n    }\n    if (oHBoxSQARefLoc.getVisible()) {\n        inpReferenceNumber.removeStyleClass(\"error\");\n        inpReferenceNumber.removeStyleClass(\"warning\");\n        inpReferenceNumber.setValueState(\"None\");\n        inpReferenceNumber.setValue();\n        labRemCountSQARef.setText();\n        inpReferenceNumber.addStyleClass(\"textbox\");\n        inpLocationName.removeStyleClass(\"error\");\n        inpLocationName.addStyleClass(\"inputfield\");\n        oHBoxSQARefLoc.setVisible(false);\n    }\n\n    oTextSQAConfirmedBy.setText();\n    oTextSQACreatedName.setText();\n    oTextSQAConfirmedAt.setText();\n    oHBoxSQADoesExistEmailGroup.setVisible(false);\n    oHBoxSQATypeEmail.setVisible(false);\n    onPressSQA_SQAA(false);\n\n}\n\n//SQ RETURN TO BLOCK\nfunction clearSQA_CONFPanel() {\n\n    oRadioButtonGrpPanel1SQAConf.setSelectedIndex(-1);\n    oTextPanel1SQAConfEmail.setText();\n    oTextPanel1SQAConfName.setText();\n    oTextPanel1SQAConfDate.setText();\n    oVBoxPanel1SQAConfEmail.setVisible(false);\n    oVBoxPanel1SQAConfName.setVisible(false);\n    oVBoxPanel1SQAConfDate.setVisible(false);\n    txtAreaSQARejComments.removeStyleClass(\"error\");\n    txtAreaSQARejComments.removeStyleClass(\"warning\");\n    txtAreaSQARejComments.setValue();\n    txtAreaSQARejComments.setValueState(\"None\");\n    labRemCountSQRetCom.setText();\n    txtAreaSQARejComments.addStyleClass(\"textbox\");\n\n}\n\n\n\n\n/*\nNOTE: function to reset highlighting on the text field for RQC APPROVAL tab\nCREATED: VIGHNESH\nCREATED ON: SEPT 14, 2021\n*/\nfunction removeRQCHighlight() {\n    oTextAreaRegComments.removeStyleClass('warning');\n    oTextAreaRegComments.removeStyleClass('error');\n    oTextAreaRegComments.addStyleClass('textbox');\n    oTextAreaRegComments.setValueState('None');\n    oTextAreaRegComments.setValueStateText();\n}\n\n/*\nNOTE: function to reset highlighting on the text field for SQAA APPROVAL tab\nCREATED: VIGHNESH\nCREATED ON: SEPT 14, 2021\n*/\nfunction removeSQAAHighlight() {\n    //SQAA comments field is not based on visibility, it is available all times\n    oTextAreaSQAComments.removeStyleClass('warning');\n    oTextAreaSQAComments.removeStyleClass('error');\n    oTextAreaSQAComments.addStyleClass('textbox');\n    oTextAreaSQAComments.setValueState('None');\n    oTextAreaSQAComments.setValueStateText();\n}\n\n\n/*\nNOTE: function to reset highlighting on the text field for AUDIT APPROVAL tab\nCREATED: VIGHNESH\nCREATED ON: SEPT 14, 2021\n*/\nfunction removeAUDITHighlight() {\n    //audit comments field is not based on visibility, it is available all times\n    oTextAreaxAuditComments.removeStyleClass('warning');\n    oTextAreaxAuditComments.removeStyleClass('error');\n    oTextAreaxAuditComments.addStyleClass('textbox');\n    oTextAreaxAuditComments.setValueState('None');\n    oTextAreaxAuditComments.setValueStateText();\n}\n\n\n/*\nNOTE: function to reset highlighting on the text field for SECOND APPROVAL tab\nCREATED: VIGHNESH\nCREATED ON: SEPT 14, 2021\n*/\nfunction removeSecAppHighlight() {\n    //elevated comments field is not based on visibility, it is available all times\n    oTextAreaCommentsElevated.removeStyleClass('warning');\n    oTextAreaCommentsElevated.removeStyleClass('error');\n    oTextAreaCommentsElevated.addStyleClass('textbox');\n    oTextAreaCommentsElevated.setValueState('None');\n    oTextAreaCommentsElevated.setValueStateText();\n}\n\n\n/*\nNOTE: function to reset highlighting on the text field for RETURN panel under SQA tab\nCREATED: VIGHNESH\nCREATED ON: SEPT 14, 2021\n*/\nfunction removeSQA_RETURNHigh() {\n    txtAreaSQARejComments.removeStyleClass('warning');\n    txtAreaSQARejComments.removeStyleClass('error');\n    txtAreaSQARejComments.addStyleClass('textbox');\n    txtAreaSQARejComments.setValueState('None');\n    txtAreaSQARejComments.setValueStateText();\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"3e3c0a0c-b952-4e3f-9ca7-2274916333af","fieldName":"SearchDuns","fieldParent":99999,"fieldPos":842,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"319ba5e2-4ab6-4c78-8721-b693f35680c7","fieldName":"SearchDS","fieldParent":"3e3c0a0c-b952-4e3f-9ca7-2274916333af","fieldPos":843,"fieldType":"neptune.Script","script":"/**\n * Name: SearchDUNSNo\n * Description: function for searching a DUNS Number in matchbook API\n * Created By : Vighnesh Sawant  \n * Created At: 04/08/2020\n * CR:  \n */\nfunction getDataIndexComponent(lineItem) {\n    var data = modeloModelObjectSearchDunsNumber.oData;\n    var i = 0;\n    for (; i < data.length; i++) {\n        if (data[i].DnBDUNSNumber === lineItem.DnBDUNSNumber) {\n            break;\n        }\n    }\n    return i;\n}\n\nfunction setFlagComponent(index, flagVal) {\n    var data = modeloModelObjectSearchDunsNumber.oData;\n    for (var j = 0; j < data.length; j++) {\n        data[j].editFlag = false;\n    }\n    data[index].editFlag = flagVal;\n    oTableSearchDunsInfo.getModel().refresh();\n}\n\n\n\n\n/*\nNOTE: function to fetch the matchbook token before getting the data from matchbook\nUPDATED BY: VIGHNESH\nUPDATED ON: oct 10, 2021\nremoved unwanted comments\n2021ENHANCEMENTS\n*/\nfunction ajaxGetDunsMatchBookToken() {\n\n    let hostAddr = window.location.hostname;\n    let sub = \"jnj\";\n    if (hostAddr.includes('sbx') || hostAddr.includes('dev') || hostAddr.includes('qa')) {\n        sub = \"jnj-dev\";\n    }\n    var options = {\n        \"subDomain\": sub // Required - In Path\n    };\n\n    apioRestAPIGetDunsMatchingToken(options);\n}\n\n\n\n\n/*\nNOTE: function to fetch data from match book based on user inserted parameters\nUPDATED BY: VIGHNESH\nUPDATED ON: oct 10, 2021\nremoved hardcodings & unwanted comments\n2021ENHANCEMENTS\n*/\nfunction ajaxGetDunsInfoSearch(name, state, country) {\n    let randomId = new Date().getTime();\n\n    var options = {\n        \"id\": randomId, // Required - In Path\n        \"companyName\": name, // Required - In Path\n        \"state\": state, // Required - In Path\n        \"country\": country, // Required - In Path\n        \"username\": g_users.userId, // Required - In Path\n        \"tags\": \"\" // Required - In Path\n        ,\n        headers: {\n            \"Authorization\": g_searchMatchBookToken\n        }\n    };\n\n    apioRestAPISearchDunsInfo(options);\n}\n\n\n/*\nNOTE: function to clear the duns search parameters & remove error higlighting\nUPDATED BY: VIGHNESH\nUPDATED ON: oct 10, 2021\n2021ENHANCEMENTS\n*/\nfunction clearDunsSearch() {\n\n    //supplier name - mandatory\n    oInputSearchDunsSupplierName.setValue();\n    oInputSearchDunsSupplierName.removeStyleClass(\"error\");\n    oInputSearchDunsSupplierName.addStyleClass(\"inputfield\");\n\n    oInputSearchDunsSupplierState.setValue(); // state\n\n    //country - mandatory\n    oInputSearchDunsSupplierCountry.setValue();\n    oInputSearchDunsSupplierCountry.removeStyleClass(\"error\");\n    oInputSearchDunsSupplierCountry.addStyleClass(\"inputfield\");\n\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"6ac67992-5859-474b-dade-92593b96bdd9","fieldName":"ValidateDunsNo","fieldParent":"3e3c0a0c-b952-4e3f-9ca7-2274916333af","fieldPos":844,"fieldType":"neptune.Script","script":"let g_dunsData; // To store selected duns Info from Matchbook.\n\n/*\nfunction to validate DUNS number\nUPDATED BY: VIGHNESH\nUPDATED OB: oct 6, 2021\nremoved unwanted comments\n*/\nfunction validateDunsNo(dunsNo) {\n\n    let sr = pageSupplier.getModel().getData();\n    let pData = oPanelSupplierAddress.getModel().getData();\n    let supplierName = oInputSupplierName.getValue();\n\n    if (dunsNo ||\n        supplierName ||\n        pData.supplierAddressStreet ||\n        pData.supplierAddressCity ||\n        pData.supplierAddressState ||\n        pData.supplierAddressCountry ||\n        pData.supplierAddressPIN) {\n\n        var whereVal = {\n            \"supplierName\": supplierName,\n            \"supplierAddressStreet\": pData.supplierAddressStreet,\n            \"supplierAddressCountry\": pData.supplierAddressCountry,\n            \"supplierAddressCity\": pData.supplierAddressCity,\n            \"supplierAddressPIN\": pData.supplierAddressPIN,\n            \"supplierAddressState\": pData.supplierAddressState\n        };\n        whereVal[\"dunsNumber\"] = dunsNo.trim();\n        if (sr.supplierRecordId) {\n            whereVal[\"supplierRecordId\"] = sr.supplierRecordId;\n        }\n\n        var options = {\n            data: {\n                \"getDunsNumber\": whereVal\n            }\n        };\n        sap.ui.core.BusyIndicator.show(0);\n        apioRestAPIValidateDunsNo(options);\n\n    }\n\n    else {\n\n        if (g_actionButton === \"SAVE\") {\n            updateSupplierInfo(\"DRAFT\");\n        } else if (g_actionButton === \"SUBMIT\" || g_actionButton === \"UPDATE\") {\n            updateSupplierInfo(\"IN QUALIFICATION\");\n        }\n    }\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"6e158e5f-e3e1-4a1a-85d6-5f9079317c7d","fieldName":"Models","fieldParent":99999,"fieldPos":845,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"7c709ef9-a74e-409c-f565-d8a8a15da592","fieldName":"ADGroupApprovers","fieldParent":"6e158e5f-e3e1-4a1a-85d6-5f9079317c7d","fieldPos":846,"fieldType":"neptune.model.object","script":"","customComponent":false,"bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","request":[],"response":[],"attributes":[]},{"fieldNo":"1cc9f45a-0813-411b-963f-b31b704d8c63","fieldName":"OriginalData","fieldParent":"6e158e5f-e3e1-4a1a-85d6-5f9079317c7d","fieldPos":847,"fieldType":"neptune.model.object","script":"","customComponent":false,"bindingValue":"asl_SupplierInformation_v2>getSupplierInformationV2","bindingType":"u","bindingSource":"API","bindingParentID":"d9dd7396-94e0-48f7-9552-b1c4d44ca8ef","bindingPathID":"2d425013-c29a-4dbf-d183-a4e25edbf914","request":[],"response":[],"attributes":[]},{"fieldNo":"68e3b580-2a62-49a6-fad2-a000062c3649","fieldName":"ChangedFields","fieldParent":"6e158e5f-e3e1-4a1a-85d6-5f9079317c7d","fieldPos":848,"fieldType":"neptune.model.object","script":"","customComponent":false,"bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","request":[],"response":[],"attributes":[]},{"fieldNo":"d854d159-de3f-4a60-f3d8-9d3b825b96ba","fieldName":"oModelObjectSearchDunsNumber","fieldParent":"6e158e5f-e3e1-4a1a-85d6-5f9079317c7d","fieldPos":849,"fieldType":"neptune.model.object","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"f801b965-1a80-4fdd-f87d-50e788d46493","fieldName":"questionsDesHolder","fieldParent":"6e158e5f-e3e1-4a1a-85d6-5f9079317c7d","fieldPos":850,"fieldType":"neptune.model.array","script":"","customComponent":false,"bindingValue":"API Materail_Service_Questions>asl_questionnaireconfig","bindingType":"h","bindingSource":"API","bindingParentID":"1fb6679f-27a9-49ba-be51-a685dde1a2b6","bindingPathID":"8816db65-feae-4269-f0ca-955138b5d1a3","request":[],"response":[],"attributes":[]},{"fieldNo":"41401788-244e-4fb5-d6c1-d4320a84231c","fieldName":"adminConfigHolder","fieldParent":"6e158e5f-e3e1-4a1a-85d6-5f9079317c7d","fieldPos":851,"fieldType":"neptune.model.array","script":"","customComponent":false,"bindingValue":"asl_adminconfig_api_ui5>configData","bindingType":"h","bindingSource":"API","bindingParentID":"139c8741-e3ec-4801-9a61-73875dfedd3f","bindingPathID":"9dd9b6f9-3d64-4db3-f968-46230b0f9f02","request":[],"response":[],"attributes":[]},{"fieldNo":"17eeca48-b162-4fd7-b9e4-46885cf644a4","fieldName":"PurchaseSysDelete","fieldParent":"6e158e5f-e3e1-4a1a-85d6-5f9079317c7d","fieldPos":852,"fieldType":"neptune.model.array","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[]},{"fieldNo":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldName":"Dialogs/Popovers","fieldParent":99999,"fieldPos":853,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"2780f947-2b3f-404b-f8d9-74eb311a11a4","fieldName":"btnMissMatAttachSubmit","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":854,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"SUBMIT","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"greenbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\r\nbusy Indicators to avoid multiple clicks.\r\n*/\r\nsap.ui.core.BusyIndicator.show(0);\r\ng_discard_check_submit = true; //flag to let system know that user no longer wants to attach file & system can submit the materials for approval workflow.\r\ndialogMissedMatAttach.close();\r\n\r\nbtnSubmit.firePress();\r\n","translation":[]}]},{"fieldNo":"03cecd23-2735-4f34-d6ea-c61023b040bc","fieldName":"btnMissMatAttachClose","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":855,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"RETURN","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"dialogMissedMatAttach.close();\r\nsap.ui.core.BusyIndicator.hide();","translation":[]}]},{"fieldNo":"0df96a52-4fab-4f3f-b61d-5e79f5445744","fieldName":"dialogMissedMatAttach","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":856,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"title","grouping":"Properties","value":"ONEASL SYSTEM MESSAGE","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"endButton","grouping":"Associations","value":"btnMissMatAttachClose","script":"","translation":[]},{"attribute":"beginButton","grouping":"Associations","value":"btnMissMatAttachSubmit","script":"","translation":[]}]},{"fieldNo":"53952fbb-120c-41e7-83f2-ac5b2d5e7205","fieldName":"txtMatAttachWarn","fieldParent":"0df96a52-4fab-4f3f-b61d-5e79f5445744","fieldPos":857,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"textAlign","grouping":"Properties","value":"Left","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]}]},{"fieldNo":"910c82ad-8c80-4ef9-a4ff-2273e1f358a6","fieldName":"messStripMatAttachWarn","fieldParent":"0df96a52-4fab-4f3f-b61d-5e79f5445744","fieldPos":858,"fieldType":"sap.m.MessageStrip","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"type","grouping":"Properties","value":"Warning","script":"","translation":[]},{"attribute":"showIcon","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"85a273d0-4726-46c4-94f5-d08db347827f","fieldName":"btnMatLossClose","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":859,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CLOSE & RETURN","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"greenbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"diaMatDataLoss.close();\r\ng_goToDashClicked = false;\r\ng_goToBatchDashClicked = false;","translation":[]}]},{"fieldNo":"09f687e5-7b65-4c9d-fc94-476215e47a9d","fieldName":"btnMatLossDiscard","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":860,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"DISCARD","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\r\n2021ENHANCEMENTS\r\nupdated by : vighnesh\r\nupdated on : nov 14, 2021\r\nwhen user discards the material loss warning message for updating material data to DB\r\nTHIS IS THE SECOND CONFIRMATION\r\n*/\r\ng_matDataLoss = false;\r\ng_dataLoss = false;\r\ndiaMatDataLoss.close();\r\n\r\nif (g_goToDashClicked) {\r\n    goBackToDashboard();\r\n    return;\r\n}\r\n\r\nif (g_goToBatchDashClicked) {\r\n    AppCache.Load('oneasl_batch_upload', { //2021ENH\r\n        startParams: {\r\n            selectedFilterKey: g_batchupload_selectedFilter_key\r\n        }\r\n    })\r\n    return;\r\n}","translation":[]}]},{"fieldNo":"05bd82ad-2311-4b42-b5a1-094105706cd3","fieldName":"diaMatDataLoss","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":861,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"title","grouping":"Properties","value":"OneASL System Message","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"endButton","grouping":"Associations","value":"btnMatLossClose","script":"","translation":[]},{"attribute":"beginButton","grouping":"Associations","value":"btnMatLossDiscard","script":"","translation":[]}]},{"fieldNo":"4d92dc84-247d-4076-954b-b52fa95b8f41","fieldName":"txtMatDataLoss","fieldParent":"05bd82ad-2311-4b42-b5a1-094105706cd3","fieldPos":862,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"textAlign","grouping":"Properties","value":"Left","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]}]},{"fieldNo":"9edb2ebf-913c-486a-f6b1-670f0447938c","fieldName":"btnEditedMatClose","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":863,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CLOSE & RETURN","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"greenbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"dialogEditedMaterial.close();\r\ng_goToDashClicked = false;\r\ng_goToBatchDashClicked = false;","translation":[]}]},{"fieldNo":"8af0fcaa-94db-467c-8c3a-626045209431","fieldName":"btnEditedMatDiscard","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":864,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"DISCARD","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\r\n2021ENHANCEMENTS\r\nupdated by : vighnesh\r\nupdated on : nov 14, 2021\r\nwhen user discards the material loss warning message for validating material to soft save/udpate in UI table\r\nTHIS IS THE FISRT CONFIRMATION\r\n*/\r\ng_isMatEdited = false;\r\ng_matDataLoss = false;\r\ng_dataLoss = false;\r\ndialogEditedMaterial.close();\r\n\r\nif (g_goToDashClicked) {\r\n    goBackToDashboard();\r\n    return;\r\n}\r\n\r\nif (g_goToBatchDashClicked) {\r\n    AppCache.Load('oneasl_batch_upload', { //2021ENH\r\n        startParams: {\r\n            selectedFilterKey: g_batchupload_selectedFilter_key\r\n        }\r\n    })\r\n    \r\n\r\n    return;\r\n}","translation":[]}]},{"fieldNo":"5b22e57c-49f2-48c0-e229-729e9f5d470c","fieldName":"dialogEditedMaterial","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":865,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"title","grouping":"Properties","value":"OneASL System Message","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"endButton","grouping":"Associations","value":"btnEditedMatClose","script":"","translation":[]},{"attribute":"beginButton","grouping":"Associations","value":"btnEditedMatDiscard","script":"","translation":[]}]},{"fieldNo":"2e720715-b892-46ca-dfef-99dd3d1d9027","fieldName":"txtIsMatEdited","fieldParent":"5b22e57c-49f2-48c0-e229-729e9f5d470c","fieldPos":866,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"textAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]}]},{"fieldNo":"236274ca-ff2a-46a9-97c3-a031b21c7c2c","fieldName":"oResPopSupDetails","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":867,"fieldType":"sap.m.ResponsivePopover","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"resPop","script":"","translation":[]},{"attribute":"placement","grouping":"Properties","value":"Bottom","script":"","translation":[]},{"attribute":"offsetY","grouping":"Properties","value":"20","script":"","translation":[]}]},{"fieldNo":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldName":"oSimpleForm1","fieldParent":"236274ca-ff2a-46a9-97c3-a031b21c7c2c","fieldPos":868,"fieldType":"sap.ui.layout.form.SimpleForm","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"layout","grouping":"Properties","value":"ResponsiveGridLayout","script":"","translation":[]},{"attribute":"labelSpanS","grouping":"Properties","value":"6","script":"","translation":[]}]},{"fieldNo":"ff6754a4-3699-4c4b-c80d-3e33b8b5df6f","fieldName":"oLabelResPopDUNS","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":869,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Supplier DUNS Number","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"9ddc4e04-3316-476c-9ac5-8dced9f62c32","fieldName":"oTextResPopDUNS","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":870,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"edc8cd55-c3ad-448f-94f3-f1d4dc764f97","fieldName":"oLabelResPopStreet","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":871,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Street","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"ccfc9866-b501-4853-a783-667a94d106c7","fieldName":"oTextResPopStreet","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":872,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"2f5c4468-c575-4e02-ccb8-2361b5a10122","fieldName":"oLabelResPopCity","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":873,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"City","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"24f57bc0-b3cc-4c90-8e8e-6fe8081512db","fieldName":"oTextResPopCity","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":874,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"3380b7df-ed79-45eb-eae7-2bd6ae1a13a7","fieldName":"oLabelResPopState","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":875,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Region / State / Province","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"f9411b44-3b07-407a-d0a5-701b26f119a2","fieldName":"oTextResPopState","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":876,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"5a00ba19-d880-4d89-f069-58815de577d8","fieldName":"oLabelResPopCountry","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":877,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Country","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"0403390f-8ecb-41f9-e979-4ea70f14dec5","fieldName":"oTextResPopCountry","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":878,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"ef8623c6-5b14-487d-98e5-882725391513","fieldName":"oLabelResPopZip","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":879,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Zip / Postal Code","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"f2c7d34b-89be-4894-ac09-9479e386af4b","fieldName":"oTextResPopZip","fieldParent":"8b7bbb68-2f89-43a5-dfe1-cb7cb3082336","fieldPos":880,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputvalue","script":"","translation":[]}]},{"fieldNo":"0dfa7e17-06e7-49ca-ab9a-8976aa9426d4","fieldName":"btnCancelBU","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":881,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CANCEL","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"oDialogBU.close();","script":"oDialogBU.close();","translation":[]}]},{"fieldNo":"7afaefb7-98d6-4c15-aff4-ffe01f7787cc","fieldName":"btnBUApply","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":882,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"DONE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 28, 2021\nrefactored\n*/\nlet errorMsgs = missingFieldsBatch();\nif (errorMsgs.length > 0) {\n    let err = \"\";\n    err += \"Please enter the following mandatory fields: \" + \"\\n\" + errorMsgs.toString();\n    showMessageToast(err);\n} else {\n    updateBatchMaterialRecord('APPROVERTAB');\n}","translation":[]}]},{"fieldNo":"24bdbaa4-70ec-4426-b0bf-985fc4c60220","fieldName":"oDialogBU","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":883,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"contentWidth","grouping":"Properties","value":"1300px","script":"","translation":[]},{"attribute":"endButton","grouping":"Associations","value":"btnBUApply","script":"","translation":[]}]},{"fieldNo":"763ddfbf-d07e-43df-8c46-6645a296c2e5","fieldName":"approverBatchMaterialInfo","fieldParent":"24bdbaa4-70ec-4426-b0bf-985fc4c60220","fieldPos":884,"fieldType":"neptune.model.object","script":"","customComponent":false,"bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","request":[],"response":[],"attributes":[]},{"fieldNo":"103a0b80-e40d-4981-caf6-711bc3ff9421","fieldName":"oBlockLayout","fieldParent":"24bdbaa4-70ec-4426-b0bf-985fc4c60220","fieldPos":885,"fieldType":"sap.ui.layout.BlockLayout","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"background","grouping":"Properties","value":"Dashboard","script":"","translation":[]}]},{"fieldNo":"95e4aed0-0203-478c-b6bb-47d61f2aec1e","fieldName":"rowAudit","fieldParent":"103a0b80-e40d-4981-caf6-711bc3ff9421","fieldPos":886,"fieldType":"sap.ui.layout.BlockLayoutRow","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"87e6de0f-cc9d-4219-8266-cd68a448ac2f","fieldName":"oBlockLayoutCell1","fieldParent":"95e4aed0-0203-478c-b6bb-47d61f2aec1e","fieldPos":887,"fieldType":"sap.ui.layout.BlockLayoutCell","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"titleLevel","grouping":"Properties","value":"H6","script":"","translation":[]},{"attribute":"title","grouping":"Properties","value":"Source Quality - Audit","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"BU","script":"","translation":[]}]},{"fieldNo":"22301499-9c18-4707-ef44-221727c413c9","fieldName":"panelAuditConfirmBU","fieldParent":"87e6de0f-cc9d-4219-8266-cd68a448ac2f","fieldPos":888,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"ce4fa090-060f-4c90-f236-167a38900ff9","fieldName":"oHBox10","fieldParent":"22301499-9c18-4707-ef44-221727c413c9","fieldPos":889,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBottom","script":"","translation":[]}]},{"fieldNo":"00f24317-1190-4137-bde5-2b54f27967fc","fieldName":"cBoxAuditReq","fieldParent":"ce4fa090-060f-4c90-f236-167a38900ff9","fieldPos":890,"fieldType":"sap.m.CheckBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit Required","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"checkBoxBU","script":"","translation":[]},{"attribute":"selected","grouping":"Properties","value":"{/sqagroup_auditRequired}","script":"","translation":[]}]},{"fieldNo":"d77aca9c-d25c-4b1e-ebcf-f529a2015c74","fieldName":"oVBox1","fieldParent":"22301499-9c18-4707-ef44-221727c413c9","fieldPos":891,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"98%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"{/sqagroup_auditRequired}","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"88de392e-79b5-4e79-f569-4477c1ce43dd","fieldName":"oVBoxAuditRegTextAreaBU","fieldParent":"d77aca9c-d25c-4b1e-ebcf-f529a2015c74","fieldPos":892,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"9c2f863c-1d24-4b9a-98ed-fb05298ea9c9","fieldName":"lblStandRegBU","fieldParent":"88de392e-79b5-4e79-f569-4477c1ce43dd","fieldPos":893,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Standards and Regulations:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"4cc28673-73bc-4e26-df9d-99f9327ba00b","fieldName":"txtAreaStandRegBU","fieldParent":"88de392e-79b5-4e79-f569-4477c1ce43dd","fieldPos":894,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/sqagroup_standardsRegulations}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]}]},{"fieldNo":"6203cf39-e100-487c-9e0a-2c183d2cbfc8","fieldName":"oVBoxSQAAuditCommentsBU","fieldParent":"d77aca9c-d25c-4b1e-ebcf-f529a2015c74","fieldPos":895,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]}]},{"fieldNo":"6c29f828-5900-465b-d9c8-fa78f6fcd9c3","fieldName":"lblAuditCommentsCharLenBU","fieldParent":"6203cf39-e100-487c-9e0a-2c183d2cbfc8","fieldPos":896,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Comments","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"6b8fb17f-87f3-405a-fc5b-e5785f30b59d","fieldName":"txtAreaAuditCommentsBU","fieldParent":"6203cf39-e100-487c-9e0a-2c183d2cbfc8","fieldPos":897,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/sqagroup_auditComments}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]}]},{"fieldNo":"b28a9190-e5f2-488d-df4a-1024900dafd9","fieldName":"oBlockLayoutCell","fieldParent":"95e4aed0-0203-478c-b6bb-47d61f2aec1e","fieldPos":898,"fieldType":"sap.ui.layout.BlockLayoutCell","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"title","grouping":"Properties","value":"Audit","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"BU","script":"","translation":[]}]},{"fieldNo":"f4aeb30e-dd9e-4fc0-dee5-dae97ca5a5be","fieldName":"oPanelAuditBU","fieldParent":"b28a9190-e5f2-488d-df4a-1024900dafd9","fieldPos":899,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{/sqagroup_auditRequired}","script":"","translation":[]}]},{"fieldNo":"3755c81b-4b1a-4156-dc5f-3b3c61641f57","fieldName":"oPanelAuditBU2","fieldParent":"f4aeb30e-dd9e-4fc0-dee5-dae97ca5a5be","fieldPos":900,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"d9b33964-311f-4c24-a856-ad55b9270142","fieldName":"oHBoxxAuditTypeBU","fieldParent":"3755c81b-4b1a-4156-dc5f-3b3c61641f57","fieldPos":901,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"1294f6ce-88e0-40e3-845b-c6e1b1261b82","fieldName":"oVBoxAuditTypeBU","fieldParent":"d9b33964-311f-4c24-a856-ad55b9270142","fieldPos":902,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"95fa2819-9c0e-4598-b0ed-9fe9580c1c90","fieldName":"oLabelAuditTypeBU","fieldParent":"1294f6ce-88e0-40e3-845b-c6e1b1261b82","fieldPos":903,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit Type Executed:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"624634d1-a33f-4abd-e222-9894abddcc9c","fieldName":"oComboBoxAuditTypeBU","fieldParent":"1294f6ce-88e0-40e3-845b-c6e1b1261b82","fieldPos":904,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"selectedKey","grouping":"Properties","value":"{/audit_auditType}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"if(oComboBoxAuditTypeBU.getSelectedKey() !== \"\"){\n    oComboBoxAuditTypeBU.removeStyleClass(\"error\");\n    oComboBoxAuditTypeBU.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"016479a3-3901-4030-89e2-f0a3c53b80b7","fieldName":"oVBoxAuditOutcomeBU","fieldParent":"d9b33964-311f-4c24-a856-ad55b9270142","fieldPos":905,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]}]},{"fieldNo":"3601dd04-ecc7-4acd-c43f-323416524010","fieldName":"oLabelAuditOutcomeBU","fieldParent":"016479a3-3901-4030-89e2-f0a3c53b80b7","fieldPos":906,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit Outcome:","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"b80e5d1c-8b1e-4cae-9c81-d02e70ded303","fieldName":"oComboBoxAuditOutcomeBU","fieldParent":"016479a3-3901-4030-89e2-f0a3c53b80b7","fieldPos":907,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"selectedKey","grouping":"Properties","value":"{/audit_auditOutcome}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"if(oComboBoxAuditOutcomeBU.getSelectedKey() !== \"\"){\n    oComboBoxAuditOutcomeBU.removeStyleClass(\"error\");\n    oComboBoxAuditOutcomeBU.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"a0951c74-7a55-41a8-fc02-7fc7a690ce76","fieldName":"oHBoxAuditConfirmationDetailsBU","fieldParent":"3755c81b-4b1a-4156-dc5f-3b3c61641f57","fieldPos":908,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"07f20d06-99ed-443a-c2e4-4a4577158751","fieldName":"oHBox3","fieldParent":"a0951c74-7a55-41a8-fc02-7fc7a690ce76","fieldPos":909,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"3be92d6b-d6ce-4bf0-8e47-b5cc719d8e35","fieldName":"cBoxAuditRef","fieldParent":"07f20d06-99ed-443a-c2e4-4a4577158751","fieldPos":910,"fieldType":"sap.m.CheckBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit Refusal","script":"","translation":[]},{"attribute":"selected","grouping":"Properties","value":"{/audit_refusal}","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"if(this.getSelected()){\n    cBoxAuditRef.removeStyleClass(\"error\");\n    cBoxAuditReq.addStyleClass(\"\");\n}","translation":[]}]},{"fieldNo":"9ebf78f7-6ed3-48b7-e495-beb988296407","fieldName":"oVBoxDateofAuditCompletionBU","fieldParent":"a0951c74-7a55-41a8-fc02-7fc7a690ce76","fieldPos":911,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"48.5%","script":"","translation":[]}]},{"fieldNo":"c29bad93-6ed4-468a-f522-fff9cb0c3f73","fieldName":"oLabelDateofAuditCompletionBU","fieldParent":"9ebf78f7-6ed3-48b7-e495-beb988296407","fieldPos":912,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date of Audit Completion:","script":"","translation":[{"language":"DE","value":" Kundenauftragsnummer"},{"language":"FR","value":"SO N° "},{"language":"NL","value":"Ordernummer"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"6bd73881-a0cf-4304-c03e-4b8812f33610","fieldName":"oDatePicker1AuditBU","fieldParent":"9ebf78f7-6ed3-48b7-e495-beb988296407","fieldPos":913,"fieldType":"sap.m.DatePicker","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"valueFormat","grouping":"Properties","value":"MM/dd/yyyy","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/audit_auditCompletionDate}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"displayFormat","grouping":"Properties","value":"MM/dd/yyyy","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"let pickedDate = this.getDateValue().getTime();\r\nlet currentDate = new Date().getTime();\r\nif (pickedDate > currentDate) {\r\n    showMessageToast(\"Date of Audit Completion cannot be greater than today's Date\")\r\n    this.setDateValue();\r\n}","translation":[]}]},{"fieldNo":"2c9a1445-a0b6-4fcf-b4da-98bbb361e13b","fieldName":"oHBoxAuditStatusBU","fieldParent":"3755c81b-4b1a-4156-dc5f-3b3c61641f57","fieldPos":914,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"1aa07440-a97d-401d-d4dc-e9006b45a7d8","fieldName":"oVBoxxAuditStatusBU","fieldParent":"2c9a1445-a0b6-4fcf-b4da-98bbb361e13b","fieldPos":915,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"cee70cbf-6fd4-4d7f-d498-d44517564e1b","fieldName":"oLabelxAuditStatusBU","fieldParent":"1aa07440-a97d-401d-d4dc-e9006b45a7d8","fieldPos":916,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Status:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"883ea4e4-e528-49de-e00d-ef0cf359ccaa","fieldName":"oComboBoxAuditStatusBU","fieldParent":"1aa07440-a97d-401d-d4dc-e9006b45a7d8","fieldPos":917,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"selectedKey","grouping":"Properties","value":"{/audit_status}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"if(oComboBoxAuditStatusBU.getSelectedKey() !== \"\"){\n    oComboBoxAuditStatusBU.removeStyleClass(\"error\");\n    oComboBoxAuditStatusBU.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"da0e8624-20ae-456b-f6ff-d26b301cc93c","fieldName":"oVBoxxAuditSystemStoredBU","fieldParent":"3755c81b-4b1a-4156-dc5f-3b3c61641f57","fieldPos":918,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]}]},{"fieldNo":"49cdeb55-fbc5-41bc-f887-59943b4fed8c","fieldName":"oLabelAuditSystemStoredBU","fieldParent":"da0e8624-20ae-456b-f6ff-d26b301cc93c","fieldPos":919,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit System Stored: Audit Record Number","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"e19f9ff7-628d-4e24-efb2-fcf2b79a7e87","fieldName":"oInputxAuditSystemStoredBU","fieldParent":"da0e8624-20ae-456b-f6ff-d26b301cc93c","fieldPos":920,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/audit_system_record}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"4aa09a96-b542-492e-bde7-6bae3379d4e1","fieldName":"oVBoxxAuditCommentsBU","fieldParent":"3755c81b-4b1a-4156-dc5f-3b3c61641f57","fieldPos":921,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"98%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"ee160600-3202-4bf7-ead9-d5025b427e98","fieldName":"oLabelxAuditCommentsBU","fieldParent":"4aa09a96-b542-492e-bde7-6bae3379d4e1","fieldPos":922,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Audit Comments:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"632d9e38-8fa9-4c57-f1f3-1482898edb4f","fieldName":"oTextAreaxAuditCommentsBU","fieldParent":"4aa09a96-b542-492e-bde7-6bae3379d4e1","fieldPos":923,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/audit_auditComments}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"{/custom_field_audit_editable}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"if(oTextAreaxAuditCommentsBU.getValue() !== \"\"){\n    oTextAreaxAuditCommentsBU.removeStyleClass(\"error\");\n    oTextAreaxAuditCommentsBU.addStyleClass(\"textbox\");\n}","translation":[]}]},{"fieldNo":"7f64913f-23ac-49f7-d0f9-5ccf61f52d04","fieldName":"rowRqc","fieldParent":"103a0b80-e40d-4981-caf6-711bc3ff9421","fieldPos":924,"fieldType":"sap.ui.layout.BlockLayoutRow","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"83d55952-948e-4757-f415-861964065faf","fieldName":"oBlockLayoutCell2","fieldParent":"7f64913f-23ac-49f7-d0f9-5ccf61f52d04","fieldPos":925,"fieldType":"sap.ui.layout.BlockLayoutCell","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"titleLevel","grouping":"Properties","value":"H6","script":"","translation":[]},{"attribute":"title","grouping":"Properties","value":"Source Quality - Regulatory / Quality Compliance","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"BU","script":"","translation":[]}]},{"fieldNo":"c7858741-f4b4-4f2f-aadd-cd3b2992099e","fieldName":"oPanelRegBU","fieldParent":"83d55952-948e-4757-f415-861964065faf","fieldPos":926,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"f7f064a6-cfb4-42e4-dcb3-26cfd4021728","fieldName":"cBoxReg","fieldParent":"c7858741-f4b4-4f2f-aadd-cd3b2992099e","fieldPos":927,"fieldType":"sap.m.CheckBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Regulatory Required","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"checkBoxBU","script":"","translation":[]},{"attribute":"selected","grouping":"Properties","value":"{/sqagroup_rqcContact}","script":"","translation":[]}]},{"fieldNo":"18463183-a77d-4308-96ab-54f9dd8a7851","fieldName":"oBlockLayoutCell3","fieldParent":"7f64913f-23ac-49f7-d0f9-5ccf61f52d04","fieldPos":928,"fieldType":"sap.ui.layout.BlockLayoutCell","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"titleLevel","grouping":"Properties","value":"H6","script":"","translation":[]},{"attribute":"title","grouping":"Properties","value":"Regulatory / Quality Compliance","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"BU","script":"","translation":[]}]},{"fieldNo":"e84f65cc-965d-44f1-a040-1d3aac86d54e","fieldName":"oPanelRQCBU","fieldParent":"18463183-a77d-4308-96ab-54f9dd8a7851","fieldPos":929,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{/sqagroup_rqcContact}","script":"","translation":[]}]},{"fieldNo":"f7e91d4b-8915-4896-854e-4a406a4ab972","fieldName":"oVBoxRQCBU","fieldParent":"e84f65cc-965d-44f1-a040-1d3aac86d54e","fieldPos":930,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"729e6a97-7b02-48ee-8f6b-08d8d2a9fb48","fieldName":"oLabelRegCommentsBU","fieldParent":"f7e91d4b-8915-4896-854e-4a406a4ab972","fieldPos":931,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Regulatory / Quality Compliance Comments:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"9e799f51-ad68-417d-e6a1-bec1661f845b","fieldName":"oTextAreaRegCommentsBU","fieldParent":"f7e91d4b-8915-4896-854e-4a406a4ab972","fieldPos":932,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/regulatory_reguAssessComments}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"if(oTextAreaRegCommentsBU.getValue() !== \"\"){\n    oTextAreaRegCommentsBU.removeStyleClass(\"error\");\n    oTextAreaRegCommentsBU.addStyleClass(\"textbox\");\n}","translation":[]}]},{"fieldNo":"593a4776-cec4-4d12-852c-95e7a5a741b3","fieldName":"rowsqaa","fieldParent":"103a0b80-e40d-4981-caf6-711bc3ff9421","fieldPos":933,"fieldType":"sap.ui.layout.BlockLayoutRow","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"6edcb884-1eb2-4931-8de9-8d98cd262aae","fieldName":"oBlockLayoutCell4","fieldParent":"593a4776-cec4-4d12-852c-95e7a5a741b3","fieldPos":934,"fieldType":"sap.ui.layout.BlockLayoutCell","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"titleLevel","grouping":"Properties","value":"H6","script":"","translation":[]},{"attribute":"title","grouping":"Properties","value":"Source Quality - Quality Agreement","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"BU","script":"","translation":[]}]},{"fieldNo":"0c6b63bf-5d6c-415f-99b0-732cb74f9a89","fieldName":"panelSQAgrmntBU","fieldParent":"6edcb884-1eb2-4931-8de9-8d98cd262aae","fieldPos":935,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"4c337462-8772-4acc-ce5e-ea6c3d79584b","fieldName":"cBoxAgreeReq","fieldParent":"0c6b63bf-5d6c-415f-99b0-732cb74f9a89","fieldPos":936,"fieldType":"sap.m.CheckBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Quality Agreement Required","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"checkBoxBU","script":"","translation":[]},{"attribute":"selected","grouping":"Properties","value":"{/sqagroup_sqaaRequired}","script":"","translation":[]}]},{"fieldNo":"bcc6553e-3eb3-4ca6-9a20-534e3f9b4944","fieldName":"oVBoxSQAPanel2BU","fieldParent":"0c6b63bf-5d6c-415f-99b0-732cb74f9a89","fieldPos":937,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{/sqagroup_sqaaRequired}","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"Start","script":"","translation":[]}]},{"fieldNo":"707d8e5d-eb07-4fbb-f33b-98462cb782c4","fieldName":"oHBoxSQARadioTypeEmailGroupBU","fieldParent":"bcc6553e-3eb3-4ca6-9a20-534e3f9b4944","fieldPos":938,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"134cd1e9-e6fd-478f-e7b1-770765af30c4","fieldName":"oHBoxSQATypeEmailBU","fieldParent":"707d8e5d-eb07-4fbb-f33b-98462cb782c4","fieldPos":939,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"b9d072eb-652e-4715-fa38-928f069b8c5a","fieldName":"oVBoxSQATypeBU","fieldParent":"134cd1e9-e6fd-478f-e7b1-770765af30c4","fieldPos":940,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"05bf8247-8be0-4147-aafc-e1cfb209b0a6","fieldName":"lblSQAgrmntTypBU","fieldParent":"b9d072eb-652e-4715-fa38-928f069b8c5a","fieldPos":941,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Type of Supplier Quality Agreement:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"60bb1fa7-8e05-4f64-a39c-ca7d255984f3","fieldName":"inpComboSQAgrmntTypBU","fieldParent":"b9d072eb-652e-4715-fa38-928f069b8c5a","fieldPos":942,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"selectedKey","grouping":"Properties","value":"{/sqagroup_sqaaType}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"if(inpComboSQAgrmntTypBU.getSelectedKey() !== \"\"){\n    inpComboSQAgrmntTypBU.removeStyleClass(\"error\");\n    inpComboSQAgrmntTypBU.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"c08169cc-b225-4d13-a928-ef6a30fad093","fieldName":"oHBox5","fieldParent":"bcc6553e-3eb3-4ca6-9a20-534e3f9b4944","fieldPos":943,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"9890e865-4eaa-4c42-f15d-69f731f8997c","fieldName":"cBoxExist","fieldParent":"c08169cc-b225-4d13-a928-ef6a30fad093","fieldPos":944,"fieldType":"sap.m.CheckBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"selected","grouping":"Properties","value":"{/sqagroup_existForSegment}","script":"","translation":[]}]},{"fieldNo":"65c39438-f398-404e-ef15-ebd11e1bec4d","fieldName":"oHBoxSQARefLocBU","fieldParent":"bcc6553e-3eb3-4ca6-9a20-534e3f9b4944","fieldPos":945,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{/sqagroup_existForSegment}","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"4d22948f-2268-49d2-989a-67ff2b78d8e0","fieldName":"oVBoxSQARefBU","fieldParent":"65c39438-f398-404e-ef15-ebd11e1bec4d","fieldPos":946,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"b5a90260-1f96-480d-b8e9-0d756a92da86","fieldName":"lblRefrenceNumBU","fieldParent":"4d22948f-2268-49d2-989a-67ff2b78d8e0","fieldPos":947,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Reference Number:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c1784a44-556d-486b-ea3b-ff39bca68279","fieldName":"inpReferenceNumberBU","fieldParent":"4d22948f-2268-49d2-989a-67ff2b78d8e0","fieldPos":948,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/sqagroup_sqaaRefNum}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"if(inpReferenceNumberBU.getValue() !== \"\"){\n    inpReferenceNumberBU.removeStyleClass(\"error\");\n    inpReferenceNumberBU.addStyleClass(\"textbox\");\n}","translation":[]}]},{"fieldNo":"0af996df-6e1f-4d1f-a9df-4fcbe499d50b","fieldName":"oVBoxSQALocBU","fieldParent":"65c39438-f398-404e-ef15-ebd11e1bec4d","fieldPos":949,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"65e7ec51-a48d-4b4d-f999-b78cb2fb3130","fieldName":"lblLocationNameBU","fieldParent":"0af996df-6e1f-4d1f-a9df-4fcbe499d50b","fieldPos":950,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Location Name:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"d07f1d24-204b-4324-d0a5-262ed26813d4","fieldName":"inpLocationNameBU","fieldParent":"0af996df-6e1f-4d1f-a9df-4fcbe499d50b","fieldPos":951,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/sqagroup_sqaaLocationName}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"if(inpLocationNameBU.getValue() !== \"\"){\n    inpLocationNameBU.removeStyleClass(\"error\");\n    inpLocationNameBU.addStyleClass(\"inputfield\");\n}","translation":[]}]},{"fieldNo":"9fd6817c-8293-410d-ad04-5935b286d107","fieldName":"oBlockLayoutCell5","fieldParent":"593a4776-cec4-4d12-852c-95e7a5a741b3","fieldPos":952,"fieldType":"sap.ui.layout.BlockLayoutCell","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"titleLevel","grouping":"Properties","value":"H6","script":"","translation":[]},{"attribute":"title","grouping":"Properties","value":"Quality Agreement","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"BU","script":"","translation":[]}]},{"fieldNo":"a698c728-5e01-46c9-9d63-339fb47626c4","fieldName":"oPanelSQAABU","fieldParent":"9fd6817c-8293-410d-ad04-5935b286d107","fieldPos":953,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{= !(${/sqagroup_existForSegment}) && ${/sqagroup_sqaaRequired} ? true : false}","script":"","translation":[]}]},{"fieldNo":"a5b7d68b-54d3-45d8-d22a-b1da760b1f2e","fieldName":"oHBoxSQAAstatusTypeRefLocBU","fieldParent":"a698c728-5e01-46c9-9d63-339fb47626c4","fieldPos":954,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"b41a5fa8-963f-422f-e07c-0b62ee6ccd5a","fieldName":"oVBoxStatusBU","fieldParent":"a5b7d68b-54d3-45d8-d22a-b1da760b1f2e","fieldPos":955,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"2f6a5157-e5fb-4b9c-9a76-2953e7691edc","fieldName":"oLabelStatusBU","fieldParent":"b41a5fa8-963f-422f-e07c-0b62ee6ccd5a","fieldPos":956,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Status:","script":"","translation":[{"language":"DE","value":" Kundenauftragsnummer"},{"language":"FR","value":"SO N° "},{"language":"NL","value":"Ordernummer"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"fa81b726-9d8d-4f76-987c-59c88d409ac6","fieldName":"oComboBoxStatusBU","fieldParent":"b41a5fa8-963f-422f-e07c-0b62ee6ccd5a","fieldPos":957,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"selectedKey","grouping":"Properties","value":"{/sqagreement_status}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"if(oComboBoxStatusBU.getSelectedKey() !== \"\"){\n    oComboBoxStatusBU.removeStyleClass(\"error\");\n    oComboBoxStatusBU.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"d0b9eadc-3c0c-4754-81a3-62d82eccb76a","fieldName":"oVBoxSQAATypeBU","fieldParent":"a5b7d68b-54d3-45d8-d22a-b1da760b1f2e","fieldPos":958,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"06810169-8724-4006-93d3-2caf2f868f94","fieldName":"oLabelSQATypeBU","fieldParent":"d0b9eadc-3c0c-4754-81a3-62d82eccb76a","fieldPos":959,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Quality Agreement Executed:","script":"","translation":[{"language":"DE","value":"Transformation Standort"},{"language":"FR","value":"Site Transformation"},{"language":"NL","value":"Transformatiesite"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"db41e9b5-0eed-40bd-fded-3be450072b8a","fieldName":"oComboBoxSQATypeBU","fieldParent":"d0b9eadc-3c0c-4754-81a3-62d82eccb76a","fieldPos":960,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"selectedKey","grouping":"Properties","value":"{/sqagreement_suppQualityExecuted}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"if(oComboBoxSQATypeBU.getSelectedKey() !== \"\"){\n    oComboBoxSQATypeBU.removeStyleClass(\"error\");\n    oComboBoxSQATypeBU.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"6d11b0ae-6722-4bd6-84fd-9ed2651dc0cc","fieldName":"oListItemBU","fieldParent":"db41e9b5-0eed-40bd-fded-3be450072b8a","fieldPos":961,"fieldType":"sap.ui.core.ListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"SQA","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"SQA","script":"","translation":[]}]},{"fieldNo":"78a333e0-d6b1-4c28-adcc-bec8fa96bceb","fieldName":"oListItem1BU","fieldParent":"db41e9b5-0eed-40bd-fded-3be450072b8a","fieldPos":962,"fieldType":"sap.ui.core.ListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"JJ Quality Requirements","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"JJ Quality Requirements","script":"","translation":[]}]},{"fieldNo":"348c38dd-83a5-48b8-8718-5185cd4b0332","fieldName":"oListItem2BU","fieldParent":"db41e9b5-0eed-40bd-fded-3be450072b8a","fieldPos":963,"fieldType":"sap.ui.core.ListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"ICQA","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"ICQA","script":"","translation":[]}]},{"fieldNo":"3b1a0a31-3ebd-4ad7-f218-7eac25dfd954","fieldName":"oListItem4BU","fieldParent":"db41e9b5-0eed-40bd-fded-3be450072b8a","fieldPos":964,"fieldType":"sap.ui.core.ListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"key","grouping":"Properties","value":"None","script":"","translation":[]}]},{"fieldNo":"db0b3cb3-cd02-4d95-f4e3-a4dcfa3d52df","fieldName":"oVBoxSQAALocBU","fieldParent":"a698c728-5e01-46c9-9d63-339fb47626c4","fieldPos":965,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"772694b3-8ab5-4c15-8ade-9f3e649c9acb","fieldName":"oLabelLocationNameBU","fieldParent":"db0b3cb3-cd02-4d95-f4e3-a4dcfa3d52df","fieldPos":966,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"*QA Reference Number : *QA System Location Name","script":"","translation":[{"language":"DE","value":"Pickauftragsnummer"},{"language":"FR","value":"PO N° "},{"language":"NL","value":"Bestelnummer kiezen"}]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"f76fd4a7-45d6-4220-83ab-021aa30ac516","fieldName":"oInputLocationNameBU","fieldParent":"db0b3cb3-cd02-4d95-f4e3-a4dcfa3d52df","fieldPos":967,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/sqagreement_reference_location}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"if(oInputLocationNameBU.getValue() !== \"\"){\n    oInputLocationNameBU.removeStyleClass(\"error\");\n    oInputLocationNameBU.addStyleClass(\"inputfield\");\n}","translation":[]}]},{"fieldNo":"2880b2a1-1167-4e9f-b1fe-b448bf62db98","fieldName":"oHBoxSQAACommentsBU","fieldParent":"a698c728-5e01-46c9-9d63-339fb47626c4","fieldPos":968,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"f20e6b08-e324-4161-b5e8-c20c6542e9fc","fieldName":"oVBoxSQAACommentsBU","fieldParent":"2880b2a1-1167-4e9f-b1fe-b448bf62db98","fieldPos":969,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"f23f7f6a-263a-4f8a-952e-d580304f74c8","fieldName":"oLabelSQACommentsBU","fieldParent":"f20e6b08-e324-4161-b5e8-c20c6542e9fc","fieldPos":970,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Quality Agreement Comments:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"bdfee600-d73e-4e78-e399-6e19564219f5","fieldName":"oTextAreaSQACommentsBU","fieldParent":"f20e6b08-e324-4161-b5e8-c20c6542e9fc","fieldPos":971,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/sqagreement_sqaaComments}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"if(oTextAreaSQACommentsBU.getValue() !== \"\"){\n    oTextAreaSQACommentsBU.removeStyleClass(\"error\");\n    oTextAreaSQACommentsBU.addStyleClass(\"textbox\");\n}","translation":[]}]},{"fieldNo":"b6772d85-a319-4153-9c33-c03ec92c927f","fieldName":"oBlockLayoutElevated","fieldParent":"103a0b80-e40d-4981-caf6-711bc3ff9421","fieldPos":972,"fieldType":"sap.ui.layout.BlockLayoutRow","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"a88ecd50-f66a-4687-85d2-1716fa185d06","fieldName":"oBlockLayoutCell7","fieldParent":"b6772d85-a319-4153-9c33-c03ec92c927f","fieldPos":973,"fieldType":"sap.ui.layout.BlockLayoutCell","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"titleLevel","grouping":"Properties","value":"H6","script":"","translation":[]},{"attribute":"title","grouping":"Properties","value":"Source Quality Approval","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"BU","script":"","translation":[]}]},{"fieldNo":"13147ac6-0231-40da-98b3-fce63f902d25","fieldName":"oPanelSQASupQualApprovalBU","fieldParent":"a88ecd50-f66a-4687-85d2-1716fa185d06","fieldPos":974,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"9c432359-98f5-4417-c285-f3d1a5a52f3d","fieldName":"oVBoxSQAPanel3BU","fieldParent":"13147ac6-0231-40da-98b3-fce63f902d25","fieldPos":975,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"cc74a330-cf90-485b-a607-412a1c37c8ec","fieldName":"lblQualificationStatusBU","fieldParent":"9c432359-98f5-4417-c285-f3d1a5a52f3d","fieldPos":976,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Qualification Status:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"c0c789ca-b0c4-4cff-9ad0-906aad09c301","fieldName":"oComboQualificationStatusBU","fieldParent":"9c432359-98f5-4417-c285-f3d1a5a52f3d","fieldPos":977,"fieldType":"sap.m.ComboBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"50%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"selectedKey","grouping":"Properties","value":"{/sqagroup_qualificationStatus}","script":"","translation":[]},{"attribute":"change","grouping":"Events","value":"Anonymous Function","script":"if(oComboQualificationStatusBU.getSelectedKey() !== \"\"){\n    oComboQualificationStatusBU.removeStyleClass(\"error\");\n    oComboQualificationStatusBU.addStyleClass(\"combobox\");\n}","translation":[]}]},{"fieldNo":"ef89fdb9-da70-4529-a28d-9cb602765a7f","fieldName":"lblQualificationRationaleBU","fieldParent":"9c432359-98f5-4417-c285-f3d1a5a52f3d","fieldPos":978,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Qualification Rationale / Summary:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"442bc7f3-4b1f-4bc6-d2db-fec4230d2603","fieldName":"txtAreaQualificationRationaleBU","fieldParent":"9c432359-98f5-4417-c285-f3d1a5a52f3d","fieldPos":979,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/sqagroup_qualificationRatSummary}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"combobox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"maxLength","grouping":"Properties","value":"500","script":"","translation":[]},{"attribute":"growingMaxLines","grouping":"Properties","value":"6","script":"","translation":[]},{"attribute":"growing","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"if(txtAreaQualificationRationaleBU.getValue() !== \"\"){\n    txtAreaQualificationRationaleBU.removeStyleClass(\"error\");\n    txtAreaQualificationRationaleBU.addStyleClass(\"textbox\");\n}","translation":[]}]},{"fieldNo":"49238c71-315e-45f3-fee1-73d9d0ce9e93","fieldName":"oHBoxSQAAttachmentBU","fieldParent":"13147ac6-0231-40da-98b3-fce63f902d25","fieldPos":980,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"4e1b2b9e-a9cc-44d7-e229-68de27958226","fieldName":"oVBoxSQAAttachmentsBU","fieldParent":"49238c71-315e-45f3-fee1-73d9d0ce9e93","fieldPos":981,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]}]},{"fieldNo":"128bfc95-30cb-4e3d-8f59-cb11239d76af","fieldName":"oHBoxSQAAttachmentsBU","fieldParent":"4e1b2b9e-a9cc-44d7-e229-68de27958226","fieldPos":982,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"e676c289-d0b9-47b6-d450-70c2b6578a7f","fieldName":"lblSQAAttachmentsBU","fieldParent":"128bfc95-30cb-4e3d-8f59-cb11239d76af","fieldPos":983,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Attachments:","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"283776e5-3b64-4270-864e-da69b2c29985","fieldName":"oFileUploaderSQBU","fieldParent":"128bfc95-30cb-4e3d-8f59-cb11239d76af","fieldPos":984,"fieldType":"sap.ui.unified.FileUploader","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"fileType","grouping":"Properties","value":"[\"pdf\",\"xls\",\"xlsx\",\"csv\",\"docx\",\"doc\",\"dot\",\"txt\",\"wbk\",\"docm\",\"dotx\",\"docb\",\"xlt\",\"xlm\",\"xlsm\",\"xltm\",\"xltx\",\"xlsb\",\"xla\",\"xlam\",\"xll\",\"xlw\",\"ppt\",\"pptx\",\"pot\",\"pps\",\"pptm\",\"potx\",\"potm\",\"ppsx\",\"ppam\",\"ppsm\",\"sldx\",\"sldm\",\"one\",\"pub\",\"xps\",\"msg\"]","script":"","translation":[]}]},{"fieldNo":"001eaf93-f687-4b98-c1c4-ac7195ffd3ea","fieldName":"oButtonAttachSQABU","fieldParent":"128bfc95-30cb-4e3d-8f59-cb11239d76af","fieldPos":985,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"ATTACH FILES","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2022ENHANCEMENTS\nupdated by : vighnesh\nupdated on : april 18, 2022\n\nAGHP-2555\n*/\nsap.ui.core.BusyIndicator.show(0);\n\nlet fieldId;\nsap.n ? fieldId = sap.n.currentView.byId('oFileUploaderSQBU') : fieldId = this.getParent().mAggregations.fields[0].sId;\n\n\n//to check whether at least 1 file is selected for attachment\nlet isSelected = is_fileSelected(fieldId);\n\nif (isSelected && isSelected.errFlag) {\n    //error - no files are selected\n\n    showMessageToast(isSelected.noFileErrMsg);\n    sap.ui.core.BusyIndicator.hide();\n    return;\n\n} else {\n\n    //files are selected\n    /*\n    function to check if the to be attached file obeys all the technical criterias.\n    level is SQA\n    fieldId is the id of the field\n    */\n    checkFile('SQA', fieldId);\n\n}","translation":[]}]},{"fieldNo":"49f7c501-3eec-4daf-ae91-1b326fc3f40a","fieldName":"oTableSQAAttachmentsBU","fieldParent":"13147ac6-0231-40da-98b3-fce63f902d25","fieldPos":986,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"5","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]}]},{"fieldNo":"636084d0-14e9-46cc-f4b5-62fb365d43e9","fieldName":"oColumnSQADelAttachBU","fieldParent":"49f7c501-3eec-4daf-ae91-1b326fc3f40a","fieldPos":987,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"865b87e3-6a26-48f3-f476-c0124e79aa7b","fieldName":"oButtonAttachmentSQABU","fieldParent":"636084d0-14e9-46cc-f4b5-62fb365d43e9","fieldPos":988,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/trash-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on : April 18, 2022\n\nSQA level attachment delete\nAGHP-2555\n*/\nsap.ui.core.BusyIndicator.show(0);\nlet file_uuid = oEvent.oSource.getBindingContext().getObject().id; //unique p9 id of the file\n\n/*\nfunction to first check whether system has grabbed the file ID or not\n*/\ncheck_for_file_deletion(file_uuid, 'SQA', this);","translation":[]}]},{"fieldNo":"877dfa71-8cb9-43bc-98ef-9e33390bdd7b","fieldName":"oColumnSQAttachmentBU","fieldParent":"49f7c501-3eec-4daf-ae91-1b326fc3f40a","fieldPos":989,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"File Name","script":"","translation":[]}]},{"fieldNo":"315dd941-02d7-4cfb-8b59-d6b7c8da9baf","fieldName":"oLinkSQAAttFileNameBU","fieldParent":"877dfa71-8cb9-43bc-98ef-9e33390bdd7b","fieldPos":990,"fieldType":"sap.m.Link","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{fileName}","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\r\n2021ENHANCMENTS\r\nupdated by : vighnesh\r\nupdated on : april 19, 2022\r\n\r\nAGHP-2556\r\n\r\ncommon function to download supplier/material level file attachments\r\n*/\r\ndownloadFileAttachments(oEvent);","translation":[]}]},{"fieldNo":"3c604f41-df0e-4b37-f148-bb6d2cdeb495","fieldName":"oBlockLayoutCell6","fieldParent":"b6772d85-a319-4153-9c33-c03ec92c927f","fieldPos":991,"fieldType":"sap.ui.layout.BlockLayoutCell","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"titleLevel","grouping":"Properties","value":"H6","script":"","translation":[]},{"attribute":"title","grouping":"Properties","value":"Second Approver","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"BU","script":"","translation":[]}]},{"fieldNo":"7a50f885-81e7-4515-8867-87515297c56c","fieldName":"oPanelElevatedBU2","fieldParent":"3c604f41-df0e-4b37-f148-bb6d2cdeb495","fieldPos":992,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"d4b82ecf-3b01-47af-96b6-cb9e5f5b3b6c","fieldName":"oVBoxElevCommentsBU","fieldParent":"7a50f885-81e7-4515-8867-87515297c56c","fieldPos":993,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"98%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMargin","script":"","translation":[]}]},{"fieldNo":"511996e4-e941-4e90-ed9f-b88ac695e612","fieldName":"oLabelElevatorCommentsBU","fieldParent":"d4b82ecf-3b01-47af-96b6-cb9e5f5b3b6c","fieldPos":994,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Second Approver Comments:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"6bb0e380-58f9-4331-abde-356a1a694fed","fieldName":"oTextAreaCommentsElevatedBU","fieldParent":"d4b82ecf-3b01-47af-96b6-cb9e5f5b3b6c","fieldPos":995,"fieldType":"sap.m.TextArea","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"value","grouping":"Properties","value":"{/elevated_comment}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"textbox","script":"","translation":[]},{"attribute":"rows","grouping":"Properties","value":"3","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"if(oTextAreaCommentsElevatedBU.getValue() !== \"\"){\n    oTextAreaCommentsElevatedBU.removeStyleClass(\"error\");\n    oTextAreaCommentsElevatedBU.addStyleClass(\"textbox\");\n}","translation":[]}]},{"fieldNo":"1934231d-35e4-45f2-b7d0-05631879a9b1","fieldName":"oButtonCloseAudit","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":996,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CLOSE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"diaViewAUDIT.close();","script":"diaViewAUDIT.close();","translation":[]}]},{"fieldNo":"36343061-f3f9-4760-cec5-c15c1cad3a17","fieldName":"diaViewAUDIT","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":997,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"title","grouping":"Properties","value":"AUDIT RELATIONS","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"endButton","grouping":"Associations","value":"oButtonCloseAudit","script":"","translation":[]}]},{"fieldNo":"2c7a88c5-b98d-43c2-8b9e-db23a2712d2d","fieldName":"oTableAudit","fieldParent":"36343061-f3f9-4760-cec5-c15c1cad3a17","fieldPos":998,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"5","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"Single","script":"","translation":[]},{"attribute":"selectionBehavior","grouping":"Properties","value":"RowSelector","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"cac77013-1fe6-4169-8a4c-f4ebedf417d4","fieldName":"oColumnAUDITactions","fieldParent":"2c7a88c5-b98d-43c2-8b9e-db23a2712d2d","fieldPos":999,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"606c9c13-bc04-455b-e619-e73122566d43","fieldName":"oHorLayA","fieldParent":"cac77013-1fe6-4169-8a4c-f4ebedf417d4","fieldPos":1000,"fieldType":"sap.ui.layout.HorizontalLayout","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"7cfe318c-fad6-4048-e3a5-177c81767fe7","fieldName":"oButtonaEdit","fieldParent":"606c9c13-bc04-455b-e619-e73122566d43","fieldPos":1001,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{custom_field_p_editable}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"blueicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/pencil-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"editAuditRelations(this);\n","translation":[]}]},{"fieldNo":"2b526f56-41ad-4b2e-a481-ac0e1b582822","fieldName":"oButtonaDelete","fieldParent":"606c9c13-bc04-455b-e619-e73122566d43","fieldPos":1002,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/trash-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"var i = this.getBindingContext().getObject();\nModelData.Delete(oTableAudit,[\"audit_systemStored\",\"audit_recordNumber\"],[i.audit_systemStored,i.audit_recordNumber]);\nbtnViewRelationAudit.setText(oTableAudit.getModel().getData().length);","translation":[]}]},{"fieldNo":"3a669fb7-bdb1-4b95-eb91-8f51eb9fdedb","fieldName":"oColumn4a","fieldParent":"2c7a88c5-b98d-43c2-8b9e-db23a2712d2d","fieldPos":1003,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Reference Number","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"8d1f9767-b7f9-421e-d0c1-2c009ce10fab","fieldName":"oText10A","fieldParent":"3a669fb7-bdb1-4b95-eb91-8f51eb9fdedb","fieldPos":1004,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{audit_recordNumber}","script":"","translation":[]}]},{"fieldNo":"37aa152c-4a53-4f38-e143-e044ed7d525c","fieldName":"oColumn5A","fieldParent":"2c7a88c5-b98d-43c2-8b9e-db23a2712d2d","fieldPos":1005,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"System Stored","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"9f45651b-ed2f-4bdb-fba1-53fe63342786","fieldName":"oText11A","fieldParent":"37aa152c-4a53-4f38-e143-e044ed7d525c","fieldPos":1006,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{audit_systemStored}","script":"","translation":[]}]},{"fieldNo":"b5b596ce-83a5-4de5-bc80-9caec4a5a5d7","fieldName":"oButtonCloseSQAA","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1007,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CLOSE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"diaViewSQAA.close();","script":"diaViewSQAA.close();","translation":[]}]},{"fieldNo":"1f7d649c-d503-43a0-9fa0-d14f8229c503","fieldName":"diaViewSQAA","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1008,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"title","grouping":"Properties","value":"QUALITY AGREEMENT RELATIONS","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"endButton","grouping":"Associations","value":"oButtonCloseSQAA","script":"","translation":[]}]},{"fieldNo":"17f67fe9-8af7-4d93-f69c-34fe17c4bba6","fieldName":"oTableSQAA","fieldParent":"1f7d649c-d503-43a0-9fa0-d14f8229c503","fieldPos":1009,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"visibleRowCount","grouping":"Properties","value":"5","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"Single","script":"","translation":[]},{"attribute":"selectionBehavior","grouping":"Properties","value":"RowSelector","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"8ce4677f-af06-4c36-e7b3-44cac7357a34","fieldName":"oColumnSQAAactions","fieldParent":"17f67fe9-8af7-4d93-f69c-34fe17c4bba6","fieldPos":1010,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100px","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Actions","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"2403bbae-8b6a-46f7-cb4d-dd7c97c242ef","fieldName":"oHorLayS","fieldParent":"8ce4677f-af06-4c36-e7b3-44cac7357a34","fieldPos":1011,"fieldType":"sap.ui.layout.HorizontalLayout","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"643f65dd-e7a6-40cb-d23a-96b84d96ee8c","fieldName":"oButtonaEditS","fieldParent":"2403bbae-8b6a-46f7-cb4d-dd7c97c242ef","fieldPos":1012,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"{custom_field_p_editable}","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"blueicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/pencil-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"editSQAARelations(this);\n","translation":[]}]},{"fieldNo":"74095e43-2e9f-4df7-e60c-dc31c128c986","fieldName":"oButtonaDeleteS","fieldParent":"2403bbae-8b6a-46f7-cb4d-dd7c97c242ef","fieldPos":1013,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"redicon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://fa-solid/trash-alt","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"var i = this.getBindingContext().getObject();\nModelData.Delete(oTableSQAA,[\"sqagreement_refNumber\",\"sqagreement_locName\"],[i.sqagreement_refNumber,i.sqagreement_locName]);\nbtnViewRelationSQAA.setText(oTableSQAA.getModel().getData().length);","translation":[]}]},{"fieldNo":"ab9998f8-aa36-4f1a-8b9b-711db880fdbe","fieldName":"oColumn5AS","fieldParent":"17f67fe9-8af7-4d93-f69c-34fe17c4bba6","fieldPos":1014,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Reference Number","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"2bb981ed-82eb-46af-eeaf-4e33e1c0bdca","fieldName":"oText11qA","fieldParent":"ab9998f8-aa36-4f1a-8b9b-711db880fdbe","fieldPos":1015,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{sqagreement_refNumber}","script":"","translation":[]}]},{"fieldNo":"7b67b5e9-a9bb-48bb-b650-b34b969b7201","fieldName":"oColumn4aS","fieldParent":"17f67fe9-8af7-4d93-f69c-34fe17c4bba6","fieldPos":1016,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"label","grouping":"Properties","value":"Location Name","script":"","translation":[]},{"attribute":"resizable","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"hAlign","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"aa7de4ad-b575-4b05-f3c9-8852febfc48a","fieldName":"oText10qA","fieldParent":"7b67b5e9-a9bb-48bb-b650-b34b969b7201","fieldPos":1017,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{sqagreement_locName}","script":"","translation":[]}]},{"fieldNo":"14994665-5848-4dc1-a03a-70c518bab2f3","fieldName":"popCommentsHistory","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1018,"fieldType":"sap.m.ResponsivePopover","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"placement","grouping":"Properties","value":"Left","script":"","translation":[]},{"attribute":"contentWidth","grouping":"Properties","value":"800px","script":"","translation":[]}]},{"fieldNo":"37856810-299d-406e-ea02-fc53200be2d1","fieldName":"tabCHistory","fieldParent":"14994665-5848-4dc1-a03a-70c518bab2f3","fieldPos":1019,"fieldType":"sap.m.Table","script":"","customComponent":false,"bindingValue":"Generic Array","bindingType":"h","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"showSeparators","grouping":"Properties","value":"All","script":"","translation":[]},{"attribute":"noDataText","grouping":"Properties","value":"No Comments History Available","script":"","translation":[]},{"attribute":"fixedLayout","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"b377f575-3a46-45d8-c485-ba9a407329c7","fieldName":"oColumn3","fieldParent":"37856810-299d-406e-ea02-fc53200be2d1","fieldPos":1020,"fieldType":"sap.m.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"fd4c35b0-c271-4d6e-ff4d-b71fce15f0a2","fieldName":"oLabel","fieldParent":"b377f575-3a46-45d8-c485-ba9a407329c7","fieldPos":1021,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Username","script":"","translation":[]}]},{"fieldNo":"8d59a218-733c-44d4-e8b5-b467ac8b735b","fieldName":"oColumn2","fieldParent":"37856810-299d-406e-ea02-fc53200be2d1","fieldPos":1022,"fieldType":"sap.m.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"9b9711af-2858-4303-b793-45dd02ba22fd","fieldName":"oLabel1","fieldParent":"8d59a218-733c-44d4-e8b5-b467ac8b735b","fieldPos":1023,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Date","script":"","translation":[]}]},{"fieldNo":"69102cb3-a4c4-4286-861b-fa45bc57ce42","fieldName":"oColumn1","fieldParent":"37856810-299d-406e-ea02-fc53200be2d1","fieldPos":1024,"fieldType":"sap.m.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"923f55df-57ad-470d-9e60-6d670594e468","fieldName":"oLabel2","fieldParent":"69102cb3-a4c4-4286-861b-fa45bc57ce42","fieldPos":1025,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Comments","script":"","translation":[]}]},{"fieldNo":"4407ffa7-6b9d-46f0-d542-bc6c4ca2346f","fieldName":"oColumnListItem","fieldParent":"37856810-299d-406e-ea02-fc53200be2d1","fieldPos":1026,"fieldType":"sap.m.ColumnListItem","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"ddade9db-757f-45e9-91ea-1e660413f44a","fieldName":"oText9","fieldParent":"4407ffa7-6b9d-46f0-d542-bc6c4ca2346f","fieldPos":1027,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{rejectedByName}","script":"","translation":[]}]},{"fieldNo":"356b0c02-7116-4ba8-c560-e59a726acb70","fieldName":"oText8","fieldParent":"4407ffa7-6b9d-46f0-d542-bc6c4ca2346f","fieldPos":1028,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{rejectedDate}","script":"","translation":[]}]},{"fieldNo":"651b6a46-128c-4127-93f0-4370817ca65c","fieldName":"oText7","fieldParent":"4407ffa7-6b9d-46f0-d542-bc6c4ca2346f","fieldPos":1029,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{rejectedComments}","script":"","translation":[]}]},{"fieldNo":"7ca058f9-3d8d-42ca-cf65-1bcc6cdfa76a","fieldName":"diaTargetAuth","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1030,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"bindingValue":"Generic Object","bindingType":"u","bindingSource":"P9","request":[],"response":[],"attributes":[{"attribute":"title","grouping":"Properties","value":"E-Signature","script":"","translation":[]},{"attribute":"styleClassPadding","grouping":"Properties","value":"sapUiNoContentPadding","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"draggable","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"contentWidth","grouping":"Properties","value":"1024px","script":"","translation":[]},{"attribute":"contentHeight","grouping":"Properties","value":"780px","script":"","translation":[]},{"attribute":"beforeOpen","grouping":"Events","value":"Anonymous Function","script":"diaTargetAuth.formLogons = [];\ninFormLogin.destroyItems();\ninFormLogin.addItem(new sap.ui.core.Item({\n    key: 'local',\n    text: 'Local'\n}));\n\n$.ajax({\n    type: \"GET\",\n    url: \"/user/logon/types\",\n    success: function(data) {\n        // Logon Types\n        configureLogonScreen(data.logonTypes);\n\n    },\n    error: function(result, status) {\n\n    }\n});\n\n\nfunction configureLogonScreen(data) {\n    for (var i = 0, length = data.length; i < length; i++) {\n        switch (data[i].type) {\n            case 'ldap':\n                if (data[i].show) {\n                    addFormLogon(data[i]);\n                }\n                break;\n        }\n    }\n}\n\nfunction addFormLogon(data) {\n    diaTargetAuth.formLogons.push(data);\n    inFormLogin.addItem(new sap.ui.core.Item({\n        key: data.path,\n        text: data.description\n    }));\n    inFormLogin.setVisible(true);\n}","translation":[]}]},{"fieldNo":"ac70bf0d-20b0-4030-eef3-8dd5d052900e","fieldName":"pageTargetAuth","fieldParent":"7ca058f9-3d8d-42ca-cf65-1bcc6cdfa76a","fieldPos":1031,"fieldType":"sap.m.Page","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"sapMGlobalBackgroundColorStrong sapUiUfdShellBG","script":"","translation":[]},{"attribute":"showHeader","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"5c9c679a-e5ab-4a4c-8ef7-82eaad2a175d","fieldName":"oGrid","fieldParent":"ac70bf0d-20b0-4030-eef3-8dd5d052900e","fieldPos":1032,"fieldType":"sap.ui.layout.Grid","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"loginGrid","script":"","translation":[]},{"attribute":"position","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"e89be0c1-e06a-4bda-d903-c3dc2da697cc","fieldName":"oGridData1","fieldParent":"5c9c679a-e5ab-4a4c-8ef7-82eaad2a175d","fieldPos":1033,"fieldType":"sap.ui.layout.GridData","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"spanS","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"spanM","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"spanL","grouping":"Properties","value":"12","script":"","translation":[]}]},{"fieldNo":"0983c016-da3c-4a40-be94-6e4c6e965608","fieldName":"oImageLogo","fieldParent":"e89be0c1-e06a-4bda-d903-c3dc2da697cc","fieldPos":1034,"fieldType":"sap.m.Image","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"70%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassVisibility","grouping":"Properties","value":"sapUiVisibleOnlyOnDesktop","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"/media/root/ONEASL/oneaslLogo.png","script":"","translation":[]}]},{"fieldNo":"a23ced5c-da41-4292-9c1e-8d7206c8ec06","fieldName":"oGridData","fieldParent":"5c9c679a-e5ab-4a4c-8ef7-82eaad2a175d","fieldPos":1035,"fieldType":"sap.ui.layout.GridData","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"spanS","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"spanM","grouping":"Properties","value":"12","script":"","translation":[]},{"attribute":"spanL","grouping":"Properties","value":"12","script":"","translation":[]}]},{"fieldNo":"77e3910c-8101-49b1-bf87-830cdcd387a0","fieldName":"boxLogon","fieldParent":"a23ced5c-da41-4292-9c1e-8d7206c8ec06","fieldPos":1036,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"f11ba21f-0003-4753-c221-fe33c7d4a85c","fieldName":"oSimpleForm","fieldParent":"77e3910c-8101-49b1-bf87-830cdcd387a0","fieldPos":1037,"fieldType":"sap.ui.layout.form.SimpleForm","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"loginForm","script":"","translation":[]}]},{"fieldNo":"2a5e864a-37ec-4ccf-9353-d293f5c6f29b","fieldName":"oVBoxSign","fieldParent":"f11ba21f-0003-4753-c221-fe33c7d4a85c","fieldPos":1038,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth1","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"465bcfc1-b04d-4121-cc6a-62181a0556f8","fieldName":"oVBox1Sign","fieldParent":"2a5e864a-37ec-4ccf-9353-d293f5c6f29b","fieldPos":1039,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiNoMargin","script":"","translation":[]}]},{"fieldNo":"6dbe5795-72a3-449f-96b7-337361b145cd","fieldName":"oTextSign","fieldParent":"465bcfc1-b04d-4121-cc6a-62181a0556f8","fieldPos":1040,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Please Enter your Credentials","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"titleColor","script":"","translation":[]}]},{"fieldNo":"05c28587-46c1-4a63-f39b-a3b409a8f287","fieldName":"oHBox1Sign","fieldParent":"2a5e864a-37ec-4ccf-9353-d293f5c6f29b","fieldPos":1041,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth","script":"","translation":[]}]},{"fieldNo":"da9d5aca-7ab2-4e21-ea02-799a7464fd09","fieldName":"inFormLogin","fieldParent":"05c28587-46c1-4a63-f39b-a3b409a8f287","fieldPos":1042,"fieldType":"sap.m.Select","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"ec48ec6a-c867-455b-aebe-bb183350696a","fieldName":"oHBox2Sign","fieldParent":"2a5e864a-37ec-4ccf-9353-d293f5c6f29b","fieldPos":1043,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth","script":"","translation":[]}]},{"fieldNo":"e34aad28-6ffe-48a3-c601-539ad0a7bb5e","fieldName":"inUsername","fieldParent":"ec48ec6a-c867-455b-aebe-bb183350696a","fieldPos":1044,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"170%","script":"","translation":[]},{"attribute":"type","grouping":"Properties","value":"Email","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"eSignLoginUser","script":"","translation":[]},{"attribute":"placeholder","grouping":"Properties","value":"Username","script":"","translation":[]}]},{"fieldNo":"1dd0177c-4ca2-46bb-e1a7-555925e59547","fieldName":"oHBox3Sign","fieldParent":"2a5e864a-37ec-4ccf-9353-d293f5c6f29b","fieldPos":1045,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth","script":"","translation":[]}]},{"fieldNo":"8bd5730e-8b24-4fb9-ce68-56cd2ec74d0c","fieldName":"inPassword","fieldParent":"1dd0177c-4ca2-46bb-e1a7-555925e59547","fieldPos":1046,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"170%","script":"","translation":[]},{"attribute":"type","grouping":"Properties","value":"Password","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"eSignLogin","script":"","translation":[]},{"attribute":"placeholder","grouping":"Properties","value":"Password","script":"","translation":[]},{"attribute":"submit","grouping":"Events","value":"formLoginButton.firePress();","script":"formLoginButton.firePress();","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"inUsername.setValueState(); inPassword.setValueState();","script":"inUsername.setValueState(); inPassword.setValueState();","translation":[]}]},{"fieldNo":"055c5e80-b414-4714-c2e6-bc62c768b6f8","fieldName":"oHBox4Sign","fieldParent":"2a5e864a-37ec-4ccf-9353-d293f5c6f29b","fieldPos":1047,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"styleHboxfullWidth","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignContent","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"3ebe3f39-21c5-40d7-991d-2d32baa81ad6","fieldName":"formLoginButton","fieldParent":"055c5e80-b414-4714-c2e6-bc62c768b6f8","fieldPos":1048,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"APPROVE","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"buttonLoginGreen","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.show(0);\n\n\nlet rec = {};\nrec.username = inUsername.getValue();\nrec.password = inPassword.getValue();\n\nif (!rec.username || !rec.password) {\n    if (!rec.username) {\n        inUsername.setValueState(\"Error\");\n    }\n    if (!rec.password) {\n        inPassword.setValueState(\"Error\");\n    }\n    sap.ui.core.BusyIndicator.hide();\n    return;\n}\n\ninFormLogin.setSelectedKey(\"jjldap\");\nvar formPath = inFormLogin.getSelectedKey() || \"local\";\nvar formType;\n\nfor (var i = 0; i < diaTargetAuth.formLogons.length; i++) {\n    if (diaTargetAuth.formLogons[i].path === formPath) {\n        formType = diaTargetAuth.formLogons[i].type;\n    }\n}\n\nif (formPath === \"local\") {\n    diaTargetAuth.callback(rec);\n} else {\n    rec.type = formType;\n    rec.path = formPath;\n    diaTargetAuth.callback(rec);\n}\n","translation":[]}]},{"fieldNo":"fa52d979-d1fe-448c-eee4-b11a66b680a6","fieldName":"butCancel","fieldParent":"055c5e80-b414-4714-c2e6-bc62c768b6f8","fieldPos":1049,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"150px","script":"","translation":[]},{"attribute":"type","grouping":"Properties","value":"Emphasized","script":"","translation":[]},{"attribute":"text","grouping":"Properties","value":"CANCEL","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"diaTargetAuth.callbackCancel();\r\nsap.ui.core.BusyIndicator.hide(); //multiple click","translation":[]}]},{"fieldNo":"d62d6e59-e333-45c4-a17d-ac6b2356d7d6","fieldName":"oBtnDialogCancelYes","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1050,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"DISCARD","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\n*/\noDialogCancel.close();\ng_dataLoss = false;\ng_isMatEdited = false;\ng_matDataLoss = false;\ngoBackToDashboard(); \n","translation":[]}]},{"fieldNo":"e4bcb488-e165-425b-ed02-fd98a9bcbc9d","fieldName":"oBtnDialogCancelNo","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1051,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CLOSE & RETURN","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"greenbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"oDialogCancel.close();\r\ng_goToDashClicked = false;\r\ng_goToBatchDashClicked = false;","translation":[]}]},{"fieldNo":"941205cf-245f-4dee-cac0-fe277e7c2732","fieldName":"oDialogCancel","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1052,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"title","grouping":"Properties","value":"OneASL System Message","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"endButton","grouping":"Associations","value":"oBtnDialogCancelNo","script":"","translation":[]},{"attribute":"beginButton","grouping":"Associations","value":"oBtnDialogCancelYes","script":"","translation":[]}]},{"fieldNo":"2b09ea05-cd5e-4ca6-e4b1-d2e7003fea63","fieldName":"oTextDialogCancel","fieldParent":"941205cf-245f-4dee-cac0-fe277e7c2732","fieldPos":1053,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]}]},{"fieldNo":"58d489b5-7e9d-4d3a-89db-2f19a519c485","fieldName":"oResponsivePopoverHelpTextData","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1054,"fieldType":"sap.m.ResponsivePopover","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"showHeader","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"858fe96a-fa0e-40bd-d60b-2a06588c4d02","fieldName":"oHBoxPopoverHelpTextData","fieldParent":"58d489b5-7e9d-4d3a-89db-2f19a519c485","fieldPos":1055,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"9dba0e30-5b1d-4ce1-d1cf-5307a43fe9e6","fieldName":"oTextPopoverText","fieldParent":"858fe96a-fa0e-40bd-d60b-2a06588c4d02","fieldPos":1056,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTopBottom","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"helpText","script":"","translation":[]}]},{"fieldNo":"847cf5d6-2ac9-4f0a-b54c-7864254acafb","fieldName":"oButtonSelectDunsSearchInfo","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1057,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"SELECT","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"enabled","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"var select = oTableSearchDunsInfo.getId();\nvar bindings = oTableSearchDunsInfo.getBinding();\nvar data = bindings.getModel().getData();\n\nvar selecIndices = true;\nvar selectedIndex;\nfor (var j = 0; j < data.length; j++) {\n    if (data[j].editFlag) {\n        selecIndices = false;\n        selectedIndex = j;\n        break;\n    }\n}\n\ng_dunsData = data[selectedIndex];\n\n\nif (selecIndices) {\n    showMessageToast(\"Please Select the Row Values\");\n} else {\n    g_actionButton = \"SEARCH DUNS\";\n    validateDunsNo(g_dunsData.DnBDUNSNumber);\n}","translation":[]}]},{"fieldNo":"aa22c367-daa2-430f-e9c8-647a9ad9510f","fieldName":"oButtonCloseDunsSearchInfo","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1058,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CLOSE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: code block to clear DUNS search fields\nUPDATED BY: VIGHNESH\nUPDATED OB: oct 10, 2021\n2021ENHANCEMENTS\n*/\nclearDunsSearch();\noDialogSearchDunsNum.close();","translation":[]}]},{"fieldNo":"4cd9d197-fe53-47ef-a452-9f256d8aea91","fieldName":"oDialogSearchDunsNum","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1059,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"verticalScrolling","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"title","grouping":"Properties","value":"Search Supplier","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialogBox","script":"","translation":[]},{"attribute":"contentWidth","grouping":"Properties","value":"1700px","script":"","translation":[]},{"attribute":"endButton","grouping":"Associations","value":"oButtonCloseDunsSearchInfo","script":"","translation":[]},{"attribute":"beginButton","grouping":"Associations","value":"oButtonSelectDunsSearchInfo","script":"","translation":[]}]},{"fieldNo":"1c7a5250-c82a-4171-b440-2592699af6a0","fieldName":"oHBoxSupplierDunsForm","fieldParent":"4cd9d197-fe53-47ef-a452-9f256d8aea91","fieldPos":1060,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"8985c66a-347a-4766-d802-8297aabf45a0","fieldName":"oVBoxSearchDunsSupplierName","fieldParent":"1c7a5250-c82a-4171-b440-2592699af6a0","fieldPos":1061,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"870976ce-c675-40fd-a8b0-b0fc2bdf780d","fieldName":"oLabelSearchDunsSupplierName","fieldParent":"8985c66a-347a-4766-d802-8297aabf45a0","fieldPos":1062,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Supplier Name:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"wrapping","grouping":"Properties","value":"false","script":"","translation":[]}]},{"fieldNo":"ea1119d9-0899-412e-ff91-cedaa12b5d65","fieldName":"oInputSearchDunsSupplierName","fieldParent":"8985c66a-347a-4766-d802-8297aabf45a0","fieldPos":1063,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\r\nNOTE: remove error highlights\r\nUPDATED BY: VIGHNESH\r\nUPDATED OB: oct 10, 2021\r\n2021ENHANCEMENTS\r\n*/\r\nif (this.getValue().trim() !== \"\") {\r\n    this.removeStyleClass(\"error\");\r\n    this.addStyleClass(\"inputfield\");\r\n}","translation":[]}]},{"fieldNo":"0ba2805e-6f75-4750-b913-2db60bcdc6de","fieldName":"oVBoxSearchDunsSupplierState","fieldParent":"1c7a5250-c82a-4171-b440-2592699af6a0","fieldPos":1064,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"dfc9ec17-e4a1-4e44-8d79-d7af4eeaedcd","fieldName":"oLabelSearchDunsSupplierState","fieldParent":"0ba2805e-6f75-4750-b913-2db60bcdc6de","fieldPos":1065,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Region / State / Province:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]}]},{"fieldNo":"37062997-c365-4466-c1a1-6c8f0d890dec","fieldName":"oInputSearchDunsSupplierState","fieldParent":"0ba2805e-6f75-4750-b913-2db60bcdc6de","fieldPos":1066,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"8bfa672c-58c8-4e55-81e0-6c73f76c2dab","fieldName":"oVBoxSearchDunsSupplierCountry","fieldParent":"1c7a5250-c82a-4171-b440-2592699af6a0","fieldPos":1067,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"100%","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiTinyMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"6ec11e00-e846-4065-d7e7-c802dc6a1e55","fieldName":"oLabelSearchDunsSupplierCountry","fieldParent":"8bfa672c-58c8-4e55-81e0-6c73f76c2dab","fieldPos":1068,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"Country:","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"inputfieldheader","script":"","translation":[]},{"attribute":"required","grouping":"Properties","value":"true","script":"","translation":[]}]},{"fieldNo":"79adf793-b435-4498-c893-83ad6fd64914","fieldName":"oInputSearchDunsSupplierCountry","fieldParent":"8bfa672c-58c8-4e55-81e0-6c73f76c2dab","fieldPos":1069,"fieldType":"sap.m.Input","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"inputfield","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"liveChange","grouping":"Events","value":"Anonymous Function","script":"/*\r\nNOTE: remove error highlights\r\nUPDATED BY: VIGHNESH\r\nUPDATED OB: oct 10, 2021\r\n2021ENHANCEMENTS\r\n*/\r\nif (this.getValue().trim() !== \"\") {\r\n    this.removeStyleClass(\"error\");\r\n    this.addStyleClass(\"inputfield\");\r\n}","translation":[]}]},{"fieldNo":"9fda993c-7418-4430-ad11-e901721a5c6d","fieldName":"oHBoxDunsButtons","fieldParent":"4cd9d197-fe53-47ef-a452-9f256d8aea91","fieldPos":1070,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"SpaceBetween","script":"","translation":[]}]},{"fieldNo":"7a2ca0dd-3c1f-45bc-d748-2ba35e08a88a","fieldName":"oHBox4","fieldParent":"9fda993c-7418-4430-ad11-e901721a5c6d","fieldPos":1071,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"93f1ddaa-c435-4da4-9904-daf4494bed89","fieldName":"oLabelDunsNoRecordCount","fieldParent":"7a2ca0dd-3c1f-45bc-d748-2ba35e08a88a","fieldPos":1072,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMargin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"totalRecords","script":"","translation":[]}]},{"fieldNo":"c1c8cd3c-7e9f-4f6a-aeb2-c7b6f0bc3ab8","fieldName":"oHBox8","fieldParent":"9fda993c-7418-4430-ad11-e901721a5c6d","fieldPos":1073,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"8153ea81-8095-4f6b-f004-ea3677ca5d75","fieldName":"oButtonDunsSearchInfo","fieldParent":"c1c8cd3c-7e9f-4f6a-aeb2-c7b6f0bc3ab8","fieldPos":1074,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"SEARCH","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"bluebtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: code block to clear DUNS search fields\nUPDATED BY: VIGHNESH\nUPDATED OB: oct 10, 2021\n2021ENHANCEMENTS\n*/\nlet supName = oInputSearchDunsSupplierName.getValue();\nlet supState = oInputSearchDunsSupplierState.getValue();\nlet supCountry = oInputSearchDunsSupplierCountry.getValue();\n\nlet errorMsg = [];\n\n//supplier name\nif (supName === \"\") {\n    errorMsg.push(\"\\n * Supplier Name\");\n    oInputSearchDunsSupplierName.removeStyleClass(\"inputfield\");\n    oInputSearchDunsSupplierName.addStyleClass(\"error\");\n}\n\n//supplier country\nif (supCountry === \"\") {\n    errorMsg.push(\"\\n * Country\");\n    oInputSearchDunsSupplierCountry.removeStyleClass(\"inputfield\");\n    oInputSearchDunsSupplierCountry.addStyleClass(\"error\");\n}\n\n\nlet err = \"\";\nif (errorMsg.length > 0) {\n    err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString();\n    showMessageToast(err);\n    return false;\n} else {\n    sap.ui.core.BusyIndicator.show(0);\n    ajaxGetDunsInfoSearch(supName, supState, supCountry); //function to get all the records based on search parameters\n}","translation":[]}]},{"fieldNo":"44c429a7-ec6d-42f9-9ad6-c936ded086bf","fieldName":"oButtonDunsClearInfo","fieldParent":"c1c8cd3c-7e9f-4f6a-aeb2-c7b6f0bc3ab8","fieldPos":1075,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CLEAR","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginBegin","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: code block to clear DUNS search fields\nUPDATED BY: VIGHNESH\nUPDATED OB: oct 10, 2021\n2021ENHANCEMENTS\n*/\nclearDunsSearch();","translation":[]}]},{"fieldNo":"b378d16f-ecc2-4c19-e260-238bf23e4b10","fieldName":"oHBox9","fieldParent":"9fda993c-7418-4430-ad11-e901721a5c6d","fieldPos":1076,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"7cca7513-e809-4836-d67b-66f3d1a549bf","fieldName":"oButtonSearchDunsClearFilter","fieldParent":"b378d16f-ecc2-4c19-e260-238bf23e4b10","fieldPos":1077,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CLEAR SELECTION","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"Anonymous Function","script":"var iColCounter = 0;\nvar iTotalCols = oTableSearchDunsInfo.getColumns().length;\nvar oListBinding = oTableSearchDunsInfo.getBinding();\nif (oListBinding) {\n    oListBinding.aSorters = null;\n    oListBinding.aFilters = null;\n}\noTableSearchDunsInfo.getModel().refresh(true);\nfor (iColCounter = 0; iColCounter < iTotalCols; iColCounter++) {\n    oTableSearchDunsInfo.getColumns()[iColCounter].setSorted(false);\n    oTableSearchDunsInfo.getColumns()[iColCounter].setFilterValue(\"\");\n}\nvar data = modeloModelObjectSearchDunsNumber.oData;\nfor (j = 0; j < data.length; j++) {\n    data[j].editFlag = false;\n}\noTableSearchDunsInfo.getModel().refresh(true);\nvar oBinding = oTableSearchDunsInfo.getBinding();\noBinding.filter([]);","translation":[]}]},{"fieldNo":"9b596545-3580-4035-98c9-58d34de433d7","fieldName":"oPanelSearchDuns","fieldParent":"4cd9d197-fe53-47ef-a452-9f256d8aea91","fieldPos":1078,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldName":"oTableSearchDunsInfo","fieldParent":"9b596545-3580-4035-98c9-58d34de433d7","fieldPos":1079,"fieldType":"sap.ui.table.Table","script":"","customComponent":false,"bindingValue":"matchbook_api>responseData","bindingType":"h","bindingSource":"API","bindingParentID":"0cf415c2-0e30-475c-9257-c95b8c8e39ed","bindingPathID":"34b8d7e3-5f44-4b42-bbf5-1317290d84a5","request":[],"response":[],"attributes":[{"attribute":"visible","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"table","script":"","translation":[]},{"attribute":"showColumnVisibilityMenu","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"selectionMode","grouping":"Properties","value":"None","script":"","translation":[]},{"attribute":"enableCellFilter","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"sort","grouping":"Events","value":"oTableSearchDunsInfo.getModel().refresh(true);","script":"oTableSearchDunsInfo.getModel().refresh(true);","translation":[]},{"attribute":"firstVisibleRowChanged","grouping":"Events","value":"Anonymous Function","script":"oTableSearchDunsInfo.getModel().refresh(true);","translation":[]},{"attribute":"filter","grouping":"Events","value":"Anonymous Function","script":"oTableSearchDunsInfo.getModel().refresh(true);\n\nvar oBindings = oTableSearchDunsInfo.getBinding(\"rows\");\noBindings.attachChange(function(oEvent) {\n    oLabelDunsNoRecordCount.setText(\"Total Records : \" + oEvent.getSource().iLength)\n    if (oEvent.getSource().iLength === 0) {\n        oTableSearchDunsInfo.setNoData(\"No Data\");\n    }\n});","translation":[]},{"attribute":"customFilter","grouping":"Events","value":"oTableSearchDunsInfo.getModel().refresh(true);","script":"oTableSearchDunsInfo.getModel().refresh(true);","translation":[]}]},{"fieldNo":"c40a19e5-87c7-4e42-a5cf-40b762d66f53","fieldName":"oColumnTableSearchSelection","fieldParent":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldPos":1080,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"5679af32-bd07-4563-f49c-85961e03ec7c","fieldName":"oRadioButtonSelectDunsNumber","fieldParent":"c40a19e5-87c7-4e42-a5cf-40b762d66f53","fieldPos":1081,"fieldType":"sap.m.RadioButton","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"selected","grouping":"Properties","value":"{editFlag}","script":"","translation":[]},{"attribute":"enableCompactMode","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"select","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated on: oct 11, 2021\n*/\nif (oEvent.getParameters().selected === false) {\n    return;\n}\n\n\nlet data = oTableSearchDunsInfo.getBinding().getModel().getData();\nlet lineItem = oEvent.oSource.getBindingContext().getObject();\nlet dataIndex = getDataIndexComponent(lineItem, data);\nsetFlagComponent(dataIndex, true, data);","translation":[]}]},{"fieldNo":"7856080f-9948-473b-991f-5118f10a688d","fieldName":"coloTableSearchDunsInfoDnBDUNSNumber","fieldParent":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldPos":1082,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"30%","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"DnB DUNS Number","script":"","translation":[]},{"attribute":"filtered","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"DnBDUNSNumber","script":"","translation":[]}]},{"fieldNo":"e1fee21b-9106-4c19-ee77-95b8234453e2","fieldName":"txtoTableSearchDunsInfoDnBDUNSNumber","fieldParent":"7856080f-9948-473b-991f-5118f10a688d","fieldPos":1083,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{DnBDUNSNumber}","script":"","translation":[]}]},{"fieldNo":"d1807bbe-1ae8-41de-9b65-73b790cfc3f1","fieldName":"coloTableSearchDunsInfoDnBOrganizationName","fieldParent":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldPos":1084,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"30%","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"DnB Organization Name","script":"","translation":[]},{"attribute":"filtered","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"DnBOrganizationName","script":"","translation":[]}]},{"fieldNo":"277e22e6-89bc-42d9-b4b6-a7c93b76c41a","fieldName":"txtoTableSearchDunsInfoDnBOrganizationName","fieldParent":"d1807bbe-1ae8-41de-9b65-73b790cfc3f1","fieldPos":1085,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{DnBOrganizationName}","script":"","translation":[]}]},{"fieldNo":"b92449df-3413-416c-95a1-4dbd67166897","fieldName":"coloTableSearchDunsInfoDnBSeniorPrincipalName","fieldParent":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldPos":1086,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"30%","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"DnB Senior Principal Name","script":"","translation":[]},{"attribute":"filtered","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"DnBSeniorPrincipalName","script":"","translation":[]}]},{"fieldNo":"bbfce7fa-9fd8-46bc-a798-669e1ce2d1b0","fieldName":"txtoTableSearchDunsInfoDnBSeniorPrincipalName","fieldParent":"b92449df-3413-416c-95a1-4dbd67166897","fieldPos":1087,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{DnBSeniorPrincipalName}","script":"","translation":[]}]},{"fieldNo":"2f6ae75b-b971-4565-e678-52214b3f3137","fieldName":"coloTableSearchDunsInfoDnBStreetAddressLine","fieldParent":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldPos":1088,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"30%","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"DnB Street Address Line","script":"","translation":[]},{"attribute":"filtered","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"DnBStreetAddressLine","script":"","translation":[]}]},{"fieldNo":"a93a9cb0-c6d2-4ba8-8021-f2601c6b23c6","fieldName":"txtoTableSearchDunsInfoDnBStreetAddressLine","fieldParent":"2f6ae75b-b971-4565-e678-52214b3f3137","fieldPos":1089,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{DnBStreetAddressLine}","script":"","translation":[]}]},{"fieldNo":"2cb792b8-c185-40d7-a4ae-775ebd07c2bf","fieldName":"coloTableSearchDunsInfoDnBPrimaryTownName","fieldParent":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldPos":1090,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"30%","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"City","script":"","translation":[]},{"attribute":"filtered","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"DnBPrimaryTownName","script":"","translation":[]}]},{"fieldNo":"d8fb1d3a-41fd-4466-d075-6a8927950dbe","fieldName":"txtoTableSearchDunsInfoDnBPrimaryTownName","fieldParent":"2cb792b8-c185-40d7-a4ae-775ebd07c2bf","fieldPos":1091,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{DnBPrimaryTownName}","script":"","translation":[]}]},{"fieldNo":"dc384825-21f9-41c6-f244-a3b7bb9fbfcc","fieldName":"coloTableSearchDunsInfoDnBCountryISOAlpha2Code","fieldParent":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldPos":1092,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"30%","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Country","script":"","translation":[]},{"attribute":"filtered","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"DnBCountryISOAlpha2Code","script":"","translation":[]}]},{"fieldNo":"a839e5b8-c856-4974-d24a-13b9995df442","fieldName":"txtoTableSearchDunsInfoDnBCountryISOAlpha2Code","fieldParent":"dc384825-21f9-41c6-f244-a3b7bb9fbfcc","fieldPos":1093,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{DnBCountryISOAlpha2Code}","script":"","translation":[]}]},{"fieldNo":"210a7964-77fc-47f5-b32b-c44d00bb4ec1","fieldName":"coloTableSearchDunsInfoDnBPostalCode","fieldParent":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldPos":1094,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"30%","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Zip/Postal Code","script":"","translation":[]},{"attribute":"filtered","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"DnBPostalCode","script":"","translation":[]}]},{"fieldNo":"7f9dfc8f-e632-49db-b51f-270c893101fa","fieldName":"txtoTableSearchDunsInfoDnBPostalCode","fieldParent":"210a7964-77fc-47f5-b32b-c44d00bb4ec1","fieldPos":1095,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{DnBPostalCode}","script":"","translation":[]}]},{"fieldNo":"e72824f6-933b-4e03-8914-e5cc08514772","fieldName":"coloTableSearchDunsInfoDnBTerritoryAbbreviatedName","fieldParent":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldPos":1096,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"30%","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"State","script":"","translation":[]},{"attribute":"filtered","grouping":"Properties","value":"true","script":"","translation":[]},{"attribute":"filterProperty","grouping":"Properties","value":"DnBTerritoryAbbreviatedName","script":"","translation":[]}]},{"fieldNo":"d3b20141-b137-47db-fa9f-982ebecaddb7","fieldName":"txtoTableSearchDunsInfoDnBTerritoryAbbreviatedName","fieldParent":"e72824f6-933b-4e03-8914-e5cc08514772","fieldPos":1097,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{DnBTerritoryAbbreviatedName}","script":"","translation":[]}]},{"fieldNo":"26544c5b-c9f3-45b3-a33e-6adfed58093d","fieldName":"coloTableSearchDunsInfoDnBDisplaySequence","fieldParent":"86f2a418-cb05-42bd-8c3b-54bf7d1d5934","fieldPos":1098,"fieldType":"sap.ui.table.Column","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"width","grouping":"Properties","value":"30%","script":"","translation":[]},{"attribute":"label","grouping":"Properties","value":"Display Sequence","script":"","translation":[]}]},{"fieldNo":"ebebec7f-eb6a-47e7-8d8b-b493e3e13ccc","fieldName":"txtoTableSearchDunsInfoDnBDisplaySequence","fieldParent":"26544c5b-c9f3-45b3-a33e-6adfed58093d","fieldPos":1099,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"{DnBDisplaySequence}","script":"","translation":[]}]},{"fieldNo":"9242c2b5-c080-4eb9-e489-15f95774270d","fieldName":"oDialogShowMessageToast","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1100,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"title","grouping":"Properties","value":"OneASL System Message","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"dialogfooter","script":"","translation":[]}]},{"fieldNo":"1b87c31e-6090-4a92-ca27-1bbdafbc4b6c","fieldName":"oVBoxShowMessageToast","fieldParent":"9242c2b5-c080-4eb9-e489-15f95774270d","fieldPos":1101,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]}]},{"fieldNo":"7c283b21-5d32-4417-fab6-94e8c02eea78","fieldName":"oHBoxShowMessageToast","fieldParent":"1b87c31e-6090-4a92-ca27-1bbdafbc4b6c","fieldPos":1102,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiMediumMarginBeginEnd","script":"","translation":[]}]},{"fieldNo":"c55218a3-92ab-4be1-f1d9-4e39cf5907e5","fieldName":"oTextShowMessageToast","fieldParent":"7c283b21-5d32-4417-fab6-94e8c02eea78","fieldPos":1103,"fieldType":"sap.m.Text","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"messageToastText","script":"","translation":[]}]},{"fieldNo":"f0a9f2fe-d2b8-4fdb-f827-aeb08e14e725","fieldName":"oHBoxShowMessageToastButton","fieldParent":"9242c2b5-c080-4eb9-e489-15f95774270d","fieldPos":1104,"fieldType":"sap.m.HBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"justifyContent","grouping":"Properties","value":"End","script":"","translation":[]}]},{"fieldNo":"51f8f01f-38a1-4165-c62b-7231caae7b22","fieldName":"oButtonDialogShowMessageToast","fieldParent":"f0a9f2fe-d2b8-4fdb-f827-aeb08e14e725","fieldPos":1105,"fieldType":"sap.m.Button","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"text","grouping":"Properties","value":"CLOSE","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginEnd","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"redbtn","script":"","translation":[]},{"attribute":"press","grouping":"Events","value":"oDialogShowMessageToast.close();","script":"oDialogShowMessageToast.close();","translation":[]}]},{"fieldNo":"4e00d653-c528-495d-d93f-bc614196a5b0","fieldName":"oDialogConfirmation","fieldParent":"6b0751a3-f738-4c71-8b67-1d1c1cca4493","fieldPos":1106,"fieldType":"sap.m.Dialog","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"showHeader","grouping":"Properties","value":"false","script":"","translation":[]},{"attribute":"contentWidth","grouping":"Properties","value":"350px","script":"","translation":[]},{"attribute":"contentHeight","grouping":"Properties","value":"200px","script":"","translation":[]}]},{"fieldNo":"ced900af-ada5-43bd-b6b2-d3ecb79deff7","fieldName":"oPanelConfirmation","fieldParent":"4e00d653-c528-495d-d93f-bc614196a5b0","fieldPos":1107,"fieldType":"sap.m.Panel","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClass","grouping":"Properties","value":"panel","script":"","translation":[]}]},{"fieldNo":"42a5284b-a0ad-42ed-92f5-1ceeab1beef9","fieldName":"oVBoxConfirmation","fieldParent":"ced900af-ada5-43bd-b6b2-d3ecb79deff7","fieldPos":1108,"fieldType":"sap.m.VBox","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"justifyContent","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"alignItems","grouping":"Properties","value":"Center","script":"","translation":[]}]},{"fieldNo":"4a45a8a3-8082-4ec8-94a0-089f76dacd9d","fieldName":"oIconConfirmation","fieldParent":"42a5284b-a0ad-42ed-92f5-1ceeab1beef9","fieldPos":1109,"fieldType":"sap.ui.core.Icon","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"createDialogIcon","script":"","translation":[]},{"attribute":"src","grouping":"Properties","value":"sap-icon://accept","script":"","translation":[]},{"attribute":"size","grouping":"Properties","value":"40px","script":"","translation":[]}]},{"fieldNo":"b691d0b6-4005-4d71-936d-9eede37aef89","fieldName":"oLabelConfirmation","fieldParent":"42a5284b-a0ad-42ed-92f5-1ceeab1beef9","fieldPos":1110,"fieldType":"sap.m.Label","script":"","customComponent":false,"request":[],"response":[],"attributes":[{"attribute":"textAlign","grouping":"Properties","value":"Center","script":"","translation":[]},{"attribute":"styleClassMargin","grouping":"Properties","value":"sapUiSmallMarginTop","script":"","translation":[]},{"attribute":"styleClass","grouping":"Properties","value":"diamaintext","script":"","translation":[]}]},{"fieldNo":"b9873799-0714-4098-d042-406544683c25","fieldName":"ComboboxesJS","fieldParent":99999,"fieldPos":1111,"fieldType":"neptune.Script","script":"/**\n * Name: loadComboBoxes  \n * Description: Sets the combo boxes data that we are using in our application. \n *              It loads  following combo boxes.\n *              1. Criticality Level    2. Crucial Supplier Status\n *              3. J&J Segment          4. Critical Subcontractor Status\n *              5. J&J Site             6. J&J Quality Organization\n *              7. J&J Region           8. Type of Supplier Quality Agreement\n *              9. Supplier Type        10. J&J Operating Company\n * Created By : Satya\n * Created At: 03/28/2020\n */\n\n\n\nfunction ldapEmailCombo(objModelItems, comboBoxName) {\n\n    comboBoxName.removeAllItems();\n\n    try {\n        objModelItems = objModelItems && typeof (objModelItems) === \"string\" ? JSON.parse(objModelItems) : objModelItems\n        objModelItems.sort((a, b) => (a.name < b.name) ? 1 : -1)\n        for (var i = 0; i < objModelItems.length; i++) {\n            var item = new sap.ui.core.Item({\n                key: objModelItems[i].email,\n                text: objModelItems[i].name,\n            });\n            comboBoxName.insertItem(item);\n        }\n\n        comboBoxName.insertItem(new sap.ui.core.Item({\n            key: \"All\",\n            text: \"All\",\n        }))\n\n    } catch (e) {\n        objModelItems = JSON.parse(JSON.stringify(objModelItems))\n    }\n\n}\n\n\n\nconst txt_c1 = \"Supplier Info\",\n    txt_c2 = \"Criticality Level\",\n    txt_c3 = \"Crucial Supplier Status\",\n    txt_c4 = \"Critical Subcontractor Status\",\n    txt_c5 = \"J&J Operating Company\",\n    txt_c6 = \"J&J Quality Organization\",\n    txt_c7 = \"J&J Segment\",\n    txt_c8 = \"J&J Region\",\n    txt_c9 = \"Supplier Type\",\n    txt_c10 = \"Type of Supplier Quality Agreement\",\n    txt_c11 = \"J&J Site\",\n    txt_c12 = \"Audit Outcome\",\n    txt_c13 = \"Audit Type\",\n    txt_c14 = \"Audit\",\n    txt_c15 = \"Elevated Approvers Approval\",\n    txt_c16 = \"Quality Agreement\",\n    txt_c17 = \"Supplier Quality\",\n    txt_c18 = \"Qualification Status\",\n    txt_c19 = \"Type of Supplier Quality Agreement\",\n    txt_c20 = \"Status\";\n\n\nfunction loadComboBoxes(configData) {\n    var locationTypeArray = [];\n    var criticalityLevelArray = [];\n    var supplierTypeArray = [];\n    var crucialSupplierStatusArray = [];\n    var criticalSubContStatusArray = [];\n    var jnjSegmentArray = [];\n    var jnjQualOrgArray = [];\n    var jnjOpCompArray = [];\n    var jnjSiteArray = [];\n    var jnjRegionArray = [];\n    var sqaType = [];\n    var sqaStatus = [];\n    var sqaaStatus = [];\n    var auditType = [];\n    var auditOutCome = [];\n    var auditStatus = [];\n    var sqaAgreementType = [];\n    var qualificationStatus = [];\n    var elevatedStatus = [];\n\n\n\n    for (var i = 0; i < configData.length; i++) {\n        if ((configData[i].component).toUpperCase() === txt_c1.toUpperCase()) {\n            locationTypeArray.push(configData[i].values);\n        } else if ((configData[i].dataElement) == txt_c2) {\n            criticalityLevelArray.push(configData[i].values);\n        } else if ((configData[i].dataElement) == txt_c3) {\n            crucialSupplierStatusArray.push(configData[i].values);\n        } else if ((configData[i].dataElement) == txt_c4) {\n            criticalSubContStatusArray.push(configData[i].values);\n        } else if ((configData[i].component) == txt_c7) {\n            jnjSegmentArray.push(configData[i].dataElement);\n        } else if ((configData[i].dataElement) == txt_c6) {\n            jnjQualOrgArray.push(configData[i].values);\n        } else if ((configData[i].component) == txt_c5) {\n            jnjOpCompArray.push(configData[i].dataElement);\n        } else if ((configData[i].dataElement) == txt_c11) {\n            jnjSiteArray.push(configData[i].dataElement);\n        } else if ((configData[i].dataElement) == txt_c8) {\n            jnjRegionArray.push(configData[i].values);\n        } else if ((configData[i].component) == txt_c9) {\n            supplierTypeArray.push(configData[i].dataElement);\n        } else if ((configData[i].dataElement) == txt_c10) {\n            sqaType.push(configData[i].values);\n            sqaAgreementType.push(configData[i].values);\n        } else if ((configData[i].dataElement) == txt_c12) {\n            auditOutCome.push(configData[i].values);\n        } else if ((configData[i].dataElement) == txt_c13) {\n            auditType.push(configData[i].values);\n        } else if ((configData[i].component) == txt_c14 && (configData[i].dataElement) == txt_c20) {\n            auditStatus.push(configData[i].values);\n        } else if ((configData[i].component) == txt_c15) {\n            elevatedStatus.push(configData[i].values);\n        } else if ((configData[i].dataElement) == txt_c18) {\n            qualificationStatus.push((configData[i].values).toUpperCase());\n        } else if ((configData[i].component) == txt_c16 && (configData[i].dataElement) == txt_c20) {\n            sqaaStatus.push(configData[i].values);\n        } else if ((configData[i].component) == txt_c17 && (configData[i].dataElement) == txt_c20) {\n            sqaaStatus.push(configData[i].values);\n        }\n\n    }\n\n\n    locationTypeArray = Array.isArray(locationTypeArray) ? locationTypeArray[0] : locationTypeArray;\n\n    setComboBox(oComboBoxLocationType, locationTypeArray);\n    setComboBox(oComboBoxCriticalityLevel, criticalityLevelArray);\n    setComboBox(oComboBoxCrucialSupplierStatus, crucialSupplierStatusArray);\n    setComboBox(oComboBoxCriticalSubContStatus, criticalSubContStatusArray);\n    setComboBox(oComboBoxSegment, jnjSegmentArray);\n    setComboBox(oComboBoxQualOrg, jnjQualOrgArray);\n    setComboBox(oComboBoxOpComp, jnjOpCompArray);\n    setComboBox(oComboBoxjnjSite, jnjSiteArray);\n    setComboBox(oComboBoxjnjRegion, jnjRegionArray);\n    setComboBox(oComboBoxSupplierType, supplierTypeArray);\n    setComboBox(inpComboSQAgrmntTyp, sqaType);\n    setComboBox(oComboBoxAuditOutcome, auditOutCome);\n    setComboBox(oComboBoxAuditType, auditType);\n    setComboBox(oComboBoxStatus, sqaaStatus);\n    setComboBox(oComboBoxAuditStatus, auditStatus);\n    setComboBox(oComboBoxSQAType, sqaAgreementType);\n    setComboBox(oComboQualificationStatus, qualificationStatus);\n\n\n\n\n    if (g_action === 'BATCHUPLOAD' && g_selectedRole === 'ADMIN') {\n\n        setComboBox(inpComboSQAgrmntTypBU, sqaType);\n        setComboBox(oComboBoxStatusBU, sqaaStatus);\n        setComboBox(oComboBoxSQATypeBU, sqaAgreementType);\n        setComboBox(oComboBoxAuditTypeBU, auditType);\n        setComboBox(oComboBoxAuditOutcomeBU, auditOutCome);\n        setComboBox(oComboBoxAuditStatusBU, auditStatus);\n        setComboBox(oComboQualificationStatusBU, qualificationStatus);\n    }\n\n}\n\n\n/*\nName: loadComboBoxes\nDescription: setting the combo boxes\nupdated By : Vighnesh Sawant  \nupdated At: 04/08/2020\n\nupdating the function to assign the dynamic qualification status as per configuration values to global array\n*/\nfunction setComboBox(objCombo, objModelItems) {\n    if (!objModelItems) {\n        return;\n    }\n\n    if (Array.isArray(objModelItems)) {\n        objModelItems = objModelItems.join('|');\n    }\n    objModelItems = objModelItems.split('|');\n\n    var oItems = objModelItems.reverse();\n\n    /*\n    2021ENHANCMENTS\n    updated by : vighnesh\n    updated on : march 22, 2022, april 6, 2022\n\n    populating the global qualification status array to be used dynamically in application\n    will be used while E-signature process at SQ approvals\n\n    check for status drop down for BU\n    */\n    if (objCombo && (objCombo.sId === oComboQualificationStatus.sId || objCombo.sId === oComboQualificationStatusBU.sId)) {\n\n        let temp_qualItems = oItems;\n        /*\n        replacing all other characters like \\n by empty string & trim spaces & uppercasing\n        */\n        if (temp_qualItems && temp_qualItems.length > 0) {\n            temp_qualItems = temp_qualItems.map((i) => i.replace(/(\\r\\n|\\n|\\r)/gm, '').trim().toUpperCase());\n        } else {\n            temp_qualItems = [];\n        }\n\n        g_qualStatArr = temp_qualItems;\n        temp_qualItems = [];\n\n    }\n\n\n    objCombo.removeAllItems();\n\n\n    for (let i = 0; i < objModelItems.length; i++) {\n        var flag = true;\n\n        var k = oItems[i].replace(/(\\r\\n|\\n|\\r)/gm, \"\").trim(); //APRIL 6, 2022 updated to trim() to remove spaces at both the ends\n\n        /*Check for ASL and SQA \n        for JNJ segment Comboxes\n        */\n        if (g_selectedRole === g_roleNameSqa || g_selectedRole === g_roleNameAsl) {\n            if (objCombo.sId === oComboBoxSegment.sId) {\n                flag = checkRoleForComboItems(k, 'segment') ? true : false;\n            } else if (objCombo.sId === oComboBoxQualOrg.sId) {\n                flag = checkRoleForComboItems(k, 'qualOrg') ? true : false;\n            }\n        }\n\n        var item = new sap.ui.core.ListItem({\n            key: k,\n            text: k,\n            enabled: flag\n        });\n        objCombo.insertItem(item);\n    }\n}\n\n\nfunction checkRoleForComboItems(val, keyField) {\n    if (!g_currentUserRoles) {\n        return true;\n    }\n\n    if (keyField === 'segment') {\n        return g_currentUserRoles.find(element => (element.role === g_selectedRole && element.segment === val));\n    } else if (keyField === 'qualOrg') {\n        var segVal = oComboBoxSegment.getSelectedKey();\n\n        return g_currentUserRoles.find(element => (element.role === g_selectedRole && element.segment === segVal && element.qualOrg === val));\n    }\n\n}\n\n\nfunction fillcomboboxRiskCatgGroup(val) {\n    var configModel = adminConfigHolder.getModel().getData();\n    var jnjRiskCatgGroupArray = [];\n    oComboBoxRiskCatgGroup.setSelectedKey();\n\n    for (let i = 0; i < configModel.length; i++) {\n        if ((configModel[i].dataElement) === val) {\n            jnjRiskCatgGroupArray.push(configModel[i].values);\n        }\n    }\n    var jnjRiskCatgGroupItems = jnjRiskCatgGroupArray[0] ? jnjRiskCatgGroupArray[0].split('|') : [];\n    setComboBox(oComboBoxRiskCatgGroup, jnjRiskCatgGroupItems);\n\n}\n\n//VIGHNESHJULY20\nfunction fillcomboboxjnjQualOrg(val) {\n    var configModel = adminConfigHolder.getModel().getData();\n    var jnjQualOrgArray = [];\n    //oComboBoxQualOrg.setSelectedKey();\n\n    for (let i = 0; i < configModel.length; i++) {\n        if ((configModel[i].dataElement) === val) {\n            jnjQualOrgArray.push(configModel[i].values);\n        }\n    }\n    var jnjQualOrgItems = jnjQualOrgArray[0] ? jnjQualOrgArray[0].split('|') : [];\n    setComboBox(oComboBoxQualOrg, jnjQualOrgItems);\n\n}\n\nfunction fillcomboboxjnjSite(val) {\n    var configModel = adminConfigHolder.getModel().getData();\n    var jnjSiteArray = [];\n    // oComboBoxjnjSite.setSelectedKey();\n\n    for (let i = 0; i < configModel.length; i++) {\n        if ((configModel[i].dataElement) === val) {\n            jnjSiteArray.push(configModel[i].values);\n        }\n    }\n    var jnjSiteItems = jnjSiteArray[0] ? jnjSiteArray[0].split('|') : [];\n    setComboBox(oComboBoxjnjSite, jnjSiteItems);\n\n}\n\n\n\n/*\n2021ENHANCEMENTS\nudpated by : vighnesh\nupdated on : jan 6, 2022, feb 1, 2022\nfunction to allow user only to select from drop downs and not type in it\n*/\nfunction readOnlyComboBoxes() {\n\n    /*SUPPLIER LEVEL*/\n    //LOCATION TYPE\n    oComboBoxLocationType.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxLocationType.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n\n\n\n    /*MATERIAL LEVEL*/\n\n\n    //SUPPLIER TYPE\n    oComboBoxSupplierType.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxSupplierType.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //RISK CATG GRP\n    oComboBoxRiskCatgGroup.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxRiskCatgGroup.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //SEGMENT\n    oComboBoxSegment.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxSegment.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //QUAL ORG\n    oComboBoxQualOrg.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxQualOrg.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //OPCO\n    oComboBoxOpComp.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxOpComp.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //SITE\n    oComboBoxjnjSite.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxjnjSite.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //REGION\n    oComboBoxjnjRegion.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxjnjRegion.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //CRUCIAL ST\n    oComboBoxCrucialSupplierStatus.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxCrucialSupplierStatus.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //CRI ST\n    oComboBoxCriticalSubContStatus.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxCriticalSubContStatus.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //OEM\n    oComboBoxOEM.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxOEM.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //CRITICALITY LEVEL\n    oComboBoxCriticalityLevel.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxCriticalityLevel.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n\n    /*\n    ASL OWNER TAB has contact field which wont be read only\n    */\n\n    /*\n    SQ TAB -- AUDIT PANEL has audit group contact field so no read only\n    */\n\n    /*\n    SQ TAB -- RQC PANEL has audit group contact field so no read only\n    */\n\n    /*SQ TAB -- SQAA panel*/\n    //SQA TYPE\n    inpComboSQAgrmntTyp.addEventDelegate({\n        onAfterRendering: function () {\n            inpComboSQAgrmntTyp.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n\n\n    /*AUDIT TAB*/\n    //AUDIT TYPE\n    oComboBoxAuditType.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxAuditType.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //AUDIT OUTCOME\n    oComboBoxAuditOutcome.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxAuditOutcome.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //AUDIT STATUS\n    oComboBoxAuditStatus.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxAuditStatus.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //AUDIT DATE\n    oDatePicker1Audit.addEventDelegate({\n        onAfterRendering: function () {\n            oDatePicker1Audit.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    /*\n    RQC TAB does not have any drop downs\n    */\n\n\n    /*SQAA TAB*/\n    //SQAA STATUS\n    oComboBoxStatus.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxStatus.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    //SQAA TYPE\n    oComboBoxSQAType.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxSQAType.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n\n    /*SQ APPROVAL TAB*/\n    //QUALIFICATION STATUS\n    oComboQualificationStatus.addEventDelegate({\n        onAfterRendering: function () {\n            oComboQualificationStatus.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n\n    /*\n    BATCH UPLOAD DROP DOWNS -- these are non contact fields since approval workflow does not trigger in batch upload\n    */\n\n    //SQAA\n    inpComboSQAgrmntTypBU.addEventDelegate({\n        onAfterRendering: function () {\n            inpComboSQAgrmntTypBU.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    oComboBoxStatusBU.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxStatusBU.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    oComboBoxSQATypeBU.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxSQATypeBU.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n\n    //AUDIT\n    oComboBoxAuditTypeBU.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxAuditTypeBU.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    oComboBoxAuditOutcomeBU.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxAuditOutcomeBU.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    oComboBoxAuditStatusBU.addEventDelegate({\n        onAfterRendering: function () {\n            oComboBoxAuditStatusBU.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n    oDatePicker1AuditBU.addEventDelegate({\n        onAfterRendering: function () {\n            oDatePicker1AuditBU.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n\n    //SQ APPROVAL\n    oComboQualificationStatusBU.addEventDelegate({\n        onAfterRendering: function () {\n            oComboQualificationStatusBU.$().find(\"input\").attr(\"readonly\", true);\n        }\n    });\n\n\n\n\n\n\n}\n","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"f4a2c718-2672-4714-edfe-bf44ac7f44f7","fieldName":"MultiInputsJS","fieldParent":99999,"fieldPos":1112,"fieldType":"neptune.Script","script":"let g_ui_multi_emailinput;\n\nfunction multiInputEmailVal() {\n    var allMultiInput = [oMultiInputQualContact, oMultiInputProContactM, oMultiInputSrcContact];\n    for (var j = 0; j < allMultiInput.length; j++) {\n        var c1 = new sap.m.Column({\n            header: new sap.m.Label({\n                text: \"Name\"\n            })\n        });\n        var c2 = new sap.m.Column({\n            header: new sap.m.Label({\n                text: \"Email\"\n            })\n        });\n        var r1 = new sap.m.ColumnListItem({\n            cells: [\n                new sap.m.Text({\n                    text: \"{name}\"\n                }),\n                new sap.m.Text({\n                    text: \"{email}\"\n                })\n            ]\n        });\n\n\n        allMultiInput[j].addSuggestionColumn(c1);\n        allMultiInput[j].addSuggestionColumn(c2);\n        allMultiInput[j].bindAggregation('suggestionRows', '/', r1);\n\n\n        var m = new sap.ui.model.json.JSONModel();\n        allMultiInput[j].setModel(m);\n\n    }\n}\n\n\n\n\n\n/*\n2021ENHANCEMENTS\nupdated by :  vighnesh\nudpated on : feb 18, 2022\n\ncode refactored to set busy when loading names\nto avoid the 524 error messages pop up on screen due to rapid calling of APIs due to search\n*/\nfunction getEmailValues(sel) {\n\n    g_ui_multi_emailinput = sel.sId;\n\n    let val = sel.getValue();\n\n    //extra condition added \n    if (val && val.trim() === '') {\n        return;\n    }\n\n    if (val.length >= 3) {\n\n        /*\n        code added to set the field busy\n        */\n        setMaterialContactBusy(true);\n\n        var options = {\n            parameters: {\n                \"userId\": val\n            }\n        };\n\n        apisearchLDAP(options);\n    }\n}\n\n\n\n/*\n2021ENHANCEMENTS\nudpated by : vighnesh\nupdated on : feb 18, 2022\n\ncommon function to set material contact fields busy/free\n*/\nfunction setMaterialContactBusy(flag, value) {\n\n    if (g_ui_multi_emailinput === oMultiInputQualContact.sId) {\n        oMultiInputQualContact.setBusy(flag);\n        value ? oMultiInputQualContact.getModel().setData(value) : oMultiInputQualContact.getModel().setData();\n\n    } else if (g_ui_multi_emailinput === oMultiInputProContactM.sId) {\n        oMultiInputProContactM.setBusy(flag);\n        value ? oMultiInputProContactM.getModel().setData(value) : oMultiInputProContactM.getModel().setData();\n\n    } else if (g_ui_multi_emailinput === oMultiInputSrcContact.sId) {\n        oMultiInputSrcContact.setBusy(flag);\n        value ? oMultiInputSrcContact.getModel().setData(value) : oMultiInputSrcContact.getModel().setData();\n\n    }\n}\n\n\n\n\n\n/*\n2021ENHANCEMENTs\nupdated by :  vighnesh on feb 18, 2022\n\nfunction to set values (email/names) on the field\n*/\nfunction setEmailValues(eve) {\n\n    var valN = eve.getParameters().selectedRow.getBindingContext().getObject();\n\n    var field;\n    if (sap.n) {\n        field = sap.n.currentView.byId(eve.getParameters().id);\n    } else {\n        field = sap.ui.getCore().byId(eve.getParameters().id);\n    }\n\n    field.addToken(\n        new sap.m.Token({\n            key: valN.email,\n            text: valN.name\n        })\n    );\n\n    g_isMatEdited = true; //2021 ENH sprint 3 AGHP-2198\n}\n\nfunction createTokensFromString(inp, value) {\n\n    if (!value) {\n        inp.removeAllTokens();\n        inp.setValue();\n        return;\n    }\n\n    inp.removeAllTokens();\n\n    value.split('|').forEach((i) => {\n        if (i !== \"\") {\n\n            var t = new sap.m.Token({\n                key: i.split('~')[0],\n                text: i.split('~')[1]\n            });\n\n            inp.addToken(t);\n        }\n    });\n}\n\nfunction getStringFromTokenQC() {\n    var emailVal = \"\";\n\n    oMultiInputQualContact.getTokens().forEach((i) => {\n        emailVal = emailVal + i.getKey() + '~' + i.getText() + '|'\n    });\n\n    return emailVal;\n\n}\n\nfunction getStringFromTokenSL() {\n    var emailVal = \"\";\n\n    oMultiInputProContactM.getTokens().forEach((i) => {\n        emailVal = emailVal + i.getKey() + '~' + i.getText() + '|';\n    });\n\n    return emailVal;\n}\n\nfunction getStringFromTokenSC() {\n    var emailVal = \"\";\n\n    oMultiInputSrcContact.getTokens().forEach((i) => {\n        emailVal = emailVal + i.getKey() + '~' + i.getText() + '|';\n    });\n\n    return emailVal;\n}\n// oMultiInput.addSuggestionColumn(c2);\n// oMultiInput.bindAggregation('suggestionRows', '/', r1)","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"af12f211-a30f-413a-f57a-bfa091c651b7","fieldName":"Validations","fieldParent":99999,"fieldPos":1113,"fieldType":"neptune.Script","script":"/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremove unwanted comments & updated code as per AGHP-2193, 2194\n*/\nfunction checkMandatoryFieldsSupplierSave() {\n    let errorStatus = false;\n    let errorMsg = [];\n    let InvalidMsg = [];\n    let InvalidMsgStatus = false;\n\n    //supplier name\n    if (oInputSupplierName.getValue().trim() === \"\") {\n        errorMsg.push(\"\\n *Supplier Name\");\n        errorStatus = true;\n        oInputSupplierName.removeStyleClass(\"inputfield\");\n        oInputSupplierName.addStyleClass(\"error\");\n    } else {\n        oInputSupplierName.setValueState(\"None\");\n        oInputSupplierName.removeStyleClass(\"error\");\n        oInputSupplierName.addStyleClass(\"inputfield\");\n    }\n\n    //supplier reason for ADD/MOD\n    if (txtSupReaAddMod.getValue().trim() === \"\") {\n        errorMsg.push(\"\\n *Reason For Add / Modification\");\n        errorStatus = true;\n        txtSupReaAddMod.removeStyleClass(\"textbox\");\n        txtSupReaAddMod.addStyleClass(\"error\");\n    } else {\n        txtSupReaAddMod.removeStyleClass(\"error\");\n        txtSupReaAddMod.addStyleClass(\"textbox\");\n    }\n\n\n    // Supplier street\n    if (oInputSupplierStreet.getValue().trim() === \"\") {\n        errorMsg.push(\"\\n *Street\");\n        errorStatus = true;\n        oInputSupplierStreet.removeStyleClass(\"inputfield\");\n        oInputSupplierStreet.addStyleClass(\"error\");\n    } else {\n        oInputSupplierStreet.removeStyleClass(\"error\");\n        oInputSupplierStreet.addStyleClass(\"inputfield\");\n    }\n\n\n    //supplier city\n    if (oInputSupplierCity.getValue().trim() === \"\") {\n        errorMsg.push(\"\\n *City\");\n        errorStatus = true;\n        oInputSupplierCity.removeStyleClass(\"inputfield\");\n        oInputSupplierCity.addStyleClass(\"error\");\n    } else {\n        oInputSupplierCity.removeStyleClass(\"error\");\n        oInputSupplierCity.addStyleClass(\"inputfield\");\n    }\n\n    //supplier country\n    if (oInputSupplierCountry.getValue().trim() === \"\") {\n        errorMsg.push(\"\\n *Country\");\n        errorStatus = true;\n        oInputSupplierCountry.removeStyleClass(\"inputfield\");\n        oInputSupplierCountry.addStyleClass(\"error\");\n    } else {\n        oInputSupplierCountry.removeStyleClass(\"error\");\n        oInputSupplierCountry.addStyleClass(\"inputfield\");\n    }\n\n    //supplier ZIP/PIN \n    if (oInputSupplierPIN.getValue().trim() === \"\") {\n        errorMsg.push(\"\\n *Zip / Postal Code\");\n        errorStatus = true;\n        oInputSupplierPIN.removeStyleClass(\"inputfield\");\n        oInputSupplierPIN.addStyleClass(\"error\");\n    } else {\n        oInputSupplierPIN.removeStyleClass(\"error\");\n        oInputSupplierPIN.addStyleClass(\"inputfield\");\n    }\n\n\n\n    let err = \"\";\n    if (errorMsg.length > 0) {\n        err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString() + \"\\n\" + \"\\n\" + \" to Save \\n\";\n    }\n    if (InvalidMsgStatus) {\n        err += \"Please correct following errors : \\n \" + InvalidMsg.toString() + \"\\n\" + \"\\n\" + \" to Save \\n\";\n        errorStatus = true;\n    }\n    const mandateObj = {\n        err,\n        errorMsgArray: errorMsg,\n        errorStatus,\n        invalidMsgArray: InvalidMsg,\n        invalidMsgStatus: InvalidMsgStatus\n    };\n    return mandateObj;\n}\n\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremove unwanted comments\n*/\nfunction emailValidation(emailText, emailPatternRequired) {\n    const semiColonDelimiterPattern = /;/i;\n    const delimiter = semiColonDelimiterPattern.test(emailText) ? \";\" : \",\";\n    const emails = emailText.split(delimiter);\n    let isValidEmail = false;\n    let errorMessage = '* Invalid Email/Emails at: \\n';\n    let counter = emails.length;\n    for (let i = 0; i < emails.length; i++) {\n        const email = emails[i];\n        const emailPattern = new RegExp(emailPatternRequired, 'i');\n        const JnJEmailArray = email.split('@');\n        const validJnJEmail = emailPattern.test(email);\n        let isValidExtArray = email.split(emailPatternRequired);\n        if (JnJEmailArray[1] && validJnJEmail && isValidExtArray[1] === '') {\n            counter -= 1;\n            isValidEmail = true;\n        } else {\n            errorMessage += email;\n            isValidEmail = false;\n            break;\n        }\n    }\n    if (counter === 0) {\n        errorMessage = '';\n    } else {\n        errorMessage += '\\n';\n    }\n    const emailMessageObj = {\n        errorMessage,\n        validEmail: isValidEmail\n    }\n    return emailMessageObj;\n}\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremove unwanted comments\n*/\nfunction phoneNumberValidation(phoneNumber) {\n    let errorMessage = '';\n    if (phoneNumber.length < 10 || phoneNumber.length > 13) {\n        errorMessage = 'Invalid Phone Number \\n';\n    }\n    return errorMessage;\n}\n\n\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremove unwanted comments & amended the style classes\n*/\nfunction checkAddMaterialMandatoryFields(buttonText) {\n    let errorStatus = false;\n    let errorMsg = [];\n    let InvalidMsg = [];\n    let InvalidMsgStatus = false;\n\n    //Supplier Type.\n    if (oComboBoxSupplierType.getSelectedKey() === \"\") {\n        errorMsg.push(\"\\n * Supplier Type\");\n        errorStatus = true;\n        oComboBoxSupplierType.removeStyleClass(\"combobox\");\n        oComboBoxSupplierType.addStyleClass(\"error\");\n    } else {\n        oComboBoxSupplierType.removeStyleClass(\"error\");\n        oComboBoxSupplierType.addStyleClass(\"combobox\");\n    }\n\n    //Risk Categorization Group.\n    if (oComboBoxRiskCatgGroup.getSelectedKey() === \"\" || oComboBoxRiskCatgGroup.getValue() === \"\") {\n        errorMsg.push(\"\\n * Risk Categorization Group\");\n        errorStatus = true;\n        oComboBoxRiskCatgGroup.removeStyleClass(\"combobox\");\n        oComboBoxRiskCatgGroup.addStyleClass(\"error\");\n    } else {\n        oComboBoxRiskCatgGroup.removeStyleClass(\"error\");\n        oComboBoxRiskCatgGroup.addStyleClass(\"combobox\");\n    }\n\n    //Criticality Level.\n    if (oComboBoxCriticalityLevel.getSelectedKey() === \"\") {\n        errorMsg.push(\"\\n * Criticality Level\");\n        errorStatus = true;\n        oComboBoxCriticalityLevel.removeStyleClass(\"combobox\");\n        oComboBoxCriticalityLevel.addStyleClass(\"error\");\n    } else {\n        oComboBoxCriticalityLevel.removeStyleClass(\"error\");\n        oComboBoxCriticalityLevel.addStyleClass(\"combobox\");\n    }\n\n    //Reason for add Modification -- material level validation\n    if (txtMatReaAddMod.getValue() === \"\") {\n        errorMsg.push(\"\\n * Reason For Add / Modification\");\n        errorStatus = true;\n        txtMatReaAddMod.removeStyleClass(\"textbox\");\n        txtMatReaAddMod.addStyleClass(\"error\");\n    } else {\n        txtMatReaAddMod.removeStyleClass(\"error\");\n        txtMatReaAddMod.addStyleClass(\"textbox\");\n    }\n\n    //Requested time to get material on ASL\n    if (oInputMatReqTime.getValue() === '') {\n        errorMsg.push(\"\\n * Requested Timing to Get Materials/Services Information on ASL\");\n        errorStatus = true;\n        oInputMatReqTime.removeStyleClass(\"reqTiming\");\n        oInputMatReqTime.addStyleClass(\"error\");\n    } else {\n        oInputMatReqTime.setValueState(\"None\");\n        oInputMatReqTime.removeStyleClass(\"error\");\n        oInputMatReqTime.addStyleClass(\"reqTiming\");\n    }\n\n\n    //CL Rationale.\n    if (txtCLRationale.getValue() === \"\") {\n        errorMsg.push(\"\\n * CL Rationale\");\n        errorStatus = true;\n        txtCLRationale.removeStyleClass(\"textbox\");\n        txtCLRationale.addStyleClass(\"error\");\n    } else {\n        txtCLRationale.removeStyleClass(\"error\");\n        txtCLRationale.addStyleClass(\"textbox\");\n    }\n\n    // Crucial Supplier Status\n    if (oComboBoxCrucialSupplierStatus.getSelectedKey() === \"\") {\n        errorMsg.push(\"\\n * Crucial Supplier Status\");\n        errorStatus = true;\n        oComboBoxCrucialSupplierStatus.removeStyleClass(\"combobox\");\n        oComboBoxCrucialSupplierStatus.addStyleClass(\"error\");\n    } else {\n        oComboBoxCrucialSupplierStatus.removeStyleClass(\"error\");\n        oComboBoxCrucialSupplierStatus.addStyleClass(\"combobox\");\n    }\n\n    // Critical Subcontractor Status\n    if (oComboBoxCriticalSubContStatus.getSelectedKey() === \"\") {\n        errorMsg.push(\"\\n * Critical Subcontractor Status\");\n        errorStatus = true;\n        oComboBoxCriticalSubContStatus.removeStyleClass(\"combobox\");\n        oComboBoxCriticalSubContStatus.addStyleClass(\"error\");\n    } else {\n        oComboBoxCriticalSubContStatus.removeStyleClass(\"error\");\n        oComboBoxCriticalSubContStatus.addStyleClass(\"combobox\");\n    }\n\n    //OEM\n    if (oComboBoxOEM.getSelectedKey() === \"\") {\n        errorMsg.push(\"\\n * OEM Supplier\");\n        errorStatus = true;\n        oComboBoxOEM.removeStyleClass(\"combobox\");\n        oComboBoxOEM.addStyleClass(\"error\");\n    } else {\n        oComboBoxOEM.removeStyleClass(\"error\");\n        oComboBoxOEM.addStyleClass(\"combobox\");\n    }\n\n    // override comment\n    if (oHBoxOverride.getVisible() && txtOverrideCom.getValue() === \"\") {\n        errorMsg.push(\"\\n * Crucial / Critical Status Over-ride Comment\");\n        errorStatus = true;\n        txtOverrideCom.removeStyleClass(\"textbox\");\n        txtOverrideCom.addStyleClass(\"error\");\n    } else {\n        txtOverrideCom.removeStyleClass(\"error\");\n        txtOverrideCom.addStyleClass(\"textbox\");\n    }\n\n\n\n    if (btnUpdMaterial.getVisible() || g_mat_copybutton_pressed === true || g_mat_modified_pressed === true) {\n        var jnjErrorObj = {\n            ...checkMaterialJnJSiteMandatoryFields()\n        };\n        errorMsg.concat(jnjErrorObj.errorMsgArray);\n        errorStatus = jnjErrorObj.errorStatus;\n    } else {\n        const bindingsJnJInfo = oTableJnJInfoData.getBinding();\n        if (bindingsJnJInfo && bindingsJnJInfo.getModel() &&\n            bindingsJnJInfo.getModel().getData() &&\n            bindingsJnJInfo.getModel().getData().length !== 0\n        ) {\n            //do nothing\n        } else {\n            errorStatus = true;\n            errorMsg.push(\"\\n ** Click on ADD J&J Information\");\n        }\n    }\n\n\n    let err = \"\";\n    if (errorMsg.length > 0) {\n        err += \"Please enter the following mandatory fields : \\n \" + errorMsg.toString() + \"\\n\" + \"\\n\" + \" to Add Materials/Services Information \\n\";\n        showMessageToast(err);\n        return false;\n    }\n    if (InvalidMsgStatus) {\n        err += \"Please Correct following Errors : \\n \" + InvalidMsg.toString() + \" to Add Material \\n\";\n        errorStatus = true;\n    }\n    const mandateObj = {\n        err,\n        errorMsgArray: errorMsg,\n        errorStatus,\n        invalidMsgArray: InvalidMsg,\n        invalidMsgStatus: InvalidMsgStatus\n    };\n    return mandateObj;\n}\n\n\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremove unwanted comments & amended the style classes\nJ&J Info check\n*/\nfunction checkMaterialJnJSiteMandatoryFields() {\n    let errorStatus = false;\n    let errorMsg = [];\n    let InvalidMsg = [];\n    let InvalidMsgStatus = false;\n\n\n    // J&J Segment\n    if (oComboBoxSegment.getSelectedKey() === \"\") {\n        errorMsg.push(\"\\n * J&J Segment\");\n        errorStatus = true;\n        oComboBoxSegment.removeStyleClass(\"combobox\");\n        oComboBoxSegment.addStyleClass(\"error\");\n    } else {\n        oComboBoxSegment.removeStyleClass(\"error\");\n        oComboBoxSegment.addStyleClass(\"combobox\");\n    }\n\n\n\n    // J&J Quality Organization\n    if (oComboBoxQualOrg.getSelectedKey() === \"\" || oComboBoxQualOrg.getValue() === \"\") {\n        errorMsg.push(\"\\n * J&J Quality Organization\");\n        errorStatus = true;\n        oComboBoxQualOrg.removeStyleClass(\"combobox\");\n        oComboBoxQualOrg.addStyleClass(\"error\");\n    } else {\n        oComboBoxQualOrg.removeStyleClass(\"error\");\n        oComboBoxQualOrg.addStyleClass(\"combobox\");\n    }\n\n\n    // J&J Operating Company\n    if (oComboBoxOpComp.getSelectedKey() === \"\") {\n        errorMsg.push(\"\\n * J&J Operating Company\");\n        errorStatus = true;\n        oComboBoxOpComp.removeStyleClass(\"combobox\");\n        oComboBoxOpComp.addStyleClass(\"error\");\n    } else {\n        oComboBoxOpComp.removeStyleClass(\"error\");\n        oComboBoxOpComp.addStyleClass(\"combobox\");\n    }\n\n\n\n    // J&J Site\n    if (oComboBoxjnjSite.getSelectedKey() === \"\" || oComboBoxjnjSite.getValue() === \"\") {\n        errorMsg.push(\"\\n * J&J Site\");\n        errorStatus = true;\n        oComboBoxjnjSite.removeStyleClass(\"combobox\");\n        oComboBoxjnjSite.addStyleClass(\"error\");\n    } else {\n        oComboBoxjnjSite.removeStyleClass(\"error\");\n        oComboBoxjnjSite.addStyleClass(\"combobox\");\n    }\n\n\n\n    let err = \"\";\n    if (errorMsg.length > 0) {\n        err += \"Please enter the following mandatory fields \\n \" + errorMsg.toString() + \"\\n\" + \"\\n\" + \" to Add J&J Information \\n\";\n        showMessageToast(err);\n        return false;\n    }\n    if (InvalidMsgStatus) {\n        err += \"Please Correct following Errors : \\n \" + InvalidMsg.toString() + \"\\n\" + \"\\n\" + \" to Add J&J Information \\n\";\n        errorStatus = true;\n    }\n    var mandateObj = {\n        err,\n        errorMsgArray: errorMsg,\n        errorStatus,\n        invalidMsgArray: InvalidMsg,\n        invalidMsgStatus: InvalidMsgStatus\n    };\n    return mandateObj;\n}\n\n\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremove unwanted comments & amended the style classes\nfunction to check mandatory supplier fields while save as DRAFT/SUBMIT\n*/\nfunction checkMandatoryFieldsSupplierSubmit() {\n    const saveErrorObj = {\n        ...checkMandatoryFieldsSupplierSave()\n    };\n\n    let errorStatus = saveErrorObj.errorStatus;\n    let errorMsg = saveErrorObj.errorMsgArray;\n    let InvalidMsg = saveErrorObj.invalidMsgArray;\n    let InvalidMsgStatus = saveErrorObj.invalidMsgStatus;\n\n    //Requested time to get supplier on ASL\n    if (oInputReqTime.getValue() === '') {\n        errorMsg.push(\"\\n * Requested Timing to Get Supplier on ASL\");\n        errorStatus = true;\n        oInputReqTime.removeStyleClass(\"reqTiming\");\n        oInputReqTime.addStyleClass(\"error\");\n    } else {\n        oInputReqTime.setValueState(\"None\");\n        oInputReqTime.removeStyleClass(\"error\");\n        oInputReqTime.addStyleClass(\"reqTiming\");\n    }\n\n\n\n    let err = \"\";\n    if (errorMsg.length > 0) {\n        err += \"Please enter the following mandatory fields \\n \" + errorMsg.toString() + \"\\n\" + \"\\n\" + \" to Submit \\n\";\n    }\n    if (InvalidMsgStatus) {\n        err += \"Please correct following errors : \\n \" + InvalidMsg.toString() + \"\\n\" + \"\\n\" + \" to Submit \\n\";\n        errorStatus = true;\n    }\n    const mandateObj = {\n        err,\n        errorMsgArray: errorMsg,\n        errorStatus,\n        invalidMsgArray: InvalidMsg,\n        invalidMsgStatus: InvalidMsgStatus\n    };\n    return mandateObj;\n}\n\n\n\n\nfunction validateQuestions() {\n    //\n    var scopeVisibility = oPanelScope.getVisible();\n    var table1Visibility = oPanelTable1.getVisible();\n    var table2Visibility = oPanelTable2.getVisible();\n\n    if (g_questions.Q0 === \"\") {\n        var errorMsg = \"CRUCIAL / CRITICAL QUESTIONNAIRE\";\n        var err = \"Please enter the following mandatory fields :\" + \"\\n\" + \"\\n\" + errorMsg + \"\\n\" + \"\\n\" + \"to add Materials/Services Information\";\n        showMessageToast(err);\n        return false;\n    }\n\n    if (scopeVisibility) {\n        if (g_questions.Q1 === \"\" ||\n            g_questions.Q2 === \"\" ||\n            g_questions.Q3 === \"\" ||\n            g_questions.Q4 === \"\" ||\n            g_questions.Q5 === \"\" ||\n            g_questions.Q6 === \"\") {\n            showMessageToast(\"Please answer all questions from 'Scope' section to continue.\")\n            return false;\n        }\n    }\n    if (table1Visibility) {\n        if (g_questions.Q7 === \"\" ||\n            g_questions.Q8 === \"\" ||\n            g_questions.Q9 === \"\") {\n            showMessageToast(\"Please answer all questions from 'Table 1' section to continue.\")\n            return false;\n        }\n    }\n    if (table2Visibility) {\n        if (g_questions.Q10 === \"\" ||\n            g_questions.Q11 === \"\" ||\n            g_questions.Q12 === \"\" ||\n            g_questions.Q13 === \"\" ||\n            g_questions.Q14 === \"\" ||\n            g_questions.Q15 === \"\" ||\n            g_questions.Q16 === \"\" ||\n            g_questions.Q17 === \"\") {\n            showMessageToast(\"Please answer all questions from 'Table 2' section to continue.\")\n            return false;\n        }\n    }\n    return true;\n}\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremove unwanted comments\nfunction to clear all material level highlights\n*/\nfunction clearMaterialHighlightedfields() {\n\n    oInputMatReqTime.removeStyleClass(\"error\");\n    oInputMatReqTime.addStyleClass(\"reqTiming\");\n\n    oComboBoxSupplierType.removeStyleClass(\"error\");\n    oComboBoxSupplierType.addStyleClass(\"combobox\");\n\n    oComboBoxRiskCatgGroup.removeStyleClass(\"error\");\n    oComboBoxRiskCatgGroup.addStyleClass(\"combobox\");\n\n    oComboBoxCriticalityLevel.removeStyleClass(\"error\");\n    oComboBoxCriticalityLevel.addStyleClass(\"combobox\");\n\n    txtMatReaAddMod.removeStyleClass(\"error\");\n    txtMatReaAddMod.removeStyleClass('warning');\n    txtMatReaAddMod.addStyleClass(\"textbox\");\n    txtMatReaAddMod.setValueState('None');\n    txtMatReaAddMod.setValueStateText();\n\n    txtCLRationale.removeStyleClass(\"error\");\n    txtCLRationale.removeStyleClass('warning');\n    txtCLRationale.addStyleClass(\"textbox\");\n    txtCLRationale.setValueState('None');\n    txtCLRationale.setValueStateText();\n\n    txtPrdPartDesc.removeStyleClass(\"error\");\n    txtPrdPartDesc.removeStyleClass(\"warning\");\n    txtPrdPartDesc.addStyleClass(\"textbox\");\n    txtPrdPartDesc.setValueState('None');\n    txtPrdPartDesc.setValueStateText();\n\n    oComboBoxCrucialSupplierStatus.removeStyleClass(\"error\");\n    oComboBoxCrucialSupplierStatus.addStyleClass(\"combobox\");\n\n    oComboBoxCriticalSubContStatus.removeStyleClass(\"error\");\n    oComboBoxCriticalSubContStatus.addStyleClass(\"combobox\");\n\n    oComboBoxOEM.removeStyleClass(\"error\");\n    oComboBoxOEM.addStyleClass(\"combobox\");\n\n    if (oHBoxOverride.getVisible()) {\n        txtOverrideCom.removeStyleClass(\"error\");\n        txtOverrideCom.removeStyleClass(\"warning\");\n        txtOverrideCom.addStyleClass(\"textbox\");\n        txtOverrideCom.setValueStateText();\n        txtOverrideCom.setValueState('None');\n    }\n\n    oComboBoxSegment.removeStyleClass(\"error\");\n    oComboBoxSegment.addStyleClass(\"combobox\");\n    oComboBoxQualOrg.removeStyleClass(\"error\");\n    oComboBoxQualOrg.addStyleClass(\"combobox\");\n\n    oComboBoxOpComp.removeStyleClass(\"error\");\n    oComboBoxOpComp.addStyleClass(\"combobox\");\n\n    oComboBoxjnjSite.removeStyleClass(\"error\");\n    oComboBoxjnjSite.addStyleClass(\"combobox\");\n\n}\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremove unwanted comments\nfunction to clear all J&J Info level highlights\n*/\nfunction clearJnJHighlightedfields() {\n    oComboBoxSegment.removeStyleClass(\"error\");\n    oComboBoxSegment.addStyleClass(\"combobox\");\n\n    oComboBoxQualOrg.removeStyleClass(\"error\");\n    oComboBoxQualOrg.addStyleClass(\"combobox\");\n\n    oComboBoxOpComp.removeStyleClass(\"error\");\n    oComboBoxOpComp.addStyleClass(\"combobox\");\n\n    oComboBoxjnjSite.removeStyleClass(\"error\");\n    oComboBoxjnjSite.addStyleClass(\"combobox\");\n}\n\n\n\nfunction clearBusLinkCharacterLimit() {\n    labRemCountPurSysID.setText();\n    labRemCountPurSysName.setText();\n    labRemCountLocAdd.setText();\n}\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremove unwanted comments/refactored\nfunction to clear all supplier level highlights\n*/\nfunction clearSupplierHighlightedfields() {\n    oInputSupplierName.removeStyleClass(\"error\");\n    oInputSupplierName.addStyleClass(\"inputfield\");\n\n    txtSupReaAddMod.removeStyleClass(\"error\");\n    txtSupReaAddMod.addStyleClass(\"textbox\");\n\n    oInputSupplierStreet.removeStyleClass(\"error\");\n    oInputSupplierStreet.addStyleClass(\"inputfield\");\n\n    oInputSupplierCountry.removeStyleClass(\"error\");\n    oInputSupplierCountry.addStyleClass(\"inputfield\");\n\n    oInputSupplierCity.removeStyleClass(\"error\");\n    oInputSupplierCity.addStyleClass(\"inputfield\");\n\n    oInputSupplierPIN.removeStyleClass(\"error\");\n    oInputSupplierPIN.addStyleClass(\"inputfield\");\n\n}\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 1, 2021\nremove unwanted comments\nfunction to clear all purchasing highlights\n*/\nfunction clearPurchaseSystemHighlightfields() {\n    labRemCountPurSysID.setText();\n    txtPurchaseSysID.setValueState(\"None\");\n    txtPurchaseSysID.removeStyleClass(\"warning\");\n    txtPurchaseSysID.addStyleClass(\"textbox\");\n\n    labRemCountPurSysName.setText()\n    txtPurSysName.setValueState(\"None\");\n    txtPurSysName.removeStyleClass(\"warning\");\n    txtPurSysName.addStyleClass(\"textbox\");\n\n    labRemCountLocAdd.setText();\n    txtLocationAddress.setValueState(\"None\");\n    txtLocationAddress.removeStyleClass(\"warning\");\n    txtLocationAddress.addStyleClass(\"textbox\");\n}\n\n\n\n\n\n/*\n2021ENHANCEMENTS -- sprint 3\nupdated by: vighnesh\nupdated on: nov 28, 2021\nremove unwanted comments & refactored\nfunction for highlighting the missing fields in batch upload Dialog box\n*/\nfunction missingFieldsBatch() {\n\n    let errorMsg = [];\n\n    //for audit panel\n    if (cBoxAuditReq.getSelected()) {\n        if (oComboBoxAuditTypeBU.getSelectedKey() === \"\" || oComboBoxAuditTypeBU.getValue() === \"\") {\n\n            errorMsg.push(\"\\n *Audit Type Executed\");\n            oComboBoxAuditTypeBU.removeStyleClass(\"combobox\");\n            oComboBoxAuditTypeBU.addStyleClass(\"error\");\n        }\n\n        if (oComboBoxAuditOutcomeBU.getSelectedKey() === \"\" || oComboBoxAuditOutcomeBU.getValue() === \"\") {\n\n            errorMsg.push(\"\\n *Audit Outcome\");\n            oComboBoxAuditOutcomeBU.removeStyleClass(\"combobox\");\n            oComboBoxAuditOutcomeBU.addStyleClass(\"error\");\n        }\n        if (oComboBoxAuditStatusBU.getSelectedKey() === \"\" || oComboBoxAuditStatusBU.getValue() === \"\") {\n\n            errorMsg.push(\"\\n *Audit Status\");\n            oComboBoxAuditStatusBU.removeStyleClass(\"combobox\");\n            oComboBoxAuditStatusBU.addStyleClass(\"error\");\n        }\n        if (oTextAreaxAuditCommentsBU.getValue().trim() === \"\") {\n\n            errorMsg.push(\"\\n *Audit Comments\");\n            oTextAreaxAuditCommentsBU.removeStyleClass(\"textbox\");\n            oTextAreaxAuditCommentsBU.addStyleClass(\"error\");\n        }\n\n\n    }\n\n    //for RQC panel\n    if (cBoxReg.getSelected()) {\n        if (oTextAreaRegCommentsBU.getValue().trim() === \"\") {\n\n            errorMsg.push(\"\\n *Regulatory / Quality Compliance Comments\");\n            oTextAreaRegCommentsBU.removeStyleClass(\"textbox\");\n            oTextAreaRegCommentsBU.addStyleClass(\"error\");\n        }\n\n    }\n\n    //for QA panel\n    if (cBoxAgreeReq.getSelected()) {\n        if (inpComboSQAgrmntTypBU.getSelectedKey() === \"\" || inpComboSQAgrmntTypBU.getValue() === \"\") {\n\n            errorMsg.push(\"\\n *Type of Supplier Quality Agreement\");\n            inpComboSQAgrmntTypBU.removeStyleClass(\"combobox\");\n            inpComboSQAgrmntTypBU.addStyleClass(\"error\");\n        }\n        if (cBoxExist.getSelected()) {\n            if (inpReferenceNumberBU.getValue().trim() === \"\") {\n\n                errorMsg.push(\"\\n *Reference Number\");\n                inpReferenceNumberBU.removeStyleClass(\"textbox\");\n                inpReferenceNumberBU.addStyleClass(\"error\");\n            }\n            if (inpLocationNameBU.getValue().trim() === \"\") {\n\n                errorMsg.push(\"\\n *Location Name\");\n                inpLocationNameBU.removeStyleClass(\"inputfield\");\n                inpLocationNameBU.addStyleClass(\"error\");\n            }\n        } else {\n            if (oComboBoxStatusBU.getSelectedKey() === \"\" || oComboBoxStatusBU.getValue() === \"\") {\n\n                errorMsg.push(\"\\n *Status\");\n                oComboBoxStatusBU.removeStyleClass(\"combobox\");\n                oComboBoxStatusBU.addStyleClass(\"error\");\n            }\n            if (oComboBoxSQATypeBU.getSelectedKey() === \"\" || oComboBoxSQATypeBU.getValue() === \"\") {\n\n                errorMsg.push(\"\\n *Quality Agreement Executed\");\n                oComboBoxSQATypeBU.removeStyleClass(\"combobox\");\n                oComboBoxSQATypeBU.addStyleClass(\"error\");\n            }\n            if (oInputLocationNameBU.getValue().trim() === \"\") {\n\n                errorMsg.push(\"\\n *Location Name\");\n                oInputLocationNameBU.removeStyleClass(\"inputfield\");\n                oInputLocationNameBU.addStyleClass(\"error\");\n            }\n            if (oTextAreaSQACommentsBU.getValue().trim() === \"\") {\n\n                errorMsg.push(\"\\n *Quality Agreement Comments\");\n                oTextAreaSQACommentsBU.removeStyleClass(\"textbox\");\n                oTextAreaSQACommentsBU.addStyleClass(\"error\");\n            }\n\n        }\n\n    }\n\n    //for E-Sign panel\n    if (oComboQualificationStatusBU.getSelectedKey() === \"\" || oComboQualificationStatusBU.getValue() === \"\") {\n\n        errorMsg.push(\"\\n *Qualification Status\");\n        oComboQualificationStatusBU.removeStyleClass(\"combobox\");\n        oComboQualificationStatusBU.addStyleClass(\"error\");\n    }\n\n    if (txtAreaQualificationRationaleBU.getValue().trim() === \"\") {\n\n        errorMsg.push(\"\\n *Qualification Rationale / Summary\");\n        txtAreaQualificationRationaleBU.removeStyleClass(\"textbox\");\n        txtAreaQualificationRationaleBU.addStyleClass(\"error\");\n    }\n\n    if (oTextAreaCommentsElevatedBU.getValue().trim() === \"\") {\n\n        errorMsg.push(\"\\n *Second Approver Comments\");\n        oTextAreaCommentsElevatedBU.removeStyleClass(\"textbox\");\n        oTextAreaCommentsElevatedBU.addStyleClass(\"error\");\n    }\n\n    return errorMsg;\n}\n\n\n\nfunction validateEmail(email) {\n    const regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return regEx.test(String(email).toLowerCase());\n}","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"673680e1-6b13-4659-8879-b4c82612d4eb","fieldName":"SaveSupplier","fieldParent":99999,"fieldPos":1114,"fieldType":"neptune.Script","script":"/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on : march 24, 2022\n\nfunction to run validations  / udpate the qualificatio status / other related fields before forming an object to post it in DB over an API call.\n*/\nfunction updateSupplierInfo(qualificationStatus) {\n    let errorObj = {};\n    let errorStatus = false;\n    let errorMsg = [];\n    let err = \"\";\n    let InvalidMsg = [];\n    let InvalidMsgStatus = false;\n\n    let reqMatArr = [];\n    let err_txt_msg;\n\n    if (qualificationStatus === \"DRAFT\") {\n        errorObj = {\n            ...checkMandatoryFieldsSupplierSave()\n        };\n\n        errorStatus = errorObj.errorStatus;\n        err = errorObj.err;\n        InvalidMsg = errorObj.invalidMsgArray;\n        InvalidMsgStatus = errorObj.invalidMsgStatus;\n\n        if (g_selectedRole === 'REQ') {\n\n            let tab = oTableAddMaterial.getModel();\n            let data = tab.getData();\n\n\n            //new code vighnesh march 24, 2022\n            /*\n            TECH TEAM NOTE: the below code snippet is to make sure that only DRAFT or IN QUALIFICATION material go under approval workflow\n            & not any other than these\n            */\n            if (data.length > 0) {\n                /*\n                IF condition to check if a supplier has materials under it\n                DEV TEAM NOTE: a supplier may not have materials under it but can be saved as DRAFT\n                if there are no materials no point of executing the below code\n                */\n\n                let stat = [];\n\n                for (let i = 0; i < data.length; i++) {\n                    stat.push(data[i].qualificationStatus);\n                }\n\n                stat = stat.filter((v, i, a) => a.indexOf(v) === i); //filtering unique\n\n                /*\n                when there are other than DRAFT / IN QUAL materials\n                */\n                if (stat.indexOf('DRAFT') === -1 && stat.indexOf('IN QUALIFICATION') === -1) {\n                    err_txt_msg = 'Please have at least 1 material in DRAFT / IN QUALIFICATION to ' + btnSaveAsDraft.getText().trim() + '.';\n                    showMessageToast(err_txt_msg);\n                    sap.ui.core.BusyIndicator.hide();\n                    return;\n                }\n            }\n            //new code vighnesh march 24, 2022 ends\n\n\n            for (var t = 0; t < data.length; t++) {\n                if (data[t].qualificationStatus === \"DRAFT\") {\n                    data[t].pendingApprover = ',REQ';\n                }\n            }\n\n            tab.refresh();\n        }\n\n    } else if (qualificationStatus === \"IN QUALIFICATION\") {\n\n        errorObj = {\n            ...checkMandatoryFieldsSupplierSubmit()\n        };\n        errorStatus = errorObj.errorStatus;\n        errorMsg = errorObj.errorMsgArray;\n        InvalidMsg = errorObj.invalidMsgArray;\n        InvalidMsgStatus = errorObj.invalidMsgStatus;\n\n        const materialTableBindings = oTableAddMaterial.getBinding();\n        if (materialTableBindings && materialTableBindings.getModel() &&\n            materialTableBindings.getModel().getData() &&\n            materialTableBindings.getModel().getData().length !== 0\n        ) {\n            //do nothing\n        } else {\n\n            InvalidMsg.push(\"Add atleast one Materials/Services Information\");\n            InvalidMsgStatus = true;\n        }\n        if (errorMsg.length > 0) {\n            err += \"Please enter the following mandatory fields \\n \" + errorMsg.toString() + \"\\n\" + \"\\n\" + \" to Submit \\n\";\n        }\n\n        if (InvalidMsgStatus) {\n            err += \"Please Correct following Errors : \\n \" + InvalidMsg.toString() + \" to Submit \\n\";\n            errorStatus = true;\n        }\n\n\n        if (g_selectedRole === g_roleNameRequester && errorStatus === false) {\n\n            let tab = oTableAddMaterial.getModel();\n            let data = tab.getData();\n\n\n            /*\n            updated on : may 10, 2022\n\n            Defect ID : AGHP-2604\n            PROD INC : INC000025196169\n\n            it was observed that if REQ A saves the materials as DRAFT, system saves all the materials available which saves the materials owned by REQ B or C (any other than REQ A).\n\n            remediation:\n            perform a find operation to get the index of materials not belonging to the logged REQ & do not SAVE/SUBMIT those materials.\n            removing material from new object\n            */\n\n            /* \n            -- code commented may 18, 2022 due to scope creep \n            -- not mentioned in any AC of AGHP-155\n            \n            [LATEST UPDATE for AGHP-2604 see blow commented lines]\n            -- latest update to the code as per updated by vighnesh on oct 8, 2022\n            -- code uncommented to fix AGHP-2604\n            */\n            reqMatArr = data.length > 0 ? data.filter(m => {\n                if (m.materialRequesterEmail && m.materialRequesterEmail.toLowerCase().trim() === g_users.email.toLowerCase().trim()) {\n                    return m;\n                }\n            }) : [];\n\n            data = reqMatArr; //assigning to original variable for further JS manipulation\n\n\n\n            /*\n            if there are no DRAFT / IN QUALIFICATION materials requested by logged REQUESTER\n            */\n            /*\n            -- code commented may 18, 2022 due to scope creep \n            -- not mentioned in any AC of AGHP-155\n\n\n            [LATEST UPDATE for AGHP-2604 see blow commented lines]\n            -- latest update to the code as per updated by vighnesh on oct 8, 2022\n            -- code uncommented to fix AGHP-2604\n            */\n\n            if (reqMatArr.length === 0) {\n                err_txt_msg = 'Please have atleast 1 material requested by you in DRAFT / IN QUALIFICATION to ' + btnSubmit.getText().trim() + '.';\n                showMessageToast(err_txt_msg);\n                sap.ui.core.BusyIndicator.hide();\n                return;\n            }\n            //ends\n\n\n\n\n\n            let stat = [];\n\n            //new code march 24, 2022\n            for (let i = 0; i < data.length; i++) {\n                stat.push(data[i].qualificationStatus)\n            }\n\n            stat = stat.filter((v, i, a) => a.indexOf(v) === i); //filtering unique\n\n            /*\n            TECH TEAM NOTE: the below code snippet is to make sure that only DRAFT or IN QUALIFICATION material go under approval workflow\n            & not any other than these\n            */\n            if (stat.indexOf('DRAFT') === -1 && stat.indexOf('IN QUALIFICATION') === -1) {\n                err_txt_msg = 'Please have at least 1 material in DRAFT / IN QUALIFICATION to ' + btnSubmit.getText().trim() + '.';\n                showMessageToast(err_txt_msg);\n                sap.ui.core.BusyIndicator.hide();\n                return;\n            }\n            //new code march 24, 2022 ends\n\n\n\n            /*\n            updated by : vighnesh\n            updated on : may 25, 2022\n\n            code block to check for displaying missed material file attachment warning message\n            AGHP-2553\n            new code\n            */\n            if (g_discard_check_submit) {\n\n                /*\n                do nothing\n                system to resume the submission of materials to approval workflow\n                */\n\n            } else {\n                let f = pre_submit_attach_check(data);\n                if (f) {\n                    sap.ui.core.BusyIndicator.hide();\n                    return;\n                };\n            }\n            //new code ends\n\n\n\n\n            var oldData = OriginalData.getModel().getData();\n            let dbADApprovers = modelADGroupApprovers.getData().records;\n\n            for (var t = 0; t < data.length; t++) {\n\n                if (data[t].matInfoId) {\n                    var m = oldData.Materials.find(element => element.matInfoId === data[t].matInfoId);\n                }\n\n                if (data[t].qualificationStatus === \"DRAFT\" ||\n                    (data[t].qualificationStatus === \"IN QUALIFICATION\" && //data[t].rejectedBy\n                        m && m.pendingApprover.includes(g_roleNameRequester))) { //REQ\n                    data[t].approvedBy = \"\";\n                    data[t].rejectedBy = \"\";\n                    data[t].qualificationStatus = \"IN QUALIFICATION\";\n                    data[t].pendingApprover = ',' + g_roleNameAsl;\n                    data[t].ASLContact = [];\n                    var emailsData = \"\";\n\n                    for (var key in dbADApprovers) {\n                        if (dbADApprovers[key].role_key === 'ASL' &&\n                            data[t].jnjSegment === dbADApprovers[key].segment &&\n                            data[t].jnjOrg === dbADApprovers[key].qualityOrg) {\n\n                            emailsData = dbADApprovers[key].userEmails;\n\n                            break;\n                        }\n                    }\n\n                    emailsData = typeof (emailsData) === \"string\" && emailsData.length > 0 ? JSON.parse(emailsData) : [];\n\n                    emailsData.forEach(rec => {\n                        data[t].ASLContact.push(rec.email);\n                    });\n\n                    data[t].ASLContact = (data[t].ASLContact).toString();\n                    data[t].lockedASLContact = \"\";\n                }\n            }\n            tab.refresh();\n        }\n\n    }\n\n\n    if (errorStatus) {\n        showMessageToast(err);\n        sap.ui.core.BusyIndicator.hide(); //added march 24, 2022\n    } else {\n        /*\n        updated on may 10, 2022\n\n        clearing off err text message\n        array holding only materials requested by current logged in REQUESTER\n        will be empty for SAVE AS DRAFT always\n        */\n        err_txt_msg = '';\n\n\n        /*\n        [LATEST UPDATE for AGHP-2604 see blow commented lines]\n        -- latest update to the code as per updated by vighnesh on oct 8, 2022\n        -- code uncommented to fix AGHP-2604\n        */\n\n        saveSupplier(reqMatArr); //-- code commented may 18, 2022 due to scope creep\n\n        //saveSupplier();\n    }\n}\n\n\n\n/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on : march 24, 2022\n\nfunction to create object of supplier and materials and send to API for saving as draft/submitting to OneASL system\n*/\nfunction saveSupplier(reqMatArr) {\n\n    sap.ui.core.BusyIndicator.show(0);\n     \n\n    var d = pageSupplier.getModel().getData();\n    var d1 = oPanelSupplierInfo.getModel().getData();\n    var d2 = oPanelSupplierAddress.getModel().getData();\n    var d4 = oPanelSelectionRationale.getModel().getData();\n\n    var finalData = {};\n\n    finalData.oldObject = OriginalData.getModel().getData();\n\n    /*\n    updated on : may 10, 2022, may 18, 2022\n\n    Defect ID : AGHP-2604\n    PROD INC : INC000025196169\n\n    it was observed that if REQ A Submits the material, system submits all the materials available which submits the materials owned by REQ B or C (any other than REQ A).\n\n    remediation:\n    perform a filter operation to get the materials  belonging to the logged REQ & SUBMIT only those materials.\n    removing material from old object\n    */\n    /*\n    -- code commented may 18, 2022 due to scope creep\n    -- not mentioned in any AC of AGHP-155\n\n\n    [LATEST UPDATE for AGHP-2604 see blow commented lines]\n    -- latest update to the code as per updated by vighnesh on oct 8, 2022\n    -- code uncommented to fix AGHP-2604\n    */\n\n    if (g_actionButton === 'SUBMIT' && finalData.oldObject && finalData.oldObject.Materials) {\n\n        finalData.oldObject.Materials = finalData.oldObject.Materials.length > 0 ? finalData.oldObject.Materials.filter(m => {\n            if (m.materialRequesterEmail && m.materialRequesterEmail.toLowerCase().trim() === g_users.email.toLowerCase().trim()) {\n                return m;\n            }\n        }) : [];\n\n    }\n    //code ends here\n\n\n\n    /*\n    constructing new object\n    */\n    finalData.newObject = {\n        ...d,\n        ...d1,\n        ...d2,\n        ...d4,\n    };\n\n    finalData.newObject.locationType = oComboBoxLocationType.getSelectedKeys().toString();\n    finalData.newObject.requestedTimeOnASL = oInputReqTime.getValue();\n\n    //finalData.newObject.Materials = oTableAddMaterial.getModel().getData(); //comment this line of code when below code is uncommented, may 18, 2022\n    /*\n    updated on may 10, 2022\n\n    during SAVE reqMatArr will be empty, pass the material model data \n    during SUBMIT, pass the reqMatArr\n    */\n    /*\n    [LATEST UPDATE for AGHP-2604 see blow commented lines]\n    -- latest update to the code as per updated by vighnesh on oct 8, 2022\n    -- code uncommented to fix AGHP-2604\n    */\n    reqMatArr && reqMatArr.length > 0 ? finalData.newObject.Materials = reqMatArr : finalData.newObject.Materials = oTableAddMaterial.getModel().getData(); //--code commented may 18, 2022 due to scope creep\n\n\n    finalData.newObject.supplierContact = oTableSupplierContactInfo.getModel().getData();\n\n    //label object for audit\n    finalData.labelObject = {\n        \"supplierInfoId\": oLabelReqSupID.getText(),\n        \"requestDate\": oLabelReqDate.getText(),\n        \"requesterEmail\": oLabelReqEmail.getText(),\n        \"requesterName\": oLabelReqName.getText(),\n        \"typeOfRequest\": oLabelReqType.getText(),\n        \"requestedTimeOnASL\": oLabelReqTime.getText(),\n        \"supplierName\": oLabelSupplierName.getText(),\n        \"dunsNumber\": oLabelDUNS.getText(),\n        \"reasonForAddModi\": oLabelReasonforAdd.getText(),\n        \"supplierAddressStreet\": oLabelSupplierStreet.getText(),\n        \"supplierAddressCountry\": oLabSupplierCountry.getText(),\n        \"supplierAddressCity\": oLabelSupplierCity.getText(),\n        \"supplierAddressPIN\": oLabelSupplierPIN.getText(),\n        \"supplierAddressState\": oLabelSupplieRegion.getText(),\n        \"locationType\": oLabelSupplierLocationType.getText(),\n        \"supplierContact\": {\n            \"firstName\": oLabelFirstname.getText(),\n            \"lastName\": oLabelContactInfoWlink.getText(),\n            \"websiteLink\": oLabJJSupplierContactInfoemail.getText(),\n            \"email\": oLabSupplierContactInfoPhNum.getText(),\n            \"phone\": oLabelSupplierContactInfoLName.getText()\n        },\n        \"selectionRationale\": oLabelSelectionRationLabel.getText(),\n        \"Materials\": {\n\n            \"materialRequesterName\": oLabelMatReqName.getText(),\n            \"materialRequesterEmail\": oLabelMatReqEmail.getText(),\n            \"materialRequestDate\": oLabelMatReqDate.getText(),\n            \"materialTypeOfRequest\": oLabelMatReqType.getText(),\n            \"materialRequestedTimeOnASL\": oLabelMatReqTime.getText(),\n\n            \"supplierType\": oLabelSupplierType.getText(),\n            \"riskCatgGroup\": oLabelRiskCatgGroup.getText(),\n            \"criticalityLevel\": oLabelCriticalityLevel.getText(),\n            \"OemSupplier\": oLabelOEM.getText(),\n            \"reasonForAddModi\": oLabelReason.getText(),\n            \"clRationale\": oLabelCL.getText(),\n            \"productPartDesc\": oLabelProductPartDescription.getText(),\n            \"crucialSupplierStatus\": oLabelMaterialSupplierStatus.getText(),\n            \"criticalSubContStatus\": oLabelMaterialSubcontractor.getText(),\n            \"overrideComment\": oLabelOverride.getText(),\n            \"jnjSegment\": oLabelMaterialSegment.getText(),\n            \"jnjOrg\": oLabelMaterialQulity.getText(),\n            \"jnjOpComp\": oLabelMaterialOpp.getText(),\n            \"jnjSite\": oLabelMaterialSite.getText(),\n            \"jnjRegion\": oLabelMaterialRegion.getText(),\n            \"jnjQualityContact\": oLabelQualContact.getText(),\n            \"jnjSourcingContact\": oLabelSrcContactM.getText(),\n            \"jnjSupplierLiason\": oLabelProContactM.getText(),\n            \"purchasingSys\": {\n                \"purchasingSysId\": oLabelSupplierPurchaseSysIDNum.getText(),\n                \"purchasingSysName\": oLabelSupplierPurchaseSysName.getText(),\n                \"locationAddress\": oLabelLocationAddress.getText()\n            }\n        }\n    };\n\n\n    //convert into empty Array if no data\n    if (!Array.isArray(finalData.newObject.supplierContact)) {\n        finalData.newObject.supplierContact = [];\n    }\n    if (!Array.isArray(finalData.newObject.Materials)) {\n        finalData.newObject.Materials = [];\n    }\n\n    finalData.newObject.attachments = oTableAttachmentSupplier.getModel().getData();\n\n\n    finalData.userId = g_users.userId;\n    finalData.userName = g_users.full_name;\n    finalData.userRole = g_selectedRole;\n    finalData.action = g_action;\n    finalData.actionButton = g_actionButton;\n\n\n    var options = {\n        data: finalData\n    };\n\n    apisaveSupplier(options);\n\n}\n","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"0e99bafa-2103-447b-c9b8-712467002c1e","fieldName":"DialogsJS","fieldParent":99999,"fieldPos":1115,"fieldType":"neptune.Script","script":"/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nudpated on: oct 17, 2021\nremoved unwanted comments\n*/\nfunction dialogDelConfirm(message, sel, yes_callback, no_callback) {\n\n    g_dialog = new sap.m.Dialog({\n        verticalScrolling: false,\n        title: \"Delete Confirmation\",\n        content: [\n            new sap.m.Label({\n                text: message\n            }).addStyleClass('sapUiSmallMargin')\n        ],\n        endButton: new sap.m.Button({\n            text: 'NO',\n            press: no_callback\n        }).addStyleClass('redbtn'),\n        beginButton: new sap.m.Button({\n            text: 'YES',\n            press: yes_callback\n        }).addStyleClass('greenbtn')\n    });\n\n\n    g_dialog.addStyleClass('dialogBox');\n\n    g_dialog.open();\n\n}\n\n\n\n\n/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nudpated on: oct 17, 2021\nadded the data loss code\n*/\nfunction dialogResetConfirm() {\n\n    g_dialog = new sap.m.Dialog({\n        verticalScrolling: false,\n        title: \"RESET CONFIRMATION\",\n        content: [\n            new sap.m.Label({\n                text: \"Are you sure you want to clear all entries?\",\n            }).addStyleClass('sapUiSmallMargin')\n        ],\n        endButton: new sap.m.Button({\n            text: 'NO',\n            press: function () {\n                g_dialog.close();\n            }\n        }).addStyleClass('redbtn'),\n        beginButton: new sap.m.Button({\n            text: 'YES',\n            press: function () {\n                resetEntries();\n                /*\n                sprint 3\n                NOTE: instead of setting the data loss to true in the above function as common, setting it here since reset function is called if user clicks on ADD supplier as well.\n                scenario: when user resets the existing populated data & tries to go back\n                */\n                g_dataLoss = true; //setting the data loss to true since user has cleared off the already existing values from the fields\n                g_dialog.close();\n            }\n        }).addStyleClass('greenbtn')\n    });\n\n\n    g_dialog.addStyleClass('dialogBox');\n\n    g_dialog.open();\n\n}\n\n\n","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"7cd8db08-2056-48be-ec4e-28fcdb1c6813","fieldName":"Helper","fieldParent":99999,"fieldPos":1116,"fieldType":"neptune.Script","script":"/*\n2021ENHANCEMENTS\nupdated by: vighnesh\nupdated on: oct 18, 2021\nrefactored code\n*/\nvar g_model_helptext = new sap.ui.model.json.JSONModel();\n\n\n//function to open the helper text as responsive popover\nfunction openHelperPop(value, icon) {\n    var txtData = ModelData.Find(g_model_helptext, \"dataElement\", value);\n    if (txtData.length > 0) {\n        oTextPopoverText.setText(txtData[0].values);\n    } else {\n        oTextPopoverText.setText(\"Values are not maintained for this field in DB\");\n    }\n    oResponsivePopoverHelpTextData.openBy(icon);\n}\n\n\n//function to display the supplier level details in the header panel\nfunction openSupDetials(icon) {\n\n    let supplierID = oTextReqSupID.getText().trim();\n\n    if (supplierID === \"\") {\n        oResPopSupDetails.setTitle();\n    } else {\n        oResPopSupDetails.setTitle(oInputSupplierName.getValue().trim());\n        oTextResPopStreet.setText(oInputSupplierStreet.getValue().trim());\n        oTextResPopCity.setText(oInputSupplierCity.getValue().trim());\n        oTextResPopCountry.setText(oInputSupplierCountry.getValue().trim());\n        oTextResPopZip.setText(oInputSupplierPIN.getValue().trim());\n    }\n\n\n    //since DUNS number can be empty\n    if (supplierID === \"\") {\n        oTextResPopDUNS.setText();\n    } else if (oInputDUNS.getValue().trim() === \"\") {\n        oTextResPopDUNS.setText(\"Not Applicable\");\n    } else {\n        oTextResPopDUNS.setText(oInputDUNS.getValue().trim());\n    }\n\n\n    //since region can be empty\n    if (supplierID === \"\") {\n        oTextResPopState.setText();\n    } else if (oInputSupplieRegion.getValue().trim() === \"\") {\n        oTextResPopState.setText(\"Not Applicable\");\n    } else {\n        oTextResPopState.setText(oInputSupplieRegion.getValue().trim());\n    }\n\n\n\n    //copy screnario where supplier number is blank and type of request is ADD\n    if (supplierID === \"\" && oTextReqType.getText() === \"ADD\") {\n        oResPopSupDetails.setTitle(oInputSupplierName.getValue().trim());\n        oTextResPopStreet.setText(oInputSupplierStreet.getValue().trim());\n        oTextResPopCity.setText(oInputSupplierCity.getValue().trim());\n        oTextResPopCountry.setText(oInputSupplierCountry.getValue().trim());\n        oTextResPopZip.setText(oInputSupplierPIN.getValue().trim());\n\n        if (oInputDUNS.getValue().trim() === \"\") {\n            oTextResPopDUNS.setText(\"Not Applicable\");\n        } else {\n            oTextResPopDUNS.setText(oInputDUNS.getValue().trim());\n        }\n\n        if (oInputSupplieRegion.getValue().trim() === \"\") {\n            oTextResPopState.setText(\"Not Applicable\");\n        } else {\n            oTextResPopState.setText(oInputSupplieRegion.getValue().trim());\n        }\n    }\n\n    oResPopSupDetails.openBy(icon);\n}\n","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldName":"API's","fieldParent":99999,"fieldPos":1117,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"dfa458f3-c765-4d0c-9eb8-e881d3303d31","fieldName":"searchLDAP","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1118,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"5911A9DE-5A71-41CA-A9A8-728231C966C6","restOperation":"778A9C02-0E47-4E3F-B0C1-2C883A0795B4","request":[],"response":[{"status":"200","dataId":"812533a7-c2c4-4882-d94a-c5f036f843b4","modelFieldNo":"c7e776c3-1c94-4f1e-c51b-482f2f23ff5e"}],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by : vighnesh\nupdated on : feb 18, 2022\n\ncode refactored\n*/\nlet s = xhr.responseJSON;\n\nif (s) {\n\n    let qualContact;\n\n    //when API does not get any response\n    /*\n    2021ENHANCEMENTs\n    updated by : vighnesh\n    updated on : feb 18, 2022\n\n    2 scenarios were observed\n    i -> API returns {}\n    ii -> API returns [] \n    */\n\n    if (Object.keys(s).length === 0 || s.length === 0) {\n\n        if (g_ui_multi_emailinput === oMultiInputQualContact.sId) {\n\n            oMultiInputQualContact.setBusy(false);\n            qualContact = oMultiInputQualContact.getValue();\n        } else if (g_ui_multi_emailinput === oMultiInputProContactM.sId) {\n\n            oMultiInputProContactM.setBusy(false);\n            qualContact = oMultiInputProContactM.getValue();\n        } else if (g_ui_multi_emailinput === oMultiInputSrcContact.sId) {\n\n            oMultiInputSrcContact.setBusy(false);\n            qualContact = oMultiInputSrcContact.getValue();\n        }\n\n        showMessageToast(qualContact + \" could not be found, Please enter a valid Name / Email ID\");\n        return;\n    }\n\n    /*\n    if the API fetches response, bind the values to fields\n    */\n    setMaterialContactBusy(false, s);\n\n}\n\n\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"/*\r\nupdated by Vighnesh on feb 18, 2022\r\nsetting the field non busy\r\nsetting variable to empty\r\n*/\r\nsetMaterialContactBusy(false);\r\nhandleErrors(xhr);","translation":[]}]},{"fieldNo":"abb647d5-ffcf-42db-ff1b-68ecbd8e043d","fieldName":"PostLockingRoleWiseEdit","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1119,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"CAE89165-3DC9-4345-8ED0-3F6D29E3C6D1","restOperation":"80125E58-2BEE-41B9-9268-55662312531E","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"var x = xhr.responseJSON;\n\nif (x.statusMsg === \"Record is locked from now\") {\n\n    if (g_selected_material_ev) {\n        if (oIconTabBarSupplierInfo.getSelectedKey() === 'MATTAB') {\n            materialTableEdit_View(g_selected_material_ev, true, 'EDIT');\n        } else if (oIconTabBarSupplierInfo.getSelectedKey() === 'APPTAB') {\n\n            sap.ui.core.BusyIndicator.show(0);\n            var options = {\n                parameters: {\n                    \"supplierInfoId\": g_selected_material_ev.supplierInfoId,\n                    \"materialInfoId\": g_selected_material_ev.matInfoId // Optional \n                }\n            };\n            g_selected_material_ev = undefined; //Not used by approvers tab - 06/14\n            apigetMatApprovalsInfo(options);\n\n\n\n        }\n    }\n} else {\n    showMessageToast(x.statusMsg);\n}\n//VIGHNESHJULY14\nResetTimeOutTimer();","translation":[]}]},{"fieldNo":"4cdc72e2-89ac-44bc-9da7-60bcfc1eb4b3","fieldName":"updateBatchStagingItems","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1120,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"E2ECAC0A-C88E-43C5-A71C-36E29A7AAE09","restOperation":"D46454E3-3E99-4CD7-DCFD-F02B81E7FCEF","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nupdated by: vighnesh\nupdated on: nov 1, 2021\nAGHP-2273, 2274\n*/\nsap.ui.core.BusyIndicator.hide();\n\nlet msgDlg = \"Updated supplier : \" + g_batchupload_clicked_record.finalResponse.supplierName + \" successfully\";\nshowMessageToast(msgDlg);\n\n//clearing off all the global variable\ng_dataLoss = false;\ng_isMatEdited = false;\ng_matDataLoss = false;\ng_goToDashClicked = false;\ng_goToBatchDashClicked = false;\n\n\nAppCache.Load('oneasl_batch_upload');\nResetTimeOutTimer();","translation":[]}]},{"fieldNo":"a705b55c-6f3f-48e6-cd23-5cbe6d2ace9f","fieldName":"ApproverAPI","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1121,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"8eaef6d9-348a-4caa-894b-8efd622fe6e9","fieldName":"oRestAPISubmitAslOwnerApprover","fieldParent":"a705b55c-6f3f-48e6-cd23-5cbe6d2ace9f","fieldPos":1122,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"3D520162-8385-41BE-8541-54D9C1CF2F95","restOperation":"4BE5EAC9-3028-4B9C-C785-5A2DA799A814","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"//TODO: Go to ASL my tasks and my tasks should be updated\nsap.ui.core.BusyIndicator.show(0);\nshowMessageToast(xhr.responseJSON.statusMsg);\n\n\nlet d = oIconTabBarApproversList.getModel().getData();\nvar options = {\n    parameters: {\n        \"supplierInfoId\": d.material_supplierInfoId,\n        \"materialInfoId\": d.material_matInfoId // Optional \n    }\n};\n\ng_update_approver_material_table = true;\n\napigetMatApprovalsInfo(options);\nResetTimeOutTimer();\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"c901659b-4c3a-4617-c62b-61af4a991d4c","fieldName":"confirmSQAApprover","fieldParent":"a705b55c-6f3f-48e6-cd23-5cbe6d2ace9f","fieldPos":1123,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"96D1AABD-4833-4807-90FA-9598C8B8DB96","restOperation":"06435F1B-1B02-40AF-B736-2AD0782AC57A","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"var resData = xhr.responseJSON.response\n\nif (resData.qualificationPackageConfirmation && resData.qualificationPackageConfirmation !== \"\") {\n    showMessageToast('Successfully Confirmed for Qualification Package.')\n}\n\nsap.ui.core.BusyIndicator.show(0);\nvar options = {\n    data: {\n        \"supplierInfoId\": g_supplierId,\n        \"materialId\": resData.matInfoId,\n        \"actionType\": g_action,\n        \"userRole\": g_selectedRole,\n        \"userId\": g_users.userId,\n        \"qualificationStatus\": g_qualificationStatus\n    }\n};\n\napigetUpdatedSupplierInfo(options);\n\n\n\nsap.ui.core.BusyIndicator.show(0);\nvar options = {\n    parameters: {\n        \"supplierInfoId\": resData.supplierId,\n        \"materialInfoId\": resData.matInfoId // Optional \n    }\n};\n\napigetMatApprovalsInfo(options);\n\ng_dataLoss = false;\n\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"b299f8ec-083c-48b1-b8c4-ac22a7fa685e","fieldName":"confirmSQAAApprover","fieldParent":"a705b55c-6f3f-48e6-cd23-5cbe6d2ace9f","fieldPos":1124,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"4A077724-1D26-455B-B319-F7D4B69DA16E","restOperation":"FCC6EF76-C03A-4020-F546-61CEC73EEEE4","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"// var sqAggrerResponse = xhr.responseJSON.statusMsg;\n// showMessageToast(sqAggrerResponse);\n\n// getUpdatedSupplierInfo();\n\n\nvar resData = xhr.responseJSON.response;\nvar OwnerResponse = xhr.responseJSON.statusMsg;\nshowMessageToast(OwnerResponse);\n\n\n\nvar d = oIconTabBarApproversList.getModel().getData();\nvar options = {\n    parameters: {\n        \"supplierInfoId\": d.material_supplierInfoId,\n        \"materialInfoId\": d.material_matInfoId // Optional \n    }\n};\n\ng_update_approver_material_table = true;\nsap.ui.core.BusyIndicator.show(0);\napigetMatApprovalsInfo(options);\n//VIGHNESHJULY14\nResetTimeOutTimer();\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"83b63068-095a-4c48-fb7b-8eaf84350e15","fieldName":"confirmRQCApprover","fieldParent":"a705b55c-6f3f-48e6-cd23-5cbe6d2ace9f","fieldPos":1125,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"CF7F4100-1500-4E92-B84D-A70469885D81","restOperation":"23EBFB01-9FE8-406B-FD16-5DBA4005CBDB","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"\nvar resData = xhr.responseJSON.response;\nvar OwnerResponse = xhr.responseJSON.statusMsg;\nshowMessageToast(OwnerResponse);\n\nvar d = oIconTabBarApproversList.getModel().getData();\nvar options = {\n    parameters: {\n        \"supplierInfoId\": d.material_supplierInfoId,\n        \"materialInfoId\": d.material_matInfoId // Optional \n    }\n};\n\ng_update_approver_material_table = true;\nsap.ui.core.BusyIndicator.show(0);\napigetMatApprovalsInfo(options);\n//VIGHNESHJULY14\nResetTimeOutTimer();\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"521c6415-1537-4abc-abdc-acd6d6c95e65","fieldName":"confirmAuditApprover","fieldParent":"a705b55c-6f3f-48e6-cd23-5cbe6d2ace9f","fieldPos":1126,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"882DA3DC-229C-4161-B0C9-DB89A6D42036","restOperation":"ECF6CEB2-F686-4CAD-EBD0-37D96FA123A7","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"// var auditResponse = xhr.responseJSON.statusMsg;\n// showMessageToast(auditResponse);\n\n// getUpdatedSupplierInfo();\n\n\nvar resData = xhr.responseJSON.response;\nvar OwnerResponse = xhr.responseJSON.statusMsg;\nshowMessageToast(OwnerResponse);\n\nvar d = oIconTabBarApproversList.getModel().getData();\nvar options = {\n    parameters: {\n        \"supplierInfoId\": d.material_supplierInfoId,\n        \"materialInfoId\": d.material_matInfoId // Optional \n    }\n};\n\ng_update_approver_material_table = true;\nsap.ui.core.BusyIndicator.show(0);\napigetMatApprovalsInfo(options);\n//VIGHNESHJULY14\nResetTimeOutTimer();\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"2edfd141-4ece-49da-9b29-25ab812597fe","fieldName":"confirmElevatedApprover","fieldParent":"a705b55c-6f3f-48e6-cd23-5cbe6d2ace9f","fieldPos":1127,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"08C8BDEC-CDC4-432A-8CB3-C6F784F5726E","restOperation":"2D598664-3DCD-4815-D88F-CE1127789416","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.show(0);\nshowMessageToast(xhr.responseJSON.statusMsg);\n\nlet d = oIconTabBarApproversList.getModel().getData();\nvar options = {\n    parameters: {\n        \"supplierInfoId\": d.material_supplierInfoId,\n        \"materialInfoId\": d.material_matInfoId // Optional \n    }\n};\n\ng_update_approver_material_table = true;\n\napigetMatApprovalsInfo(options);\n\nResetTimeOutTimer();\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"facc2c2c-57b2-4e90-a91f-4c5e5591b84f","fieldName":"getMatApprovalsInfo","fieldParent":"a705b55c-6f3f-48e6-cd23-5cbe6d2ace9f","fieldPos":1128,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"2F19D6CD-4C04-4680-91B1-07FFD1BC62BB","restOperation":"7AA780C3-8F48-44F4-B748-B144485AF480","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"/*2021ENHANCEMENTS*/\ng_dataLoss = false;\n\nlet rec = xhr.responseJSON;\nafterSelectingApproverMaterial(rec);\n\nResetTimeOutTimer();\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"0ea99ed1-c207-4eb5-c831-ca43a4e32b86","fieldName":"getUpdatedSupplierInfo","fieldParent":"a705b55c-6f3f-48e6-cd23-5cbe6d2ace9f","fieldPos":1129,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"D9DD7396-94E0-48F7-9552-B1C4D44CA8EF","restOperation":"6EE0F664-DBE4-4C75-C55F-0FE716630EFA","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"var data = xhr.responseJSON;\nsap.ui.core.BusyIndicator.hide();\n\nif (data) {\n    if (data.finalResponse.Materials && data.finalResponse.Materials.length) {\n        oTableApprovers.getModel().setData(data.finalResponse.Materials);\n        oTableAddMaterial.getModel().setData(data.finalResponse.Materials);\n        oTableApprovers.getModel().refresh();\n        oTableAddMaterial.getModel().refresh();\n    }\n}\n\ng_dataLoss = false;\n\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"f8db2116-f4ab-479b-82fc-412f7e59a677","fieldName":"getUpdatedApprovalData","fieldParent":"a705b55c-6f3f-48e6-cd23-5cbe6d2ace9f","fieldPos":1130,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"2F19D6CD-4C04-4680-91B1-07FFD1BC62BB","restOperation":"FCADF07B-4EC8-4A75-DF76-5C85C1A79501","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"/*\r\n2021ENHANCEMENTS\r\nudpated by : vighnesh\r\nupdated on : jan 12, 2022\r\n\r\nupdated on: april 25, 2022\r\nfor defect: AGHP-2586\r\nINC: INC000025184045\r\n\r\n\r\najax response received containing updated material info\r\nmaterial info includes:\r\npending approver\r\napproved by\r\nreject by\r\n\r\n\r\nDEV NOTE:\r\nAGHP-2490 && AGHP-2586 defect remediation\r\nit was observed that if the user A stay in the approval tabs (AUDIT/RQC/SQAA) & other user B acts on the material,\r\nwhen the user A acts on the material, system did not consider the updated/latest pieces of the information.\r\npending approver, rejected by & approved by were still reflecting the old values & not the new ones.\r\nthis API response will first get the udpated info & update the model we have.\r\n\r\nAGHP-2586 defect remediation\r\nit was observed that when an SQ sends a material to any 1 of AUDIT/RQC/SQAA \r\n& if the 1 of them rejects/sends it back to SQ & if the SQ does not refresh the approval/confirmation page,\r\nsystem does not fetch the updated approval info which allows it the insert incorrect approval info when SQ sends to RQC/SQAA\r\n\r\nremediation is as stated above\r\n*/\r\nlet r = xhr.responseJSON;\r\nlet errTxt;\r\n\r\nif (r && r.flag.toUpperCase() === 'S' && r.appData.length === 1) {\r\n\r\n    let d = oIconTabBarApproversList.getModel().getData();\r\n    let rLen = r.appData.length;\r\n\r\n    let sel_panel_key = r.sel_panel_key;\r\n\r\n\r\n    /*\r\n    applying the latest/greatest approval information\r\n    */\r\n    d.material_pendingApprover = r.appData[rLen - 1].material_pendingApprover\r\n    d.material_approvedBy = r.appData[rLen - 1].material_approvedBy\r\n    d.material_rejectedBy = r.appData[rLen - 1].material_rejectedBy\r\n\r\n    oIconTabBarApproversList.getModel().refresh();\r\n\r\n    let selKey = oIconTabBarApproversList.getSelectedKey();\r\n\r\n\r\n    if (selKey) {\r\n        switch (selKey) {\r\n\r\n            /*\r\n            updated on : april 25, 2022\r\n            defect AGHP-2586\r\n            inc: INC000025184045\r\n\r\n            added SQA key to handle 3 panels under SQA\r\n            */\r\n            case 'SQA':\r\n                if (sel_panel_key && sel_panel_key !== '') {\r\n\r\n                    /*\r\n                    function to post SQ tab - 3 panel data\r\n\r\n                    sel_panel_key can be: \r\n                    AUDIT\r\n                    SQARegulatory\r\n                    SQAA\r\n\r\n                    see asl_getApprovalData script for more information.\r\n                    */\r\n                    postSQATabData(sel_panel_key);\r\n                } else {\r\n\r\n                    errTxt = 'Invalid approver panel key received. please reload application & try again';\r\n                    showMessageToast(errTxt);\r\n                    sap.ui.core.BusyIndicator.hide();\r\n\r\n                }\r\n                break;\r\n            /*\r\n            fix ends\r\n            */\r\n\r\n            case 'AUDIT':\r\n                postAuditValues(); //function to post Audit data\r\n                break;\r\n\r\n            case 'RQC':\r\n                postRQCTabData(); //function to post RQC data\r\n                break;\r\n\r\n            case 'SQAA':\r\n                postQualityAggrValues(); //function to post SQAA data\r\n                break;\r\n\r\n            default:\r\n                errTxt = 'Invalid Role selected. please reload & try again';\r\n                showMessageToast(errTxt);\r\n                sap.ui.core.BusyIndicator.hide();\r\n                break;\r\n        }\r\n    } else {\r\n        errTxt = 'Invalid Role selected. please reload & try again';\r\n        showMessageToast(errTxt);\r\n        sap.ui.core.BusyIndicator.hide();\r\n        return;\r\n    }\r\n\r\n} else {\r\n\r\n    errTxt = 'Failed to receive updated approval information. please reload & try again';\r\n    showMessageToast(errTxt);\r\n    sap.ui.core.BusyIndicator.hide();\r\n    return;\r\n}\r\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"1541fc4e-ece2-4361-f64b-8179cf62d0c9","fieldName":"DunsAPI","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1131,"fieldType":"neptune.folder","script":"","customComponent":false,"request":[],"response":[],"attributes":[]},{"fieldNo":"de37ba5d-fabe-42c4-d814-0c04008c5cea","fieldName":"oRestAPIValidateDunsNo","fieldParent":"1541fc4e-ece2-4361-f64b-8179cf62d0c9","fieldPos":1132,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"0A1B49FE-351B-47E9-BC7A-BC33159C485E","restOperation":"50B15FC2-6D15-4A8F-F2A7-856C57785A98","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"/*\nNOTE: validate DUNS number AJAX 200 code block\nUPDATED BY: VIGHNESH\nUPDATED OB: oct 10, 2021\nremoved unwanted code & comments, refactored the code\n2021ENHANCEMENTS\n*/\nsap.ui.core.BusyIndicator.hide();\n\nvar details = xhr.responseJSON.finalData;\nif (xhr.responseJSON.finalData.length === 0) {\n\n    let matDetails = oTableAddMaterial.getModel().getData();\n\n    let submitFlag = true;\n    let qualArr = [];\n\n    for (i = 0; i < matDetails.length; i++) {\n        qualArr.push(matDetails[i].qualificationStatus);\n    }\n\n    qualArr = qualArr.filter((item, i, ar) => ar.indexOf(item) === i); //get the unique statuses\n    // INC_INC000024081154_AUG4\n    var disqualifiedArr = [];\n    for (q = 0; q < matDetails.length; q++) {\n        if (matDetails[q].qualificationStatus === \"DISQUALIFIED\") {\n            disqualifiedArr.push(matDetails[q].qualificationStatus);\n        }\n\n    }\n    if (qualArr.includes(\"DRAFT\")) {\n        //do nothing -- here we will allow materials to get submitted or saved as draft and submit Flag would be true\n    } else if (disqualifiedArr.length === matDetails.length && g_selectedRole === \"REQ\" && matDetails.length > 0) {\n\n\n        //   else if (qualArr.includes(\"DISQUALIFIED\") && g_selectedRole === \"REQ\") { //check submit should not be allowed for REQ only\n        submitFlag = false; //here we would not allow the materials to get submitted when there is no DRAFT status at all but has disqualified\n    }\n    // INC_INC000024081154_AUG4_ENDS\n\n\n    if (g_actionButton === \"SEARCH DUNS\") {\n\n        oInputSupplierName.setValue(g_dunsData.DnBOrganizationName);\n        oInputDUNS.setValue(g_dunsData.DnBDUNSNumber);\n        oInputSupplierStreet.setValue(g_dunsData.DnBStreetAddressLine);\n        oInputSupplierCity.setValue(g_dunsData.DnBPrimaryTownName);\n        oInputSupplieRegion.setValue(g_dunsData.DnBTerritoryAbbreviatedName);\n        oInputSupplierPIN.setValue(g_dunsData.DnBPostalCode);\n        oInputSupplierCountry.setValue(g_dunsData.DnBCountryISOAlpha2Code);\n\n        clearDunsSearch(); //function to clear the DUNS search paramters\n        oDialogSearchDunsNum.close();\n\n        g_dataLoss = true; //2021ENHANCEMENTS -- set to true since DUNS data has been populated in the details page\n\n    } else if (g_actionButton === \"SAVE\") {\n        //VIGHNESHMAY20\n        if (submitFlag) {\n            updateSupplierInfo('DRAFT');\n        } else {\n            let msgTxt = \"cannot be saved as DRAFT as the Qualification status is DISQUALFIED\";\n            showMessageToast(msgTxt);\n        }\n        //VIGHNESHMAY20ENDS\n        //updateSupplierInfo('DRAFT'); -- commented by vighnesh since used in above loop\n    } else if (g_actionButton === \"SUBMIT\" || g_actionButton === \"UPDATE\") {\n        //VIGHNESHMAY20\n        if (submitFlag) {\n            updateSupplierInfo('IN QUALIFICATION');\n        } else {\n            let msgTxt = \"cannot be SUBMITTED as the Qualification status is DISQUALFIED\";\n            showMessageToast(msgTxt);\n        }\n        //VIGHNESHMAY20ENDS\n        //updateSupplierInfo('IN QUALIFICATION'); -- commented by vighnesh since used in above loop\n\n    }\n\n} else {\n\n    let region = \"\";\n    if (details[0].supplier_supplierAddressState === null || undefined) {\n        region = \"\"\n    } else {\n        region = details[0].supplier_supplierAddressState;\n    }\n    let errMsg = [];\n    if (oInputSupplierName.getValue().toLowerCase() === details[0].supplier_supplierName.toLowerCase()) {\n        errMsg.push(\"\\n Supplier Name\");\n    }\n    if (oInputDUNS.getValue().toLowerCase() === details[0].supplier_dunsNumber.toLowerCase()) {\n        errMsg.push(\"\\n Supplier DUNS Number\");\n    }\n    if (oInputSupplierStreet.getValue().toLowerCase() === details[0].supplier_supplierAddressStreet.toLowerCase()) {\n        errMsg.push(\"\\n Street\");\n    }\n    if (oInputSupplierCity.getValue().toLowerCase() === details[0].supplier_supplierAddressCity.toLowerCase()) {\n        errMsg.push(\"\\n City\");\n    }\n    if (oInputSupplierCountry.getValue().toLowerCase() === details[0].supplier_supplierAddressCountry.toLowerCase()) {\n        errMsg.push(\"\\n Country\");\n    }\n    if (oInputSupplieRegion.getValue().toLowerCase() === region.toLowerCase()) {\n        errMsg.push(\"\\n Region / State / Province\");\n    }\n    if (oInputSupplierPIN.getValue().toLowerCase() === details[0].supplier_supplierAddressPIN.toLowerCase()) {\n        errMsg.push(\"\\n Zip / Postal Code\");\n    }\n\n    if (g_actionButton === \"SEARCH DUNS\") {\n        showMessageToast(\"Duplicate DUNS Number encountered. Please change Supplier DUNS Number\");\n    } else {\n        showMessageToast(\"Duplicate supplier details encountered\" + \"\\n\" + \"\\n\" + \"Please change the following fields: \" + \"\\n\" + errMsg.toString());\n    }\n    g_actionButton = '';\n}","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"9ed744ff-5733-49ea-8124-4ba1bd15fec6","fieldName":"oRestAPIGetDunsMatchingToken","fieldParent":"1541fc4e-ece2-4361-f64b-8179cf62d0c9","fieldPos":1133,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"60D26E5E-773E-425C-95AA-7394FC3F12DD","restOperation":"93DEA519-A949-413F-99F7-98636958A9D2","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"g_searchMatchBookToken = \"Bearer \" + xhr.responseJSON.access_token;","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"7fdb93b8-c94f-4003-9e03-c0ada3e29b63","fieldName":"oRestAPISearchDunsInfo","fieldParent":"1541fc4e-ece2-4361-f64b-8179cf62d0c9","fieldPos":1134,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"0CF415C2-0E30-475C-9257-C95B8C8E39ED","restOperation":"5C61EBEA-2A99-4A90-B069-2F2E99B42C54","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"\nif (xhr.responseJSON.ResultText === \"Match Candidates\") {\n    if (xhr.responseJSON.Output.MatchOutput !== undefined) {\n        oTableSearchDunsInfo.setVisible(true);\n        modeloModelObjectSearchDunsNumber.setData(xhr.responseJSON.Output.MatchOutput);\n        var dunsModelData = modeloModelObjectSearchDunsNumber.oData;\n        oLabelDunsNoRecordCount.setVisible(true);\n        oLabelDunsNoRecordCount.setText(\"Total Records : \" + dunsModelData.length);\n        oButtonSearchDunsClearFilter.setVisible(true);\n        for (var j = 0; j < dunsModelData.length; j++) {\n            dunsModelData[j].editFlag = false;\n        }\n        modeloModelObjectSearchDunsNumber.setData(dunsModelData);\n        oTableSearchDunsInfo.setModel(modeloModelObjectSearchDunsNumber);\n        oButtonSelectDunsSearchInfo.setEnabled(true);\n        sap.ui.core.BusyIndicator.hide();\n    } else {\n        showMessageToast(\"No Data Available for Search Criteria\");\n        oTableSearchDunsInfo.setVisible(false); //saiteja16th\n        oLabelDunsNoRecordCount.setVisible(false); //saiteja16th\n        sap.ui.core.BusyIndicator.hide();\n    }\n\n} else {\n    showMessageToast(\"No Data Available for Search Criteria\");\n    oLabelDunsNoRecordCount.setVisible(false); //saiteja16th\n     oTableSearchDunsInfo.setVisible(false); //saiteja16th\n    sap.ui.core.BusyIndicator.hide();\n}\nsap.ui.core.BusyIndicator.hide();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"23776f70-a2b5-4f6f-931b-33b221ca92d9","fieldName":"getS3UploadDetails","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1135,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"9E6D2534-C698-47DF-B32D-3F9BC18022E5","restOperation":"0567023F-95CF-4C0E-F396-606DA4493955","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"\nvar s3Details = xhr.responseJSON;\ng_s3BucketName = xhr.responseJSON[0].bucketName;\ng_s3IdentityPoolId = xhr.responseJSON[0].identityPoolId;\n\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\n    IdentityPoolId: g_s3IdentityPoolId,  // 2. Enter your identity pool\n});\nAWS.config.credentials.get(function (err) {\n    if (err) console.log(err);\n});\n\n\nbucket = new AWS.S3({\n    params: {\n        Bucket: g_s3BucketName\n    }\n});\nsap.ui.core.BusyIndicator.hide();\n\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"73d1d6e4-3fe0-439e-ec34-2ccb8aa72c38","fieldName":"fileAttachmentsDelete","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1136,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"304D8240-E146-4374-AC2D-4306DF26DF74","restOperation":"D6BC1C1D-D53D-46C7-CB05-005763183DFA","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"/*\r\nupdated by: vighnesh\r\nupdated on : april 21, 2022\r\n\r\nAGHP-2553, 2555, 2556\r\n*/\r\nlet x = xhr.responseJSON;\r\n\r\nif (x && x.tableName && x.tableName !== '' && x.id && x.id !== '') {\r\n\r\n    let txtMsg;\r\n\r\n    switch (x.tableName) {\r\n\r\n        case 'asl_file_attachments':\r\n            if (x.attachType) {\r\n\r\n                switch (x.attachType) {\r\n\r\n                    case 'SRATIONALE':\r\n                    case 'SQA':\r\n                        txtMsg = 'File Attachment ' + x.statusMsg;\r\n                        showMessageToast(txtMsg);\r\n                        break;\r\n\r\n                    case 'MATERIAL':\r\n                        let ind;\r\n\r\n                        if (x.material_ID_selected && x.material_ID_selected !== '') {\r\n                            let matData = oTableAddMaterial.getModel().getData();\r\n                            ind = matData.findIndex(s => s.matInfoId === x.material_ID_selected);\r\n\r\n\r\n                            if (ind !== -1) {\r\n                                matData[ind].materialAttachments = tableMatFiles.getModel().getData();\r\n                                oTableAddMaterial.getModel().setData(matData);\r\n                                oTableAddMaterial.getModel().refresh();\r\n                            }\r\n\r\n                            txtMsg = 'File Attachment ' + x.statusMsg;\r\n                            showMessageToast(txtMsg);\r\n\r\n                        } else {\r\n                            showMessageToast(g_unkwown_matId_ajax_file_deletion);\r\n                        }\r\n                        break;\r\n                }\r\n\r\n\r\n\r\n            } else {\r\n                showMessageToast(g_unkwown_type_ajax_file_deletion);\r\n            }\r\n            break;\r\n\r\n    }\r\n\r\n} else {\r\n    showMessageToast(g_unkwown_para_ajax_file_deletion);\r\n}\r\n\r\nsap.ui.core.BusyIndicator.hide();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"handleErrors(xhr);","translation":[]}]},{"fieldNo":"9d9c9bfc-3f57-4eba-c2d8-edc9cee306d7","fieldName":"questionDescription","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1137,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"81AB9A28-2640-4DF6-9A18-6899FC8F90FF","restOperation":"19E9528F-22DF-47A4-F640-491EA97C1116","request":[],"response":[{"status":200,"dataId":"af968672-7c0d-462c-f02c-481c643d3110","modelFieldNo":"f801b965-1a80-4fdd-f87d-50e788d46493"}],"attributes":[{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr, status);","script":"handleErrors(xhr, status);","translation":[]}]},{"fieldNo":"cfef0132-ebe1-4864-e5d2-9112a7a3be35","fieldName":"supplierInfo","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1138,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"D9DD7396-94E0-48F7-9552-B1C4D44CA8EF","restOperation":"6EE0F664-DBE4-4C75-C55F-0FE716630EFA","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"applyData(xhr.responseJSON);\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"0420bc3b-3d56-49d3-d131-04e77e0dfb09","fieldName":"saveSupplier","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1139,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"304D8240-E146-4374-AC2D-4306DF26DF74","restOperation":"E90AA14D-2F77-4CF4-91F3-C309B2C793AD","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"/*\ncode block to give out confirmation messages\nUPDATED BY: VIGHNESH\nUPDATED ON: Oct 6, 2021\nremoved unwanted comments & removed old supplier IDS & added supplier name\n2021ENHANCEMENTS\n*/\nsap.ui.core.BusyIndicator.hide();\n \n//NOT SURE CODE\nif ((g_action === 'MODIFY' || g_action === 'COPY') && g_materialId !== \"\") {\n    /*Don't change the action*/\n} else {\n    g_action = 'EDIT';\n}\n\n//function to apply data over the supplier/material/confirmation & approval pages\nlet data = xhr.responseJSON;\napplyData(data);\n\n\n/*different scenario of saving a supplier*/\nlet supName = data.finalResponse.supplierName; //fetching supplier Name to display\n\n//SAVE AS DRAFT\nif (g_actionButton === \"SAVE\") {\n    let msgDlg = \"Supplier : \" + supName + \" is successfully saved.\";\n    showMessageToast(msgDlg);\n}\n\n//SUBMIT\nif (g_actionButton === \"SUBMIT\") {\n    let msgDlg = \"Supplier : \" + supName + \" is successfully submitted to OneASL System.\";\n    showMessageToast(msgDlg);\n    goBackToDashboard();\n}\n\n//UPDATE\nif (g_actionButton === \"UPDATE\") {\n    showMessageToast(\"Successfully updated all the details \");\n}\ng_actionButton = '';\n\n/*\nclearing off global variables\n*/\n//2021ENHANCEMENTS sprint 3\ng_dataLoss = false;\ng_isMatEdited = false;\ng_matDataLoss = false;\ng_goToDashClicked = false;\n\n\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"handleErrors(xhr,status);\n","translation":[]}]},{"fieldNo":"2c3d4408-450d-4d9c-90a2-02f05c29ab8d","fieldName":"adminConfig","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1140,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"139C8741-E3EC-4801-9A61-73875DFEDD3F","restOperation":"979A10D7-1225-4C1A-8A84-350391C4A029","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"var configData = xhr.responseJSON;\n\n/*\nupdated by : vighnesh\nupdated on : march 22, 2022\n\nglobal array to hold all qualification statuses & will be dynamic (will fetch all configured values)\n*/\nvar g_qualStatArr = [];\n\n\nloadComboBoxes(xhr.responseJSON);\nadminConfigHolder.getModel().setData(configData);\n\n\nif (g_action === 'BATCHUPLOAD' && g_selectedRole === 'ADMIN') {\n    var d = JSON.parse(JSON.stringify(g_batchupload_clicked_record));\n    applyData(d);\n\n} else {\n    if (g_action === 'COPY' || g_action === \"MODIFY\") {\n        g_qualificationStatus = []; //not sure code\n    }\n    var options = {\n        data: {\n            \"supplierInfoId\": g_supplierId,\n            \"materialId\": g_materialId,\n            \"actionType\": g_action,\n            \"userRole\": g_selectedRole,\n            \"userId\": g_users.userId,\n            \"qualificationStatus\": g_qualificationStatus,\n            \"dashboardName\": g_dashboard_dashboardName\n        }\n    };\n    apisupplierInfo(options);\n}\n\n\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr, status); //march 22, 2022","script":"handleErrors(xhr, status); //march 22, 2022","translation":[]}]},{"fieldNo":"79519257-d9ab-4f65-beed-42c4256db921","fieldName":"oRestAPIDeleteSupplierInfoTables","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1141,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"304D8240-E146-4374-AC2D-4306DF26DF74","restOperation":"D6BC1C1D-D53D-46C7-CB05-005763183DFA","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"sap.ui.core.BusyIndicator.hide();\r\n//Satya - 05/17/2021: Based on the response data, display the message or delete the row from the model.\r\nlet resData = xhr.responseJSON;\r\nif(resData && resData.statusCode === 201){\r\n    showMessageToast(resData.statusMsg);\r\n}else{\r\n    if(resData.deletedMatDbId){\r\n        ModelData.Delete(oTableAddMaterial, \"matDbId\", resData.deletedMatDbId);\r\n        countMaterial();\r\n    }\r\n}","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"ffb5e4df-8361-4ced-9f3f-0593042155d1","fieldName":"oRestAPILdap","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1142,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"F819715B-3C21-4C76-919E-D8A4724CB06A","restOperation":"1ED03FA9-165C-4103-C129-B3CE07427B60","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"var s = xhr.responseJSON.data\n\nif (s) {\n    var qualContact;\n    if (s.length === 0) {\n        if (g_ui_multi_emailinput === oMultiInputQualContact.sId) {\n        \n            qualContact = oMultiInputQualContact.getValue();\n        } else if (g_ui_multi_emailinput === oMultiInputProContactM.sId) {\n            \n            qualContact = oMultiInputProContactM.getValue();\n        } else if (g_ui_multi_emailinput === oMultiInputSrcContact.sId) {\n            \n            qualContact = oMultiInputSrcContact.getValue();\n        }\n        showMessageToast(qualContact + \" could not be found, Please enter a valid Email ID\");\n        return;\n    }\n\n    s = s.slice(0, 20);\n\n    if (g_ui_multi_emailinput === oMultiInputQualContact.sId) {\n        oMultiInputQualContact.getModel().setData(s);\n    } else if (g_ui_multi_emailinput === oMultiInputProContactM.sId) {\n        oMultiInputProContactM.getModel().setData(s);\n    } else if (g_ui_multi_emailinput === oMultiInputSrcContact.sId) {\n        oMultiInputSrcContact.getModel().setData(s);\n    }\n}\n\nResetTimeOutTimer();\n","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"03c1659b-34ec-4a38-96fe-f7b148b7c124","fieldName":"updateSupplierContact","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1143,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"23681509-4904-44AA-88D7-72F87FED0930","restOperation":"F75A0354-06C5-4AC1-CE0B-0A93F9F54286","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\n*/\noTableSupplierContactInfo.getModel().setData(xhr.responseJSON);\n\nsap.ui.core.BusyIndicator.hide();\ng_dataLoss = false;\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr, status);","script":"handleErrors(xhr, status);","translation":[]}]},{"fieldNo":"7b5cd8dc-f975-4c92-c4cc-4a74a2e15fba","fieldName":"updateMaterialContact","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1144,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"B82E3477-9D21-4834-A9E7-8B84E2515DEA","restOperation":"1FC3687D-DD14-445C-FF96-B992F223AD7C","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"/*\n2021ENHANCEMENTS\nUPDATED BY: VIGHNESH\nUPDATED ON: oct 11, 2021\n*/\nlet d = xhr.responseJSON.data;\nModelData.Update(oTableAddMaterial, \"matDbId\", d.matDbId, d);\n\nsap.ui.core.BusyIndicator.hide();\ng_dataLoss = false;\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"Anonymous Function","script":"handleErrors(xhr, status);","translation":[]}]},{"fieldNo":"cce6ecfa-1b05-400d-a3a4-796c870f80ec","fieldName":"getCommentHistory","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1145,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"F7F864AC-3753-4C25-8D6A-41E12271766A","restOperation":"CB8C3936-E3E7-4B4A-91B8-C61725DD66C0","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"if (xhr.responseJSON) {\n    tabCHistory.getModel().setData(xhr.responseJSON.records);\n    popCommentsHistory.setBusy(false);\n}\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr, status)","script":"handleErrors(xhr, status)","translation":[]}]},{"fieldNo":"450321ba-c62b-4abf-e647-076a78c81d28","fieldName":"adGroupApprovers","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1146,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"986F049C-EFED-462D-9EAD-CB38C98485C4","restOperation":"C738DD8B-7184-42DF-8926-5EEBA537AB41","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"ADGroupApprovers.getModel().setData(xhr.responseJSON);\nafterGetADGroups();\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr,status);","script":"handleErrors(xhr,status);","translation":[]}]},{"fieldNo":"978cdaf8-e219-4106-e30e-28f9e14100ff","fieldName":"oRestAPIHelpTexts","fieldParent":"f4d696a6-c47e-49c3-c029-fb95ebfd3ecd","fieldPos":1147,"fieldType":"neptune.restapi","script":"","customComponent":false,"restSource":"198BB763-DA0B-4BB9-A6BA-D5543C859339","restOperation":"C1569A4F-4007-4CBA-E77A-AA8EA74C1431","request":[],"response":[],"attributes":[{"attribute":"ajaxSuccess","grouping":"Events","value":"Anonymous Function","script":"g_model_helptext.setData(xhr.responseJSON);\nResetTimeOutTimer();","translation":[]},{"attribute":"ajaxError","grouping":"Events","value":"handleErrors(xhr, status);","script":"handleErrors(xhr, status);","translation":[]}]}],"ui5_chart":false,"ui5_m":true,"ui5_f":false,"ui5_table":true,"ui5_tnt":false,"ui5_uxap":false,"ui5_bootstrap":false,"libHighchart":false,"libHighmap":false}}